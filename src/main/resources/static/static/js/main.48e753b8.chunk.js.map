{"version":3,"sources":["types/enums.ts","utils/common-helper.ts","types/EmployeeLevel.ts","utils/constants.ts","context/AppProvider.tsx","services/helpers/api.config.ts","services/helpers/web-api.ts","services/auth-service.ts","components/core/MenuListItems.tsx","components/core/CopyRight.tsx","context/UserProvider.tsx","components/hooks/use-authentication.tsx","pages/HomePage.tsx","services/dashboard-service.ts","pages/SettingsPage.tsx","services/department-service.ts","pages/department/DepartmentListPage.tsx","pages/department/DepartmentCreatePage.tsx","pages/department/EditDepartment.tsx","services/supplier-service.ts","pages/supplier/SupplierListPage.tsx","pages/supplier/CreateSupplierPage.tsx","pages/supplier/EditSupplierPage.tsx","services/user-service.ts","pages/user/ListUserPage.tsx","pages/user/CreateUserPage.tsx","pages/user/EditUserPage.tsx","types/RequestReason.ts","pages/item-request/CreateItemRequestPage.tsx","services/item-request-service.ts","pages/item-request/MyRequestListPage.tsx","pages/item-request/HODItemRequestListPage.tsx","pages/NotAuthorizedPage.tsx","pages/item-request/GeneralManagerItemRequestListPage.tsx","pages/item-request/ProcurementOfficerRequestListPage.tsx","components/layouts/AppLayout.tsx","assets/images/shopping2.jpg","pages/LoginPage.tsx","utils/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EndorsementStatus","RequestApproval","RequestStatus","UserRoles","EmployeeLevel","MySwal","withReactContent","Swal","showSuccessAlert","title","message","fire","icon","text","showErrorAlert","prettifyDateTime","date","dateFormatter","formatRequestStatusColor","value","APPROVAL_CANCELLED","ENDORSEMENT_CANCELLED","PENDING","getLocalStorageTheme","localStorage","getItem","employeeLevels","id","REGULAR","label","HOD","PROCUREMENT_OFFICER","GENERAL_MANAGER","ADMIN","LIGHT_THEME_MODE","DARK_THEME_MODE","appPages","APP_MODULES","path","APP_PAGES_AND_ROLES","dashboardRoles","createUserRoles","listUserRoles","editUserRoles","deleteUserRoles","listDepartmentsRoles","editDepartmentRoles","createDepartmentRoles","deleteDepartmentRoles","listSupplierRoles","editSupplierRoles","createSupplierRoles","deleteSupplierRoles","hodEndorseRoles","generalManagerApproveRoles","procurementOfficerApproveRoles","contextDefaultValues","currentPage","theme","updateCurrentPage","updateTheme","AppContext","createContext","AppProvider","children","useState","setCurrentPage","setTheme","Provider","pageVal","themeVal","apiConfig","timeout","baseURL","paramsSerializer","params","qs","indices","webApi","axios","create","interceptors","request","use","config","authUser","getUserDetailsFromStorage","url","indexOf","headers","token","console","log","error","Promise","reject","response","status","data","resolve","storeData","JSON","parse","userHasAnyOfRoles","userRole","roles","iconSize","useStyles","makeStyles","root","width","maxWidth","backgroundColor","palette","background","default","nested","paddingLeft","spacing","activeRoute","color","link","textDecoration","faNavIcon","height","listItem","primary","main","MenuListItems","classes","inventoryOpen","setInventoryExpand","location","useLocation","appContext","useContext","activeLink","subString","pathname","length","handleSetCurrentPageName","to","className","ListItem","button","selected","ListItemIcon","ListItemText","onClick","Collapse","in","unmountOnExit","List","component","disablePadding","faTruckMoving","style","CopyRight","Typography","variant","align","Link","href","initUser","firstName","lastName","fullName","email","employeeLevel","employeeId","phoneNumber","department","name","description","createdAt","storeUser","defaultContextValues","user","saveUser","removeUser","UserContext","UserProvider","setUser","userVal","useAuthentication","history","useHistory","useEffect","push","card","HomePage","props","requestPerDepartment","setRequestPerDepartment","setLoadingRequestPerDepartment","fetchRequestPerCurrentMonthPerDepartment","service","method","then","catch","finally","Grid","container","item","md","lg","sm","xs","Card","CardHeader","subheader","CardContent","PieChart","Pie","dataKey","nameKey","CardActions","disableSpacing","cursor","display","flexFlow","headerDiv","settingsDiv","paper","myAvatar","getContrastText","deepPurple","userField","marginTop","textField","marginBottom","SettingsPage","page","changePasswordDialogOpen","setChangePasswordDialogOpen","oldPassword","newPassword","userPayload","setUserPayload","submitLoading","userContext","useTheme","handleCloseChangePasswordDialog","handleInputChange","event","target","eventName","Paper","elevation","padding","minHeight","textAlign","Divider","flexDirection","justifyContent","Avatar","toUpperCase","TextField","size","disabled","Button","ListItemSecondaryAction","Switch","edge","onChange","checked","setItem","storeThemeInLocalStorage","Dialog","open","onClose","aria-labelledby","disableBackdropClick","DialogTitle","DialogContent","type","DialogActions","CircularProgress","getAllDepartments","tableColumns","minWidth","headerBar","alignItems","tableContainer","maxHeight","DepartmentListPage","departments","setDepartments","loading","setLoading","setPage","rowsPerPage","setRowsPerPage","useRouteMatch","deleteDepartment","departmentService","filter","dpt","aria-label","disableElevation","TableContainer","LinearProgress","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","TableBody","slice","row","hover","role","tabIndex","IconButton","e","fontSize","showDenyButton","confirmButtonText","preConfirm","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","form","DepartmentCreatePage","payload","setPayload","setSubmitLoading","goBack","autoComplete","onSubmit","departmentPayload","preventDefault","allowOutsideClick","willClose","float","EditDepartmentPage","departmentId","useParams","initDepartment","parseInt","servicePath","getAllSuppliers","SupplierListPage","suppliers","setSuppliers","deleteSupplier","supplierService","CreateSupplierPage","phone_no","EditSupplierPage","supplierId","format","ListUserPage","users","setUsers","deleteUser","userService","fetchAllUsers","CreateUserPage","phoneNo","handleSelectChange","find","myPayload","password","FormControl","InputLabel","htmlFor","Select","native","level","EditUserPage","userId","payloadModel","RequestReason","RequestReasonList","headerColumns","CreateItemRequestPage","entries","setEntries","reason","FreshNeed","purpose","quantity","entry","setEntry","modalOpen","setModalOpen","createItemRequest","multiRequestPayload","multipleRequestItem","employee_id","handleCloseDialog","Add","index","idx","handleRemoveEntry","Send","marginLeft","dividers","myEntry","MyRequestListPage","requests","setRequests","authService","fetchMyRequests","formatedValue","borderRadius","HODItemRequestListPage","endorseRequest","requestId","requestService","cancelRequest","endorsement","marginRight","CheckCircleTwoTone","CancelOutlined","NotAuthorizedPage","GeneralManagerItemRequestListPage","approveRequest","unitPrice","initRequest","ProcurmentOfficerRequestListPage","dialogOpen","setDialogOpen","handleOpenDialog","disableButton","ENDORSED","handleAssignClick","secondary","supplier","Number","rq","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","mainContainer","fixedHeight","AppLayout","setOpen","anchorEl","setAnchorEl","useRef","handleProfileMenuClose","CssBaseline","AppBar","clsx","Toolbar","src","alt","noWrap","aria-haspopup","currentTarget","Person","Menu","keepMounted","Boolean","MenuItem","window","removeItem","Drawer","Container","TransitionGroup","CSSTransition","classNames","EditDepartment","exact","key","image","backgroundImage","backgroungImg","backgroundRepeat","grey","backgroundSize","backgroundPosition","image1","margin","avatar","submit","LoginPage","rememberMe","square","LockOutlined","noValidate","loginPayload","employee","stringify","authservice","required","fullWidth","autoFocus","FormControlLabel","control","Checkbox","Box","mt","lightTheme","dark","light","darkTheme","App","themeData","createMuiTheme","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","getElementById","ReactDOM","render","debugContextDevtool","debugReducer","debugContext","disable","disableAutoMode"],"mappings":"6JAAYA,EAMAC,EAOAC,EAOAC,E,2gBApBAH,K,oBAAAA,E,oBAAAA,E,mBAAAA,M,cAMAC,K,oBAAAA,E,oBAAAA,E,kBAAAA,E,WAAAA,M,cAOAC,K,sBAAAA,E,8CAAAA,E,wCAAAA,E,mBAAAA,M,KAOAC,M,ICdZ,ICNYC,GDMNC,GAASC,KAAiBC,MAQzB,SAASC,GAAiBC,EAAeC,GAC9CL,GAAOM,KAAK,CACVC,KAAM,UACNH,QACAI,KAAMH,IAIH,SAASI,GAAeL,EAAeC,GAC5CL,GAAOM,KAAK,CACVC,KAAM,QACNH,QACAI,KAAMH,IAIH,SAASK,GAAiBC,GAC/B,OAAOC,KAAsBD,EAAM,yBAG9B,SAASE,GAAyBC,GACvC,OAAGA,IAAUjB,EAAckB,oBAAsBD,IAAUjB,EAAcmB,sBAChE,UACCF,IAAUjB,EAAcoB,QACzB,UAEA,UAQJ,SAASC,KACd,OAAOC,aAAaC,QAAQ,U,SCjDlBrB,K,kBAAAA,E,UAAAA,E,kCAAAA,E,0CAAAA,E,eAAAA,Q,KAQL,IAAMsB,GAAiB,CAC5B,CAACC,GAAIvB,GAAcwB,QAASC,MAAO,WACnC,CAACF,GAAIvB,GAAc0B,IAAKD,MAAO,sBAC/B,CAACF,GAAIvB,GAAc2B,oBAAqBF,MAAO,uBAC/C,CAACF,GAAIvB,GAAc4B,gBAAiBH,MAAO,mBAC3C,CAACF,GAAIvB,GAAc6B,MAAOJ,MAAO,iBCVtBK,GAAmB,QACnBC,GAAkB,OAOlBC,GACI,YADJA,GAES,kBAFTA,GAIC,aAIDC,GAGM,CAACC,KAAM,WAAYT,MAAO,YAHhCQ,GAKU,CAACC,KAAM,qBAAsBT,MAAO,gBAK9CU,GAAsB,CACjCC,eAAgB,CAACpC,GAAc6B,MAAO7B,GAAc2B,oBAAqB3B,GAAc0B,IAAK1B,GAAc4B,iBAE1GS,gBAAiB,CAACrC,GAAc6B,MAAO7B,GAAc0B,KACrDY,cAAe,CAACtC,GAAc6B,MAAO7B,GAAc4B,gBAAiB5B,GAAc0B,KAClFa,cAAe,CAACvC,GAAc6B,OAC9BW,gBAAiB,CAACxC,GAAc6B,OAEhCY,qBAAsB,CAACzC,GAAc6B,MAAO7B,GAAc4B,gBAAiB5B,GAAc0B,KACzFgB,oBAAqB,CAAC1C,GAAc6B,MAAO7B,GAAc0B,KACzDiB,sBAAuB,CAAC3C,GAAc6B,OACtCe,sBAAuB,CAAC5C,GAAc6B,MAAO7B,GAAc0B,KAE3DmB,kBAAmB,CAAC7C,GAAc6B,MAAO7B,GAAc4B,gBAAiB5B,GAAc0B,KACtFoB,kBAAmB,CAAC9C,GAAc6B,MAAO7B,GAAc0B,KACvDqB,oBAAqB,CAAC/C,GAAc6B,MAAO7B,GAAc0B,KACzDsB,oBAAqB,CAAChD,GAAc6B,MAAO7B,GAAc0B,KAEzDuB,gBAAiB,CAACjD,GAAc6B,MAAO7B,GAAc4B,gBAAiB5B,GAAc0B,KACpFwB,2BAA4B,CAAClD,GAAc6B,MAAO7B,GAAc0B,IAAK1B,GAAc4B,iBACnFuB,+BAAgC,CAACnD,GAAc6B,MAAO7B,GAAc0B,IAAK1B,GAAc2B,sB,QC5CnFyB,GAAwC,CAC5CC,YAAarB,GACbsB,MAAOnC,MAA2BA,OAA2BY,GAAmBA,GAAkBD,GAClGyB,kBAAmB,aACnBC,YAAa,cAGFC,GAAaC,wBACxBN,IAyBaO,GArBS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACFC,mBAAiBT,GAAqBC,aADpC,mBACjCA,EADiC,KACpBS,EADoB,OAEdD,mBAAiBT,GAAqBE,OAFxB,mBAEjCA,EAFiC,KAE1BS,EAF0B,KAOxC,OACE,eAACN,GAAWO,SAAZ,CACEjD,MAAO,CACLuC,QACAD,cACAE,kBARoB,SAACU,GAAD,OAAqBH,GAAe,SAACT,GAAD,OAAiBY,MASzET,YARc,SAACU,GAAD,OAAsBH,GAAS,SAACT,GAAD,OAAUY,OAG3D,SAQGN,K,+BCdMO,GAAY,CACvBC,QAAS,IACTC,QAAS,4BAETC,iBAAkB,SAACC,GAAD,OAAsBC,aAAaD,EAAQ,CAAEE,SAAS,MCdpEC,GAAwBC,KAAMC,OAAOT,IAE3CO,GAAOG,aAAaC,QAAQC,KAAI,SAAAC,GAAU,IAAD,EACjCC,EAAWC,KAQjB,OAN2C,KAAxC,UAAAF,EAAOG,WAAP,eAAYC,QAAQ,iBAClBH,IACDD,EAAOK,QAAP,+BAA4CJ,EAASK,QAGzDC,QAAQC,IAAI,SAAUR,GACfA,KACN,SAAAS,GACD,OAAOC,QAAQC,OAAOF,MAIxBf,GAAOG,aAAae,SAASb,KAAI,SAACa,GAChCL,QAAQC,IAAI,WAAYI,GADiD,IAEjEC,EAAWD,EAAXC,OACR,GAxBwB,MAwBrBA,EAA8B,CAAC,IACzBC,EAAQF,EAARE,KACP,OAAOJ,QAAQK,QAAQD,GAKvB,OAHc,MAAXD,GACDN,QAAQC,IAAI,OAEPE,QAAQC,OAAOC,MAEvB,SAAAH,GAED,OADAF,QAAQC,IAAI,QAASC,GACdC,QAAQC,OAAOF,MAGTf,UCVR,SAASQ,KACd,IAAMc,EAAY5E,aAAaC,QAAQ,QAEvC,OAAG2E,EACMC,KAAKC,MAAMF,QAElB,EASG,SAASG,GAAkBC,EAAeC,GAC/C,OAAID,EAKGC,EAAMjB,QAAQgB,IAAa,GAJhCb,QAAQC,IAAI,gBACL,GC7BX,IAAMc,GAAW,OAGXC,GAAYC,aAAW,SAAAlD,GAAK,MAAK,CACrCmD,KAAM,CACJC,MAAO,OACPC,SAAU,IACVC,gBAAiBtD,EAAMuD,QAAQC,WAAWC,SAE5CC,OAAQ,CACNC,YAAa3D,EAAM4D,QAAQ,IAE7BC,YAAa,CACXP,gBAAiB,MACjBQ,MAAO,SAETC,KAAM,CACJD,MAAO,UACPE,eAAgB,QAElBC,UAAW,CACTC,OAAQ,OACRd,MAAO,QAETe,SAAU,CACRb,gBAAgB,GAAD,OAAKtD,EAAMuD,QAAQa,QAAQC,KAA3B,eACfP,MAAO,eAwIIQ,GA/HiC,SAAC,GAAgB,IAAf3C,EAAc,EAAdA,SAC1C4C,EAAUtB,KAD8C,EAElB1C,oBAAS,GAFS,mBAEvDiE,EAFuD,KAExCC,EAFwC,OAGtBlE,oBAAS,GAHa,gCAIpBA,oBAAS,IAJW,gCAMtBA,mBAAS,KANa,mBAOxDmE,GAPwD,UAO7CC,eACXC,EAAaC,qBAAW1E,IAOxB2E,EAAa,SAACC,GAElB,SADoBL,EAASM,WAAaD,IAG/BL,EAASM,SAASlD,QAAQiD,IAAc,GAAOA,EAAUE,OAAS,GAWzEC,EAA2B,SAACzH,GAChCmH,EAAW3E,kBAAkBxC,IAG/B,OACE,gBAAC,WAAD,WACGoF,GAAiB,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAUoB,MAAOlE,GAAoBC,gBACxD,eAAC,IAAD,CAAMqG,GAAG,IAAIC,UAAWb,EAAQR,KAAMD,MAAM,UAA5C,SACE,gBAACuB,EAAA,EAAD,CAAUC,QAAM,EAACC,SAAWT,EAAW,KAAvC,UACE,eAACU,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAcrB,QAAQ,mBAGxB,KACDvB,GAAiB,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAUoB,MAAOlE,GAAoBM,sBACxD,eAAC,IAAD,CAAMgG,GAAG,eAAeC,UAAWb,EAAQR,KAAM2B,QAAS,kBAAKR,EAAyBxG,KAAxF,SACE,gBAAC2G,EAAA,EAAD,CAAUC,QAAM,EAACC,SAAUT,EAAW,eAAtC,UACE,eAACU,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAcrB,QAAQ,oBAEhB,KACV,gBAACiB,EAAA,EAAD,CAAUC,QAAM,EAACI,QA7CS,WAE5BjB,GADWD,IA4CwCe,SAAUT,EAAW,uBAAtE,UACE,eAACU,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAcrB,QAAQ,kBACrBI,EAAgB,eAAC,IAAD,IAAiB,eAAC,IAAD,OAEpC,eAACmB,EAAA,EAAD,CAAUC,GAAIpB,EAAe1D,QAAQ,OAAO+E,eAAa,EAAzD,SACE,gBAACC,EAAA,EAAD,CAAMC,UAAU,MAAMC,gBAAc,EAApC,UACE,eAAC,IAAD,CAAMb,GAAG,kCAAkCC,UAAWb,EAAQR,KAA9D,SACE,gBAACsB,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWb,EAAQb,OAApC,UACE,eAAC8B,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAcrB,QAAQ,qBAGzBvB,GAAiB,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAUoB,MAAOlE,GAAoBc,iBAAmB,eAAC,IAAD,CAAMwF,GAAG,wCAAwCC,UAAWb,EAAQR,KAApE,SACzE,gBAACsB,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWb,EAAQb,OAApC,UACE,eAAC8B,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAcrB,QAAQ,2BAEhB,KACTvB,GAAiB,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAUoB,MAAOlE,GAAoBe,4BAA6B,eAAC,IAAD,CAAMuF,GAAG,oDAAoDC,UAAWb,EAAQR,KAAhF,SACnF,gBAACsB,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWb,EAAQb,OAApC,UACE,eAAC8B,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAcrB,QAAQ,qBAEhB,KACTvB,GAAiB,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAUoB,MAAOlE,GAAoBgB,gCAAkC,eAAC,IAAD,CAAMsF,GAAG,wDAAwDC,UAAWb,EAAQR,KAApF,SACxF,gBAACsB,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWb,EAAQb,OAApC,UACE,eAAC8B,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAcrB,QAAQ,2BAEhB,UAGbvB,GAAiB,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAUoB,MAAOlE,GAAoBU,mBAAqB,eAAC,IAAD,CAAM4F,GAAG,iCAAiCC,UAAWb,EAAQR,KAA7D,SAC3E,gBAACsB,EAAA,EAAD,CAAUC,QAAM,EAACC,SAAUT,EAAW,cAAtC,UACE,eAACU,EAAA,EAAD,UACE,eAAC,IAAD,CAAiBtI,KAAM+I,KAAeC,MAAO,CAAC9C,MAAOJ,GAAUkB,OAAQlB,QAEzE,eAACyC,EAAA,EAAD,CAAcrB,QAAQ,mBAEhB,KACTvB,GAAiB,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAUoB,MAAOlE,GAAoBG,eAAiB,eAAC,IAAD,CAAMmG,GAAG,yBAAyBC,UAAWb,EAAQR,KAAM2B,QAAS,kBAAKR,EAAyBxG,KAAlG,SACvE,gBAAC2G,EAAA,EAAD,CAAUC,QAAM,EAACC,SAAUT,EAAW,oBAAtC,UACE,eAACU,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAcrB,QAAQ,yBAEhB,KACV,eAAC,IAAD,CAAMe,GAAG,YAAYC,UAAWb,EAAQR,KAAxC,SACE,gBAACsB,EAAA,EAAD,CAAUC,QAAM,EAACC,SAAUT,EAAW,YAAtC,UACE,eAACU,EAAA,EAAD,UACE,eAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CAAcrB,QAAQ,sB,UClKjB+B,GAXsB,WACnC,OACE,gBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQvC,MAAM,gBAAgBwC,MAAM,SAAxD,UACE,mDACA,eAACC,GAAA,EAAD,CAAMzC,MAAM,UAAU0C,KAAK,IAA3B,8BCKAC,GAAW,CACfxI,GAAI,GACJyI,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,cAAe,GACfC,WAAY,GACZC,YAAa,GACbjE,MAAO,GACPkE,WAhBqC,CACrChJ,GAAI,KACJiJ,KAAM,GACNC,YAAa,IAcbC,UAAW,GACXpF,MAAO,IAGHqF,GAAYzF,KAEZ0F,GAAyC,CAC7CC,KAAMF,IAAwBZ,GAC9Be,SAAU,SAAC7F,KACX8F,WAAY,cAIDC,GAActH,wBAAgCkH,IAqB5CK,GAnBU,SAAC,GAAgB,IAAfrH,EAAc,EAAdA,SAAc,EACfC,mBAAmB+G,GAAqBC,MADzB,mBAChCA,EADgC,KAC1BK,EAD0B,KAMvC,OACE,eAACF,GAAYhH,SAAb,CACEjD,MAAO,CACL8J,OACAC,SAPW,SAACK,GAAD,OAAsBD,EAAQC,IAQzCJ,WAPa,kBAAKG,EAAQN,GAAqBC,QAGnD,SAOGjH,K,sEC3BQwH,GAjBqC,SAAC,GAAc,IAAZ/E,EAAW,EAAXA,MAC/CgF,EAAUC,cAahB,OAZAC,qBAAU,WACR,IAAMtG,EAAWC,KACXkB,EAAQ,OAAGnB,QAAH,IAAGA,OAAH,EAAGA,EAAUoB,MAC3B,IAAIpB,EACF,OAAOoG,EAAQG,KAAK,UAGnBnF,GAASA,EAAMjB,QAAQgB,GAAY,GACpCiF,EAAQG,KAAK,sBAIV,M,wBCdHjF,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,CACJC,MAAO,QAIT+E,KAAM,CACJ/E,MAAO,YAgGIgF,GA7FqB,SAACC,GACnCP,GAAkB,CAAC/E,MAAOlE,GAAoBC,iBADF,MAEYyB,mBAAkC,IAF9C,mBAErC+H,EAFqC,KAEfC,EAFe,OAGyBhI,oBAAkB,GAH3C,mBAGTiI,GAHS,WAItCjE,EAAUtB,KAEVwF,EAA2C,WAC/CD,GAA+B,GCpB1B,IAAIpG,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAK,iDACL8G,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAAcG,EAAQH,MAC3BuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SDgBnByG,MAAK,SAAAtG,GAAa,IACVC,EAAgBD,EAAhBC,OAAQC,EAAQF,EAARE,KACD,YAAXD,GACDgG,EAAwB/F,MAG3BqG,OAAM,eACNC,SAAQ,WACPN,GAA+B,OAQrC,OAJAP,qBAAU,WACRQ,MACC,IAGD,sBAAKrD,UAAWb,EAAQpB,KAAxB,SACI,gBAAC4F,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,EAAzB,UACE,eAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAArC,SACE,gBAACC,GAAA,EAAD,CAAMlE,UAAWb,EAAQ4D,KAAzB,UACE,eAACoB,GAAA,EAAD,CAAYxM,MAAM,qBAAqByM,UAAU,eACjD,eAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAUtG,MAAO,IAAKc,OAAQ,IAA9B,SACE,eAACyF,GAAA,EAAD,CAAKnH,KAAM8F,EAAsBsB,QAAQ,iBAAiBC,QAAQ,mBAGtE,eAACC,GAAA,EAAD,CAAaC,gBAAc,EAA3B,SACE,eAAC3D,EAAA,EAAD,CAAYC,QAAQ,SAASvC,MAAM,UAAUoC,MAAO,CAAClC,eAAgB,YAAagG,OAAQ,WAA1F,6BAMN,eAACjB,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAArC,SACE,gBAACC,GAAA,EAAD,CAAMlE,UAAWb,EAAQ4D,KAAzB,UACE,eAACoB,GAAA,EAAD,CAAYxM,MAAM,kBAAkByM,UAAU,gBAC9C,eAACC,GAAA,EAAD,UACE,eAACrD,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,OAA/B,mBAIF,eAACwD,GAAA,EAAD,CAAaC,gBAAc,EAA3B,SACE,eAAC3D,EAAA,EAAD,CAAYC,QAAQ,SAASvC,MAAM,UAAUoC,MAAO,CAAClC,eAAgB,YAAagG,OAAQ,WAA1F,6BAMN,eAACjB,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAArC,SACE,gBAACC,GAAA,EAAD,CAAMlE,UAAWb,EAAQ4D,KAAzB,UACE,eAACoB,GAAA,EAAD,CAAYxM,MAAM,kBAAkByM,UAAU,gBAC9C,eAACC,GAAA,EAAD,UACE,eAACrD,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,OAA/B,mBAIF,eAACwD,GAAA,EAAD,CAAaC,gBAAc,EAA3B,SACE,eAAC3D,EAAA,EAAD,CAAYC,QAAQ,SAASvC,MAAM,UAAUoC,MAAO,CAAClC,eAAgB,YAAagG,OAAQ,WAA1F,6BAMN,eAACjB,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAvC,SACE,gBAACC,GAAA,EAAD,CAAMlE,UAAWb,EAAQ4D,KAAzB,UACE,eAACoB,GAAA,EAAD,CAAYxM,MAAM,kBAAkByM,UAAU,gBAC9C,eAACC,GAAA,EAAD,UACE,eAACrD,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,OAA/B,mBAIF,eAACwD,GAAA,EAAD,CAAaC,gBAAc,EAA3B,SACE,eAAC3D,EAAA,EAAD,CAAYC,QAAQ,SAASvC,MAAM,UAAUoC,MAAO,CAAClC,eAAgB,YAAagG,OAAQ,WAA1F,mC,uHEvFV/G,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,CACJ8G,QAAS,OACTC,SAAU,iBAEZC,UAAW,CACTF,QAAS,QAEXG,YAAa,CACXhH,MAAO,OACPC,SAAU,IACVC,gBAAiBtD,EAAMuD,QAAQC,WAAW6G,OAE5CC,SAAU,CACRxG,MAAO9D,EAAMuD,QAAQgH,gBAAgBC,KAAW,MAChDlH,gBAAiBkH,KAAW,MAE9BC,UAAW,CACTC,UAAW,OACXtH,MAAO,QAETuH,UAAW,CACTC,aAAc,YA+KHC,GAtKyB,WAAM,IAAD,EACnBtK,mBAAiB,eADE,mBACpCuK,EADoC,aAEqBvK,oBAAkB,IAFvC,mBAEpCwK,EAFoC,KAEVC,EAFU,OAGLzK,mBAA2B,CAAC0K,YAAa,GAAIC,YAAa,KAHrD,mBAGpCC,EAHoC,KAGvBC,EAHuB,OAID7K,oBAAkB,GAJjB,mBAIpC8K,EAJoC,KAKrCzG,GALqC,KAKxBC,qBAAW1E,KACxBmL,EAAczG,qBAAW6C,IAEzBnD,GADegH,eACLtI,MAoBVuI,EAAkC,WACtCR,GAA4B,IAGxBS,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7B2N,EAAe,2BAAID,GAAL,kBAAmBS,EAAYnO,MAO/C,OAJAwK,qBAAU,WACRrD,EAAW3E,kBAAkB,cAC5B,IAGD,gBAAC4L,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,SAAxD,UACE,gBAACjD,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,EAAzB,UACE,gBAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIlD,MAAO,CAAC+F,UAAW,QAAtD,UACE,eAAC7F,EAAA,EAAD,CAAYC,QAAQ,KAAKvC,MAAM,cAA/B,SACGgH,IAEH,eAACoB,EAAA,EAAD,OAEF,eAACnD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,gBAACJ,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,GAAI,GAAIlD,MAAO,CAAC6F,QAAS,QAA3C,SACE,gBAAChD,GAAA,EAAD,CAAMC,WAAS,EAACpF,QAAS,EAAzB,UACE,eAACmF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,GAAI,GAAIlD,MAAO,CAAC+D,QAAS,OAAQkC,cAAe,MAAOC,eAAgB,UAA1F,SACE,eAACC,GAAA,EAAD,CAAQjH,UAAWb,EAAQ+F,SAAUpE,MAAO,CAAC9C,MAAO,OAAQc,OAAQ,QAApE,SACG,UAAGoH,EAAY/D,KAAKb,UAAU,IAA9B,OAAmC4E,EAAY/D,KAAKZ,SAAS,IAAK2F,kBAGvE,eAACvD,GAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,EAAvB,SACE,eAACqD,GAAA,EAAD,CAAWnH,UAAWb,EAAQkG,UAAWpE,QAAQ,WAAWmG,KAAK,QAC/DrO,MAAM,aAAaV,MAAO6N,EAAY/D,KAAKb,UAAW+F,UAAQ,MAElE,eAAC1D,GAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,EAAvB,SACE,eAACqD,GAAA,EAAD,CAAWnH,UAAWb,EAAQkG,UAAWpE,QAAQ,WAAWmG,KAAK,QAC/DrO,MAAM,YAAYV,MAAO6N,EAAY/D,KAAKZ,SAAU8F,UAAQ,MAEhE,eAAC1D,GAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,GAAIC,GAAI,GAAIE,GAAI,GAAvC,SACE,eAACkD,GAAA,EAAD,CAAWnH,UAAWb,EAAQkG,UAAWpE,QAAQ,WAAWmG,KAAK,QAC/DrO,MAAM,QAAQV,MAAO6N,EAAY/D,KAAKV,MAAO4F,UAAQ,MAEzD,eAAC1D,GAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,GAAIC,GAAI,GAAIE,GAAI,GAAvC,SACE,eAACkD,GAAA,EAAD,CAAWnH,UAAWb,EAAQkG,UAAWpE,QAAQ,WAAWmG,KAAK,QAC/DrO,MAAM,QAAQV,MAAO6N,EAAY/D,KAAKP,YAAayF,UAAQ,MAE/D,eAAC1D,GAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,EAAGC,GAAI,EAAGE,GAAI,GAArC,SACE,eAACkD,GAAA,EAAD,CAAWnH,UAAWb,EAAQkG,UAAWpE,QAAQ,WAAWmG,KAAK,QAC/DrO,MAAM,OAAOV,MAAO6N,EAAY/D,KAAKxE,MAAO0J,UAAQ,MAExD,eAAC1D,GAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,EAAGC,GAAI,EAAGE,GAAI,GAArC,SACE,eAACkD,GAAA,EAAD,CAAWnH,UAAWb,EAAQkG,UAAWpE,QAAQ,WAAWmG,KAAK,QAC/DrO,MAAM,aAAaV,MAAO6N,EAAY/D,KAAKN,WAAWC,KAAMuF,UAAQ,MAExE,eAAC1D,GAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,GAAIG,GAAI,GAA/B,SACE,eAACqD,EAAA,EAAD,CAAQrG,QAAQ,WAAWX,QA/DJ,WACrC0F,EAAe,CAACH,YAAa,GAAIC,YAAa,KAC9CF,GAA4B,IA6Dd,SACE,eAAC5E,EAAA,EAAD,CAAYC,QAAQ,SAApB,sCAOR,eAAC0C,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,GAAI,GAAIlD,MAAO,CAAC6F,QAAS,QAA3C,SACE,gBAAChD,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAAC9C,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAA/B,gCAIF,eAACyC,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAA/B,SACE,gBAACvD,EAAA,EAAD,WACE,eAACoG,EAAA,EAAD,IACA,gBAAC7G,EAAA,EAAD,WACE,eAACI,EAAA,EAAD,CAAcrB,QAAQ,eACtB,eAACuI,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACEC,KAAK,MACLC,SA7FK,SAACpB,GAC5B,IACM1L,EADQ0L,EAAMC,OAAOoB,QACLtO,GAAkBD,IblBrC,SAAkCf,GACvCK,aAAakP,QAAQ,QAASvP,GakB5BwP,CAAyBjN,GACzB4E,EAAW1E,YAAYF,IA0FD+M,QAASnI,EAAW5E,QAAUvB,UAIpC,eAACyN,EAAA,EAAD,sBAQd,gBAACgB,GAAA,EAAD,CAAQC,KAAMpC,EAA0BqC,QAAS5B,EAAiC6B,kBAAgB,oBAAoBC,sBAAsB,EAA5I,UACE,eAACC,GAAA,EAAD,CAAatP,GAAG,oBAAhB,8BACA,eAACuP,GAAA,EAAD,UACE,sBAAKtH,MAAO,CAAC9C,MAAO,SAApB,SACI,uBAAK8C,MAAO,CAAC9C,MAAO,OAAQ6G,QAAS,OAAQkC,cAAe,UAA5D,UACE,eAACI,GAAA,EAAD,CACAkB,KAAK,WACLtP,MAAM,eACNkI,QAAQ,WACRa,KAAK,cACLzJ,MAAO0N,EAAYF,YACnB6B,SAAUrB,EACVrG,UAAWb,EAAQoG,YAEnB,eAAC4B,GAAA,EAAD,CACAkB,KAAK,WACLtP,MAAM,eACNkI,QAAQ,WACRa,KAAK,cACLzJ,MAAO0N,EAAYD,YACnB4B,SAAUrB,EACVrG,UAAWb,EAAQoG,mBAK3B,gBAAC+C,GAAA,EAAD,WACE,eAAChB,EAAA,EAAD,CAAQhH,QAAS8F,EAAiC1H,MAAM,UAAU2I,SAAUpB,EAA5E,SACE,eAACjF,EAAA,EAAD,CAAYC,QAAQ,SAApB,sBAIF,gBAACqG,EAAA,EAAD,CAAQhH,QA9ImB,WACjCzD,QAAQC,IAAI,UAAWiJ,IA6I4BrH,MAAM,UAAU2I,SAAUpB,EAAvE,UACGA,EAAgB,eAACsC,GAAA,EAAD,IAAuB,KACxC,eAACvH,EAAA,EAAD,CAAYC,QAAQ,SAApB,iC,0HCxLL,SAASuH,KACd,OAAO,IAAIxL,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAK,eACL8G,OAAQ,QAETC,MAAK,SAACtG,GAEL,OAAOG,EAAQH,MAEhBuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SCV1B,IAAM0L,GAA+B,CACnC,CAAC5P,GAAI,OAAQE,MAAO,OAAQ2P,SAAU,IAAKxH,MAAO,QAClD,CAACrI,GAAI,cAAeE,MAAO,cAAe2P,SAAU,IAAKxH,MAAO,SAG5DrD,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpC+N,UAAW,CACT3K,MAAO,OACP6G,QAAS,OACTmC,eAAgB,gBAChB4B,WAAY,UAEdC,eAAgB,CACdC,UAAW,IACXnC,QAAS,QAsLEoC,GA9KsC,SAAC,GAAe,IAAdxM,EAAa,EAAbA,SAErDmG,GAAkB,CAAC/E,MAAOlE,GAAoBM,uBAFoB,MAI5BoB,mBAAwB,IAJI,mBAI3D6N,EAJ2D,KAI9CC,EAJ8C,OAKpC9N,oBAAS,GAL2B,mBAK3D+N,EAL2D,KAKlDC,EALkD,OAM1ChO,mBAAS,GANiC,mBAM3DuK,EAN2D,KAMrD0D,EANqD,OAO5BjO,mBAAS,IAPmB,mBAO3DkO,EAP2D,KAO9CC,EAP8C,KAU5D3G,EAAUC,cACRpJ,EAAS+P,cAAT/P,KACF2F,EAAUtB,KAEV2B,EAAaC,qBAAW1E,IAExBxD,EAASC,KAAiBC,MAiC1B+R,EAAmB,SAAC3Q,IDlCrB,SAA0BA,GAC/B,OAAO,IAAImE,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,gBAAD,OAAkB5D,GACrB0K,OAAQ,WAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UC4BtB0M,CAAmC5Q,GAChC2K,MAAK,SAAAtG,GAAa,IACVtF,EAAmBsF,EAAnBtF,QAASuF,EAAUD,EAAVC,OAChB8L,EAAeD,EAAYU,QAAO,SAAAC,GAAG,OAAIA,EAAI9Q,IAAMA,MACrC,YAAXsE,GACD5F,EAAOM,KAAK,CACVC,KAAM,UACNH,MAAO,UACPI,KAAMH,GAAoB,6BAI/B6L,OAAM,SAAA1G,QAgCX,OARA8F,qBAAU,WAGR,OAFArD,EAAW3E,kBAAkB,cAnB7BsO,GAAW,GACXM,KACGjG,MAAK,SAACtG,GAAa,IACVC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KACF,OAAXD,GACD8L,EAAe7L,GAGjBP,QAAQC,IAAI,cAAekM,MAE5BvF,OAAM,SAAA1G,OAGN2G,SAAQ,WACPyF,GAAW,MAOR,eAGN,IAGD,gBAAC,WAAD,WACE,eAAC1C,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAASgD,aAAW,iBAA5E,SACE,uBAAK5J,UAAWb,EAAQwJ,UAAxB,UACE,eAAC3H,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BAGCxD,GAAkBlB,EAASoB,MAAOlE,GAAoBQ,uBAAyB,eAACqN,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,UAClHmL,kBAAgB,EAACD,aAAW,2BAA2BtJ,QApFvB,WACtCqC,EAAQG,KAAR,UAAgBtJ,EAAhB,aAkFsF,SAE9E,eAACwH,EAAA,EAAD,CAAYC,QAAQ,SAApB,8BAGU,UAIhB,gBAACwF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAU,QAA3E,UACE,gBAACwE,GAAA,EAAD,CAAgB9J,UAAWb,EAAQ0J,eAAnC,UACGK,EAAU,eAACa,GAAA,EAAD,CAAgBrL,MAAM,YAAYoC,MAAO,CAAC9C,MAAO,UAAa,KACzE,gBAACgM,GAAA,EAAD,CAAOC,cAAY,EAACL,aAAW,4BAA/B,UACE,eAACM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACG1B,GAAa2B,KAAI,SAACC,GAAD,OAChB,eAACC,GAAA,EAAD,CAEEpJ,MAAOmJ,EAAOnJ,MACdJ,MAAO,CAAC4H,SAAU2B,EAAO3B,UAH3B,SAKG2B,EAAOtR,OAJHsR,EAAOxR,OAOhB,eAACyR,GAAA,EAAD,CACApJ,MAAM,QADN,0BAOJ,eAACqJ,GAAA,EAAD,UACGvB,GAAeA,EAAYwB,MAAM9E,EAAK2D,EAAa3D,EAAK2D,EAAYA,GAAae,KAAI,SAACK,GACrF,OACE,gBAACN,GAAA,EAAD,CAAUO,OAAK,EAACC,KAAK,UAAUC,UAAW,EAA1C,UACGnC,GAAa2B,KAAI,SAACC,GACDA,EAAOxR,GAAvB,IACMR,EAAaoS,EAAIJ,EAAOxR,IAC9B,OACE,eAACyR,GAAA,EAAD,CAA2BpJ,MAAOmJ,EAAOnJ,MAAzC,SACG7I,GADagS,EAAOxR,OAK3B,gBAACyR,GAAA,EAAD,CAAWpJ,MAAM,QAAjB,UACE,eAAC2J,EAAA,EAAD,CAAYvK,QAAS,SAACwK,GAAD,OAlHrBjS,EAkHsC4R,EAAI5R,QAjH5D8J,EAAQG,KAAR,UAAgBtJ,EAAhB,YAAwBX,EAAxB,UADiB,IAACA,GAkHkDuO,KAAK,QAAvD,SACE,eAAC,KAAD,CAAU2D,SAAS,YAErB,eAACF,EAAA,EAAD,CAAYvK,QAAS,SAACwK,GAAD,OAjHnBjS,EAiHsC4R,EAAI5R,QAhH9DtB,EAAOM,KAAK,CACVF,MAAM,8CACNqT,gBAAgB,EAChBC,kBAAmB,MACnBC,WAAY,WACVrO,QAAQC,IAAI,gBACZ0M,EAAiB3Q,MAPF,IAACA,GAiHkDuO,KAAK,QAAzD,SACE,eAAC,KAAD,CAAY2D,SAAS,iBAfuBN,EAAI5R,eAwBhE,eAACsS,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BzK,UAAU,MACV0K,MAAOrC,EAAYnJ,OACnBwJ,YAAaA,EACb3D,KAAMA,EACN4F,aA/IiB,SAAChF,EAA0BiF,GAClDnC,EAAQmC,IA+IFC,oBA5IwB,SAAClF,GAE/BgD,GAAgBhD,EAAMC,OAAOlO,OAC7B+Q,EAAQ,aCvDNvL,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,GAGN0N,KAAM,CACJzN,MAAO,MACP2I,QAAS,OACTrB,UAAW,QAEbC,UAAW,CACTvH,MAAO,OACPwH,aAAc,YA8FHkG,GArFwC,SAAC,GAAe,IAAdnP,EAAa,EAAbA,SACvDmG,GAAkB,CAAC/E,MAAOlE,GAAoBQ,wBADsB,MAEtCkB,mBAAS,CAAC2G,KAAM,GAAIC,YAAa,KAFK,mBAE7D4J,EAF6D,KAEpDC,EAFoD,OAG1BzQ,oBAAkB,GAHQ,mBAG7D8K,EAH6D,KAG9C4F,EAH8C,KAK9DlJ,EAAUC,cACVzD,EAAUtB,KAEVtG,EAASC,KAAiBC,MAM1B4O,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7BuT,EAAW,2BAAID,GAAL,kBAAenF,EAAYnO,MAmCvC,OACE,gBAAC,WAAD,WACE,eAACoO,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAxD,SACGnJ,GAAkBlB,EAASoB,MAAOlE,GAAoBQ,uBAAyB,eAAC4Q,EAAA,EAAD,CAAYnM,MAAM,UAAU4B,QA9CvF,WACzBqC,EAAQmJ,UA6C4E,SAC9E,eAAC,IAAD,MACc,OAElB,gBAACrF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAW,OAAQT,QAAQ,OAAQkC,cAAe,UAAnH,UACE,eAAC/F,EAAA,EAAD,CAAYC,QAAQ,KAAKvC,MAAM,cAA/B,oCAGA,eAACoI,EAAA,EAAD,IACA,sBAAKhG,MAAO,CAAC9C,MAAM,OAAQ6G,QAAQ,OAAQmC,eAAgB,UAA3D,SACE,wBAAMhH,UAAWb,EAAQsM,KAAMM,aAAa,MAAMC,SA7ChC,SAAC1F,GFjDtB,IAAwB2F,EEkD3B3F,EAAM4F,iBACNL,GAAiB,IFnDUI,EEoDMN,EFnD5B,IAAI3O,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAK,eACL8G,OAAQ,OACRnG,KAAM6O,IAEPzI,MAAK,SAACtG,GAAD,OAAcG,EAAQH,MAC3BuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UE6CnByG,MAAK,SAAAtG,GAAY,IACTC,EAAyBD,EAAzBC,OAAcvF,GAAWsF,EAAjBE,KAAiBF,EAAXtF,SACR,WAAVuF,EACD5F,EAAOM,KAAK,CACVC,KAAM,UACNH,MAAO,UACPI,KAAMH,GAAoB,kCAC1BuU,mBAAmB,EACnBC,UAAW,WACTR,EAAW,CAAC9J,KAAM,GAAIC,YAAa,QAIvCxK,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,UACPI,KAAMH,GAAoB,cAI/B6L,OAAM,SAAA1G,OAGN2G,SAAQ,WACPmI,GAAiB,OAiBf,UACE,eAAC1E,GAAA,EAAD,CAAWtO,GAAG,kBAAkBE,MAAM,OAAO+I,KAAK,OAAOzJ,MAAOsT,EAAQ7J,KACtEb,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,yBAAyBE,MAAM,cAAc+I,KAAK,cAAczJ,MAAOsT,EAAQ5J,YAC3Fd,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,gBAACiB,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,YAAYoC,MAAO,CAACuL,MAAO,SAAUhE,KAAK,SAAShB,SAAUpB,EAA/F,UACGA,EAAgB,eAACsC,GAAA,EAAD,CAAkBnB,KAAM,KAAS,KAClD,eAACpG,EAAA,EAAD,CAAYC,QAAQ,SAApB,8CC5FRpD,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,GAGN0N,KAAM,CACJzN,MAAO,MACP2I,QAAS,OACTrB,UAAW,QAEbC,UAAW,CACTvH,MAAO,OACPwH,aAAc,YAkJH8G,GArIsC,SAAC,GAAc,EAAb/P,SAErDmG,GAAkB,CAAC/E,MAAOlE,GAAoBO,sBAFoB,MAIpCmB,mBAAS,CAAC2G,KAAM,GAAIC,YAAa,KAJG,mBAI3D4J,EAJ2D,KAIlDC,EAJkD,OAKpCzQ,oBAAkB,GALkB,mBAK3D+N,EAL2D,KAKlDC,EALkD,KAO1DoD,EAAiBC,cAAjBD,aACF/M,EAAaC,qBAAW1E,IAExB4H,EAAUC,cAEVzD,GADWoK,cAAT/P,KACQqE,MAEVtG,EAASC,KAAiBC,MAM1B4O,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7BuT,EAAW,2BAAID,GAAL,kBAAenF,EAAYnO,MAGjCoU,EAAiB,WHlClB,IAAuB5T,EGmC1BsQ,GAAW,IHnCetQ,EGoCM6T,SAASH,GHnCpC,IAAIvP,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,gBAAD,OAAkB5D,GACrB0K,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UG8BnByG,MAAK,SAAAtG,GAAY,IACTC,EAAyBD,EAAzBC,OAAQC,EAAiBF,EAAjBE,KAAMxF,EAAWsF,EAAXtF,QACrBiF,QAAQC,IAAI,OAAQM,GACN,OAAXD,EACEC,EACDwO,EAAW,CAAC9J,KAAM1E,EAAK0E,KAAMC,YAAa3E,EAAK2E,cAE/CxK,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,SACPI,KAAM,yBAIVR,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,SACPI,KAAMH,GAAoB,4BAI/B6L,OAAM,SAAA1G,OAGN2G,SAAQ,WACPyF,GAAW,OA8CjB,OAPAtG,qBAAU,WAGR,OAFArD,EAAW3E,kBAAkB,mBAC7B4R,IACO,eAEN,CAACF,IAGF,gBAAC,WAAD,WACE,eAAC9F,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAxD,SACE,eAACiE,EAAA,EAAD,CAAYnM,MAAM,UAAU4B,QAxFP,WACzBqC,EAAQmJ,UAuFJ,SACE,eAAC,IAAD,QAGJ,gBAACrF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAW,OAAQT,QAAQ,OAAQkC,cAAe,UAAnH,UACE,eAAC/F,EAAA,EAAD,CAAYC,QAAQ,KAAKvC,MAAM,cAA/B,6BAGA,eAACoI,EAAA,EAAD,IACCoC,EAAU,eAACa,GAAA,EAAD,CAAgBrL,MAAM,YAAYoC,MAAO,CAAC9C,MAAO,UAAa,KACzE,sBAAK8C,MAAO,CAAC9C,MAAM,OAAQ6G,QAAQ,OAAQmC,eAAgB,UAA3D,SACE,wBAAMhH,UAAWb,EAAQsM,KAAMM,aAAa,MAAMC,SAxDhC,SAAC1F,GACzBA,EAAM4F,iBACNrP,QAAQC,IAAI,UAAW6O,GAGjBe,SAASH,GACPZ,EAAQ7J,KACD6J,EAAQ5J,aH9DpB,SAA0BlJ,EAAY8S,GAC3C,OAAO,IAAI3O,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,gBAAD,OAAkB5D,GACrB0K,OAAQ,MACRnG,KAAMuO,IAEPnI,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UGwDtB0M,CAAmCiD,SAASH,GAAeZ,GACxDnI,MAAK,SAAAtG,GAAY,IACTC,EAAyBD,EAAzBC,OAAcvF,GAAWsF,EAAjBE,KAAiBF,EAAXtF,SACR,WAAVuF,EACD5F,EAAOM,KAAK,CACVC,KAAM,UACNH,MAAO,UACPI,KAAMH,GAAoB,kCAC1BuU,mBAAmB,EACnBC,UAAW,WACTR,EAAW,CAAC9J,KAAM,GAAIC,YAAa,QAIvCxK,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,UACPI,KAAMH,GAAoB,cAI/B6L,OAAM,SAAA1G,QA0BH,UACE,eAACoK,GAAA,EAAD,CAAWtO,GAAG,kBAAkBE,MAAM,OAAO+I,KAAK,OAAOzJ,MAAOsT,EAAQ7J,KACtEb,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,yBAAyBE,MAAM,cAAc+I,KAAK,cAAczJ,MAAOsT,EAAQ5J,YAC3Fd,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACiB,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,YAAYoC,MAAO,CAACuL,MAAO,SAAUhE,KAAK,SAA5E,SACE,eAACrH,EAAA,EAAD,CAAYC,QAAQ,SAApB,2CC1JR0L,GAAc,YAcb,SAASC,KACd,OAAO,IAAI5P,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,GAAD,OAAKkQ,IACRpJ,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SCN1B,IAAM0L,GAA+B,CACnC,CAAC5P,GAAI,OAAQE,MAAO,OAAQ2P,SAAU,IAAKxH,MAAO,QAClD,CAACrI,GAAI,WAAYE,MAAO,QAAS2P,SAAU,IAAKxH,MAAO,QACvD,CAACrI,GAAI,QAASE,MAAO,QAAS2P,SAAU,IAAKxH,MAAO,QACpD,CAACrI,GAAI,WAAYE,MAAO,WAAY2P,SAAU,IAAKxH,MAAO,QAC1D,CAACrI,GAAI,cAAeE,MAAO,cAAe2P,SAAU,IAAKxH,MAAO,SAG5DrD,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpC+N,UAAW,CACT3K,MAAO,OACP6G,QAAS,OACTmC,eAAgB,WAChB4B,WAAY,UAEdC,eAAgB,CACdC,UAAW,IACXnC,QAAS,QAuLEkG,GA9KoC,SAAC,GAAc,EAAbtQ,SACnDmG,GAAkB,CAAC/E,MAAOlE,GAAoBU,oBADkB,MAG9BgB,mBAAsB,IAHQ,mBAGzD2R,EAHyD,KAG9CC,EAH8C,OAIlC5R,oBAAS,GAJyB,mBAIzD+N,EAJyD,KAIhDC,EAJgD,OAKxChO,mBAAS,GAL+B,mBAKzDuK,EALyD,KAKnD0D,EALmD,OAM1BjO,mBAAS,IANiB,mBAMzDkO,EANyD,KAM5CC,EAN4C,KAS1D3G,EAAUC,cACRpJ,EAAS+P,cAAT/P,KACF2F,EAAUtB,KAEV2B,EAAaC,qBAAW1E,IAExBxD,EAASC,KAAiBC,MAiC1BuV,EAAiB,SAACnU,GACtBsQ,GAAW,GD1CR,SAAwBtQ,GAC7B,OAAO,IAAImE,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,IAAD,OAAMkQ,GAAN,YAAqB9T,GACxB0K,OAAQ,WAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SCoCtBkQ,CAA+BpU,GAC5B2K,MAAK,SAAAtG,GAAa,IACVtF,EAAmBsF,EAAnBtF,QACO,OADYsF,EAAVC,SAEd4P,EAAaD,EAAUpD,QAAO,SAAA7F,GAAI,OAAGA,EAAKhL,IAAMA,MAChDtB,EAAOM,KAAK,CACVC,KAAM,UACNH,MAAO,UACPI,KAAMH,GAAoB,8BAI/B6L,OAAM,SAAA1G,OAGN2G,SAAQ,WACPyF,GAAW,OA+BjB,OARAtG,qBAAU,WAGR,OAFArD,EAAW3E,kBAAkB,aAnB7BsO,GAAW,GACX8D,KACGzJ,MAAK,SAACtG,GAAY,IAETC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KACF,YAAXD,GACD4P,EAAa3P,GAEfP,QAAQC,IAAI,YAAagQ,MAE1BrJ,OAAM,SAAA1G,OAGN2G,SAAQ,WACPyF,GAAW,MAOR,eAGN,IAGD,gBAAC,WAAD,WACE,eAAC1C,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAASgD,aAAW,iBAA5E,SACE,sBAAK5J,UAAWb,EAAQwJ,UAAxB,SACE,eAACrB,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,UAClCmL,kBAAgB,EAACD,aAAW,2BAA2BtJ,QArFvB,WACtCqC,EAAQG,KAAR,UAAgBtJ,EAAhB,aAmFM,SAEE,eAACwH,EAAA,EAAD,CAAYC,QAAQ,SAApB,gCAON,gBAACwF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAU,QAA3E,UACE,gBAACwE,GAAA,EAAD,CAAgB9J,UAAWb,EAAQ0J,eAAnC,UACGK,EAAU,eAACa,GAAA,EAAD,CAAgBrL,MAAM,YAAYoC,MAAO,CAAC9C,MAAO,UAAa,KACzE,gBAACgM,GAAA,EAAD,CAAOC,cAAY,EAACL,aAAW,4BAA/B,UACE,eAACM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACG1B,GAAa2B,KAAI,SAACC,GAAD,OAChB,eAACC,GAAA,EAAD,CAEEpJ,MAAOmJ,EAAOnJ,MACdJ,MAAO,CAAC4H,SAAU2B,EAAO3B,UAH3B,SAKG2B,EAAOtR,OAJHsR,EAAOxR,OAOhB,eAACyR,GAAA,EAAD,CACApJ,MAAM,QADN,0BAOJ,eAACqJ,GAAA,EAAD,UACGuC,GAAaA,EAAUtC,MAAM9E,EAAK2D,EAAa3D,EAAK2D,EAAYA,GAAae,KAAI,SAACK,GACjF,OACE,gBAACN,GAAA,EAAD,CAAUO,OAAK,EAACC,KAAK,UAAUC,UAAW,EAA1C,UACGnC,GAAa2B,KAAI,SAACC,GACDA,EAAOxR,GAAvB,IACMR,EAAaoS,EAAIJ,EAAOxR,IAC9B,OACE,eAACyR,GAAA,EAAD,CAA2BpJ,MAAOmJ,EAAOnJ,MAAzC,SACG7I,GADagS,EAAOxR,OAK3B,gBAACyR,GAAA,EAAD,CAAWpJ,MAAM,QAAjB,UACE,eAAC2J,EAAA,EAAD,CAAYvK,QAAS,SAACwK,GAAD,OAnHrBjS,EAmHsC4R,EAAI5R,QAlH5D8J,EAAQG,KAAR,UAAgBtJ,EAAhB,YAAwBX,EAAxB,UADiB,IAACA,GAmHkDuO,KAAK,QAAQC,SAAU6B,EAAzE,SACE,eAAC,KAAD,CAAU6B,SAAS,YAErB,eAACF,EAAA,EAAD,CAAYvK,QAAS,SAACwK,GAAD,OAlHnBjS,EAkHsC4R,EAAI5R,QAjH9DtB,EAAOM,KAAK,CACVF,MAAM,4CACNqT,gBAAgB,EAChBC,kBAAmB,MACnBC,WAAY,WACVrO,QAAQC,IAAI,gBACZkQ,EAAenU,MAPA,IAACA,GAkHkDuO,KAAK,QAAQC,SAAU6B,EAA3E,SACE,eAAC,KAAD,CAAY6B,SAAS,iBAfuBN,EAAI5R,eAwBhE,eAACsS,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BzK,UAAU,MACV0K,MAAOyB,EAAUjN,OACjBwJ,YAAaA,EACb3D,KAAMA,EACN4F,aAhJiB,SAAChF,EAA0BiF,GAClDnC,EAAQmC,IAgJFC,oBA7IwB,SAAClF,GAE/BgD,GAAgBhD,EAAMC,OAAOlO,OAC7B+Q,EAAQ,aC7DNvL,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,GAGN0N,KAAM,CACJzN,MAAO,MACP2I,QAAS,OACTrB,UAAW,QAEbC,UAAW,CACTvH,MAAO,OACPwH,aAAc,YA6GH0H,GApGsC,SAAC,GAAc,EAAb3Q,SAAc,IAAD,EACpCpB,mBAAS,CAAC2G,KAAM,GAAIC,YAAa,GAAIN,MAAO,GAAI0L,SAAU,GAAI7N,SAAU,KADpC,mBAC3DqM,EAD2D,KAClDC,EADkD,OAExBzQ,oBAAkB,GAFM,mBAE3D8K,EAF2D,KAE5C4F,EAF4C,KAIlEnJ,GAAkB,CAAC/E,MAAOlE,GAAoBY,sBAC9C,IAAMmF,EAAaC,qBAAW1E,IACxB4H,EAAUC,cACVzD,EAAUtB,KAEVtG,EAASC,KAAiBC,MAU1B4O,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7BuT,EAAW,2BAAID,GAAL,kBAAenF,EAAYnO,MAuCvC,OAJAwK,qBAAU,WACRrD,EAAW3E,kBAAkB,4BAC5B,IAGD,gBAAC,WAAD,WACE,eAAC4L,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAxD,SACE,eAACiE,EAAA,EAAD,CAAYnM,MAAM,UAAU4B,QAtDP,WACzBqC,EAAQmJ,UAqDJ,SACE,eAAC,IAAD,QAGJ,gBAACrF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAW,OAAQT,QAAQ,OAAQkC,cAAe,UAAnH,UACE,eAAC/F,EAAA,EAAD,CAAYC,QAAQ,KAAKvC,MAAM,cAA/B,6BAGA,eAACoI,EAAA,EAAD,IACA,sBAAKhG,MAAO,CAAC9C,MAAM,OAAQ6G,QAAQ,OAAQmC,eAAgB,UAA3D,SACE,wBAAMhH,UAAWb,EAAQsM,KAAMM,aAAa,MAAMC,SAjDhC,SAAC1F,GACzBA,EAAM4F,iBACNL,GAAiB,GFtDd,SAAsBF,GAC3B,OAAO,IAAI3O,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,IAAD,OAAMkQ,IACTpJ,OAAQ,OACRnG,KAAMuO,IAEPnI,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SE+CtBkQ,CAA6BtB,GAC1BnI,MAAK,SAAAtG,GAAY,IACTC,EAAyBD,EAAzBC,OAAcvF,GAAWsF,EAAjBE,KAAiBF,EAAXtF,SACR,WAAVuF,EACD5F,EAAOM,KAAK,CACVC,KAAM,UACNH,MAAO,UACPI,KAAMH,GAAoB,kCAC1BuU,mBAAmB,EACnBC,UAAW,WACTR,EAAW,CAAC9J,KAAM,GAAIC,YAAa,GAAIN,MAAO,GAAI0L,SAAU,GAAI7N,SAAU,QAI9E/H,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,UACPI,KAAMH,GAAoB,cAI/B6L,OAAM,SAAA1G,OAGN2G,SAAQ,WACPmI,GAAiB,OAqBf,UACE,eAAC1E,GAAA,EAAD,CAAWtO,GAAG,kBAAkBE,MAAM,OAAO+I,KAAK,OAAOzJ,MAAOsT,EAAQ7J,KACtEb,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,WAAWE,MAAM,QAAQ+I,KAAK,WAAWzJ,MAAOsT,EAAQwB,SACpElM,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,QAAQE,MAAM,QAAQ+I,KAAK,QAAQzJ,MAAOsT,EAAQlK,MAC9DR,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,WAAWE,MAAM,WAAW+I,KAAK,WAAWzJ,MAAOsT,EAAQrM,SACvE2B,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,yBAAyBE,MAAM,cAAc+I,KAAK,cAAczJ,MAAOsT,EAAQ5J,YAC3Fd,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,gBAACiB,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,YAAYoC,MAAO,CAACuL,MAAO,SAAUhE,KAAK,SAAShB,SAAUpB,KAtEhG0F,EAAQ7J,MAAQ6J,EAAQ5J,aAAe4J,EAAQlK,OAASkK,EAAQwB,UAAYxB,EAAQrM,UAsEnF,UACG2G,EAAgB,eAACsC,GAAA,EAAD,CAAkBnB,KAAM,KAAS,KAClD,eAACpG,EAAA,EAAD,CAAYC,QAAQ,SAApB,8CC3GRpD,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,GAGN0N,KAAM,CACJzN,MAAO,MACP2I,QAAS,OACTrB,UAAW,QAEbC,UAAW,CACTvH,MAAO,OACPwH,aAAc,YA0KH4H,GArJoC,SAAC,GAAc,EAAb7Q,SAAc,IAAD,EAElCpB,mBAAqB,CAAC2G,KAAM,GAAIC,YAAa,GAAIoL,SAAU,GAAI1L,MAAO,GAAInC,SAAU,KAFlD,mBAEzDqM,EAFyD,KAEhDC,EAFgD,OAGlCzQ,oBAAkB,GAHgB,mBAGzD+N,EAHyD,KAGhDC,EAHgD,OAItBhO,oBAAkB,GAJI,mBAIzD8K,EAJyD,KAI1C4F,EAJ0C,KAMhEnJ,GAAkB,CAAC/E,MAAOlE,GAAoBW,oBAC9C,IAAMoF,EAAaC,qBAAW1E,IAEtBsS,EAAeb,cAAfa,WAEF1K,EAAUC,cAEVzD,GADWoK,cAAT/P,KACQqE,MAEVtG,EAASC,KAAiBC,MAU1B4O,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7BuT,EAAW,2BAAID,GAAL,kBAAenF,EAAYnO,MAGjCoU,EAAiB,WHhDlB,IAAqB5T,EGiDxBsQ,GAAW,IHjDatQ,EGkDI6T,SAASW,GHjDhC,IAAIrQ,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,IAAD,OAAMkQ,GAAN,YAAqB9T,GACxB0K,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UG4CnByG,MAAK,SAAAtG,GAAY,IACTC,EAAyBD,EAAzBC,OAAQC,EAAiBF,EAAjBE,KAAMxF,EAAWsF,EAAXtF,QACrBiF,QAAQC,IAAI,OAAQM,GACN,OAAXD,EACEC,EACDwO,EAAW,CAAC9J,KAAM1E,EAAK0E,KAAMC,YAAa3E,EAAK2E,YAAaoL,SAAU/P,EAAK+P,SAAU1L,MAAOrE,EAAKqE,MAAOnC,SAAUlC,EAAKkC,WAEvH/H,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,SACPI,KAAM,yBAIVR,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,SACPI,KAAMH,GAAoB,4BAI/B6L,OAAM,SAAA1G,OAGN2G,SAAQ,WACPyF,GAAW,OAkDjB,OAPAtG,qBAAU,WAGR,OAFArD,EAAW3E,kBAAkB,oBAC7B4R,IACO,eAEN,CAACY,IAGF,gBAAC,WAAD,WACE,eAAC5G,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAxD,SACE,eAACiE,EAAA,EAAD,CAAYnM,MAAM,UAAU4B,QAhGP,WACzBqC,EAAQmJ,UA+FJ,SACE,eAAC,IAAD,QAGJ,gBAACrF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAW,OAAQT,QAAQ,OAAQkC,cAAe,UAAnH,UACE,eAAC/F,EAAA,EAAD,CAAYC,QAAQ,KAAKvC,MAAM,cAA/B,gCAGA,eAACoI,EAAA,EAAD,IACCoC,EAAU,eAACa,GAAA,EAAD,CAAgBrL,MAAM,YAAYoC,MAAO,CAAC9C,MAAO,UAAa,KACzE,sBAAK8C,MAAO,CAAC9C,MAAM,OAAQ6G,QAAQ,OAAQmC,eAAgB,UAA3D,SACE,wBAAMhH,UAAWb,EAAQsM,KAAMM,aAAa,MAAMC,SA5DhC,SAAC1F,GACzBA,EAAM4F,iBACNrP,QAAQC,IAAI,UAAW6O,GAGjBe,SAASW,GACP1B,EAAQ7J,KACD6J,EAAQ5J,YAEvB8J,GAAiB,GH9Ed,SAAwBhT,EAAY8S,GACzC,OAAO,IAAI3O,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,IAAD,OAAMkQ,GAAN,YAAqB9T,GACxB0K,OAAQ,MACRnG,KAAMuO,IAEPnI,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SGuEtBkQ,CAA+BP,SAASW,GAAa1B,GAClDnI,MAAK,SAAAtG,GAAY,IACTC,EAAyBD,EAAzBC,OAAcvF,GAAWsF,EAAjBE,KAAiBF,EAAXtF,SACR,WAAVuF,EACD5F,EAAOM,KAAK,CACVC,KAAM,UACNH,MAAO,UACPI,KAAMH,GAAoB,gCAC1BuU,mBAAmB,EACnBC,UAAW,WACTR,EAAW,CAAC9J,KAAM,GAAIC,YAAa,GAAIoL,SAAU,GAAI1L,MAAO,GAAInC,SAAU,QAI9E/H,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,UACPI,KAAMH,GAAoB,cAI/B6L,OAAM,SAAA1G,OAGN2G,SAAQ,WACPmI,GAAiB,OAyBf,UACE,eAAC1E,GAAA,EAAD,CAAWtO,GAAG,kBAAkBE,MAAM,OAAO+I,KAAK,OAAOzJ,MAAOsT,EAAQ7J,KACtEb,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,WAAWE,MAAM,QAAQ+I,KAAK,WAAWzJ,MAAOsT,EAAQwB,SACpElM,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,QAAQE,MAAM,QAAQ+I,KAAK,QAAQzJ,MAAOsT,EAAQlK,MAC9DR,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,WAAWE,MAAM,WAAW+I,KAAK,WAAWzJ,MAAOsT,EAAQrM,SACvE2B,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,yBAAyBE,MAAM,cAAc+I,KAAK,cAAczJ,MAAOsT,EAAQ5J,YAC3Fd,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,gBAACiB,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,YAAYoC,MAAO,CAACuL,MAAO,SAAUhE,KAAK,SAAShB,SAAUpB,KAjHhG0F,EAAQ7J,MAAQ6J,EAAQ5J,aAAe4J,EAAQlK,OAASkK,EAAQwB,UAAYxB,EAAQrM,UAiHnF,UACG2G,EAAgB,eAACsC,GAAA,EAAD,CAAkBnB,KAAM,KAAS,KAClD,eAACpG,EAAA,EAAD,CAAYC,QAAQ,SAApB,0CClLR0L,GAAc,YCapB,IAAMlE,GAA+B,CACnC,CAAC5P,GAAI,WAAYE,MAAO,OAAQ2P,SAAU,IAAKxH,MAAO,OAAQoM,OAAQ,SAACxL,GAAD,OAAiBA,EAAKoF,gBAC5F,CAACrO,GAAI,UAAWE,MAAO,QAAS2P,SAAU,IAAKxH,MAAO,QACtD,CAACrI,GAAI,QAASE,MAAO,QAAS2P,SAAU,IAAKxH,MAAO,QACpD,CAACrI,GAAI,aAAcE,MAAO,aAAc2P,SAAU,IAAKxH,MAAO,OAAQoM,OAAQ,SAACjV,GAAD,OAAiBA,GAAS,IAAIyJ,OAC5G,CAACjJ,GAAI,QAASE,MAAO,OAAQ2P,SAAU,IAAKxH,MAAO,QACnD,CAACrI,GAAI,UAAWE,MAAO,SAAUmI,MAAO,OAAQoM,OAAQ,SAACjV,GAAD,OAAkBA,EAAQ,SAAW,cAGzFwF,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpC+N,UAAW,CACT3K,MAAO,OACP6G,QAAS,OACTmC,eAAgB,WAChB4B,WAAY,UAEdC,eAAgB,CACdC,UAAW,IACXnC,QAAS,QAmLE4G,GA/KyB,WAAM,IAAD,EACjBpS,mBAAkB,IADD,mBACpCqS,EADoC,KAC7BC,EAD6B,OAEbtS,oBAAS,GAFI,mBAEpC+N,EAFoC,KAE3BC,EAF2B,OAGnBhO,mBAAS,GAHU,mBAGpCuK,EAHoC,KAG9B0D,EAH8B,OAILjO,mBAAS,IAJJ,mBAIpCkO,EAJoC,KAIvBC,EAJuB,KAMrC9J,EAAaC,qBAAW1E,IACxBmL,EAAczG,qBAAW6C,IAE/BI,GAAkB,CAAC/E,MAAOlE,GAAoBG,gBAG9C,IAAM+I,EAAUC,cACRpJ,EAAS+P,cAAT/P,KACF2F,EAAUtB,KAEVtG,EAASC,KAAiBC,MAgC1BiW,EAAa,SAAC7U,GAClBsQ,GAAW,GDrBR,SAAoBtQ,GACzB,OAAO,IAAImE,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,IAAD,OAAMkQ,GAAN,YAAqB9T,GACxB0K,OAAQ,WAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SCetB4Q,CAAuB9U,GACpB2K,MAAK,SAAAtG,GAAa,IACVtF,EAAmBsF,EAAnBtF,QACM,MADasF,EAAVC,QAEdsQ,EAASD,EAAM9D,QAAO,SAAAvH,GAAI,OAAIA,EAAKtJ,KAAOA,MAC1CtB,EAAOM,KAAK,CACVC,KAAM,UACNH,MAAO,UACPI,KAAMH,GAAoB,2BAG5BL,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,SACPI,KAAMH,GAAoB,sBAI/B6L,OAAM,SAAA1G,OAGN2G,SAAQ,WACPyF,GAAW,OAIXyE,EAAgB,WACpBzE,GAAW,GDlFN,IAAInM,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,GAAD,OAAKkQ,IACRpJ,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SC8EnByG,MAAK,SAACtG,GAAY,IAETC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KACF,YAAXD,GACDsQ,EAASrQ,MAGZqG,OAAM,SAAA1G,OAGN2G,SAAQ,WACPyF,GAAW,OASjB,OALAtG,qBAAU,WACRrD,EAAW3E,kBAAkB,SAC7B+S,MACC,IAGD,gBAAC,WAAD,WACE,eAACnH,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAASgD,aAAW,iBAA5E,SACE,sBAAK5J,UAAWb,EAAQwJ,UAAxB,SACGlL,GAAkByI,EAAY/D,KAAKxE,MAAOlE,GAAoBE,iBAAmB,eAAC2N,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,UACpHmL,kBAAgB,EAACD,aAAW,2BAA2BtJ,QAtFvB,WACtCqC,EAAQG,KAAR,UAAgBtJ,EAAhB,aAoFwF,SAEhF,eAACwH,EAAA,EAAD,CAAYC,QAAQ,SAApB,wBAGU,SAIhB,gBAACwF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAU,QAA3E,UACE,gBAACwE,GAAA,EAAD,CAAgB9J,UAAWb,EAAQ0J,eAAnC,UACGK,EAAU,eAACa,GAAA,EAAD,CAAgBrL,MAAM,YAAYoC,MAAO,CAAC9C,MAAO,UAAa,KACzE,gBAACgM,GAAA,EAAD,CAAOC,cAAY,EAACL,aAAW,4BAA/B,UACE,eAACM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACG1B,GAAa2B,KAAI,SAACC,GAAD,OAChB,eAACC,GAAA,EAAD,CAEEpJ,MAAOmJ,EAAOnJ,MACdJ,MAAO,CAAC4H,SAAU2B,EAAO3B,UAH3B,SAKG2B,EAAOtR,OAJHsR,EAAOxR,OAOhB,eAACyR,GAAA,EAAD,CACApJ,MAAM,QADN,0BAOJ,eAACqJ,GAAA,EAAD,UACGiD,GAASA,EAAMhD,MAAM9E,EAAK2D,EAAa3D,EAAK2D,EAAYA,GAAae,KAAI,SAACK,GACzE,OACE,gBAACN,GAAA,EAAD,CAAUO,OAAK,EAACC,KAAK,UAAUC,UAAW,EAA1C,UACGnC,GAAa2B,KAAI,SAACC,GACjB,IAAMhS,EAAaoS,EAAIJ,EAAOxR,IAC9B,OACE,eAACyR,GAAA,EAAD,CAA2BpJ,MAAOmJ,EAAOnJ,MAAzC,SACGmJ,EAAOiD,OAASjD,EAAOiD,OAAOjV,IAAU,KAAOA,GAAS,MAD3CgS,EAAOxR,OAK3B,gBAACyR,GAAA,EAAD,CAAWpJ,MAAM,QAAjB,UACE,eAAC2J,EAAA,EAAD,CAAYvK,QAAS,SAACwK,GAAD,OApHrBjS,EAoHsC4R,EAAI5R,QAnH5D8J,EAAQG,KAAR,UAAgBtJ,EAAhB,YAAwBX,EAAxB,UADiB,IAACA,GAoHkDuO,KAAK,QAAQC,SAAU6B,EAAzE,SACE,eAAC,KAAD,CAAU6B,SAAS,YAErB,eAACF,EAAA,EAAD,CAAYvK,QAAS,SAACwK,GAAD,OAnHnBjS,EAmHsC4R,EAAI5R,QAlH9DtB,EAAOM,KAAK,CACVF,MAAM,4CACNqT,gBAAgB,EAChBC,kBAAmB,MACnBC,WAAY,WACVrO,QAAQC,IAAI,gBACZ4Q,EAAW7U,MAPI,IAACA,GAmHkDuO,KAAK,QAAQC,SAAU6B,EAA3E,SACE,eAAC,KAAD,CAAY6B,SAAS,iBAduBN,EAAI5R,eAuBhE,eAACsS,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BzK,UAAU,MACV0K,MAAOmC,EAAM3N,OACbwJ,YAAaA,EACb3D,KAAMA,EACN4F,aAhJiB,SAAChF,EAA0BiF,GAClDnC,EAAQmC,IAgJFC,oBA7IwB,SAAClF,GAC/BgD,GAAgBhD,EAAMC,OAAOlO,OAC7B+Q,EAAQ,a,8BCpDNvL,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,GAGN0N,KAAM,CACJzN,MAAO,MACP2I,QAAS,OACTrB,UAAW,QAEbC,UAAW,CACTvH,MAAO,OACPwH,aAAc,YA0LHqI,GA3K2B,WAAM,IAAD,EACf1S,mBAC5B,CAACmG,UAAW,GAAIC,SAAU,GAAIuM,QAAS,GAAIrM,MAAO,GAClD9D,MAAOrG,GAAcwB,QAAS6I,WAAY,GAAI4K,aAAc,KAHjB,mBACtCZ,EADsC,KAC7BC,EAD6B,OAMPzQ,mBAAwB,IANjB,mBAMtC6N,EANsC,KAMzBC,EANyB,KAS7CvG,GAAkB,CAAE/E,MAAOlE,GAAoBE,kBAC/C,IAAM6F,EAAaC,qBAAW1E,IAExB4H,EAAUC,cACVzD,EAAUtB,KAEVtG,EAASC,KAAiBC,MAoB1B4O,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7BuT,EAAW,2BAAID,GAAL,kBAAenF,EAAYnO,MAGjC0V,EAAqB,SAACzH,GAC1B,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KACjCjF,QAAQC,IAAI,QAASwJ,EAAMC,OAAOlO,OAClCuT,EAAW,2BAAID,GAAL,kBAAenF,EAAYD,EAAOlO,UAwD9C,OARAwK,qBAAU,WAGR,OAFArD,EAAW3E,kBAAkB,kBAzE7B4O,KACGjG,MAAK,SAAAtG,GAAY,IACTE,EAAyBF,EAAzBE,KAAMD,EAAmBD,EAAnBC,OAAmBD,EAAXtF,QACR,MAAVuF,IACD8L,EAAe7L,GACfwO,EAAW,2BAAID,GAAL,IAAcY,aAAcnP,EAAK,GAAGvE,UAGjD4K,OAAM,SAAA1G,OAmEF,eAGN,IAGD,gBAAC,WAAD,WACE,eAAC0J,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAxD,SACE,eAACiE,EAAA,EAAD,CAAYnM,MAAM,UAAU4B,QAxFP,WACzBqC,EAAQmJ,UAuFJ,SACE,eAAC,IAAD,QAGJ,gBAACrF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAW,OAAQT,QAAQ,OAAQkC,cAAe,UAAnH,UACE,eAAC/F,EAAA,EAAD,CAAYC,QAAQ,KAAKvC,MAAM,cAA/B,8BAGA,eAACoI,EAAA,EAAD,IACA,sBAAKhG,MAAO,CAAC9C,MAAM,OAAQ6G,QAAQ,OAAQmC,eAAgB,UAA3D,SACE,wBAAMhH,UAAWb,EAAQsM,KAAMM,aAAa,MAAMC,SAlEhC,SAAC1F,GACzBA,EAAM4F,iBAEN,IAAMrK,EAAsCmH,EAAYgF,MAAK,SAAAnK,GAAI,OAAGA,EAAKhL,IAAM8S,EAAQY,gBACvF1P,QAAQC,IAAI,aAAc+E,GAE1B,IAAMoM,EAAyB,CAC7BxM,MAAOkK,EAAQlK,MACfqM,QAASnC,EAAQmC,QACjBxM,UAAWqK,EAAQrK,UACnBC,SAAUoK,EAAQpK,SAClB5D,MAAOgO,EAAQhO,MACfkE,WAAYA,EACZF,WAAYgK,EAAQhK,WACpBuM,SAAU,YAGZrR,QAAQC,IAAI,UAAWmR,GFvFpB,SAA0BtC,GAC/B,OAAO,IAAI3O,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,qBACJ8G,OAAQ,OACRnG,KAAMuO,IAEPnI,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SEiFtB4Q,CAA6BM,GAC1BzK,MAAK,SAAAtG,GAAY,IACTC,EAAyBD,EAAzBC,OAAcvF,GAAWsF,EAAjBE,KAAiBF,EAAXtF,SACR,WAAVuF,EACD5F,EAAOM,KAAK,CACVC,KAAM,UACNH,MAAO,UACPI,KAAMH,GAAoB,4BAC1BuU,mBAAmB,EACnBC,UAAW,WACTR,EAAW,CAACnK,MAAO,GAAIqM,QAAS,GAAIxM,UAAW,GAAIC,SAAU,GAAIgL,aAAcvD,EAAY,GAAGnQ,GAAI8I,WAAY,GAAIhE,MAAOrG,GAAcwB,aAI3IvB,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,UACPI,KAAMH,GAAoB,cAI/B6L,OAAM,SAAA1G,QA0BH,UACE,eAACoK,GAAA,EAAD,CAAWtO,GAAG,YAAYE,MAAM,aAAa+I,KAAK,YAAYzJ,MAAOsT,EAAQrK,UAC3EL,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,WAAWE,MAAM,YAAY+I,KAAK,WAAWzJ,MAAOsT,EAAQpK,SACxEN,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,UAAUE,MAAM,QAAQ+I,KAAK,UAAUzJ,MAAOsT,EAAQmC,QAClE7M,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,QAAQE,MAAM,QAAQ+I,KAAK,QAAQzJ,MAAOsT,EAAQlK,MAC9DR,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,QAAQE,MAAM,cAAc+I,KAAK,aAAazJ,MAAOsT,EAAQhK,WACzEV,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,gBAAC8H,GAAA,EAAD,CAAalN,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAnD,UACE,eAAC6I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,wBACA,eAACC,GAAA,EAAD,CACEC,QAAM,EACNlW,MAAOsT,EAAQY,aACf7E,SAAUqG,EACVhV,MAAM,aACN+I,KAAK,eALP,SAOGkH,GAAeA,EAAYoB,KAAI,SAACvI,GAC/B,OACE,yBAAQxJ,MAAOwJ,EAAWhJ,GAA1B,SAAmDgJ,EAAWC,MAA3BD,EAAWhJ,YAKtD,gBAACsV,GAAA,EAAD,CAAalN,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAnD,UACE,eAAC6I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,mBACA,eAACC,GAAA,EAAD,CACEC,QAAM,EACNlW,MAAOsT,EAAQhO,MACf+J,SAAUqG,EACVhV,MAAM,OACN+I,KAAK,QALP,SAOGlJ,GAAewR,KAAI,SAACoE,GACnB,OACE,yBAAQnW,MAAOmW,EAAM3V,GAArB,SAAyC2V,EAAMzV,OAAjByV,EAAM3V,YAK5C,eAACyO,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,YAAYoC,MAAO,CAACuL,MAAO,SAAUhE,KAAK,SAA5E,SACE,eAACrH,EAAA,EAAD,CAAYC,QAAQ,SAApB,uCCxLRpD,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,GAGN0N,KAAM,CACJzN,MAAO,MACP2I,QAAS,OACTrB,UAAW,QAEbC,UAAW,CACTvH,MAAO,OACPwH,aAAc,YA4NHiJ,GAzMyB,WAAK,MAEbtT,mBAC5B,CAACmG,UAAW,GAAIC,SAAU,GAAIuM,QAAS,GAAIrM,MAAO,GAClD9D,MAAOrG,GAAcwB,QAAS6I,WAAY,GAAI4K,aAAc,KAJnB,mBAEpCZ,EAFoC,KAE3BC,EAF2B,OAMLzQ,mBAAwB,IANnB,mBAMpC6N,EANoC,KAMvBC,EANuB,OAOb9N,oBAAkB,GAPL,mBAOpC+N,EAPoC,KAO3BC,EAP2B,KAQnCuF,EAAWlC,cAAXkC,OACFlP,EAAaC,qBAAW1E,IAExB4H,EAAUC,cACVzD,EAAUtB,KAEVtG,EAASC,KAAiBC,MAM1B4O,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7BuT,EAAW,2BAAID,GAAL,kBAAenF,EAAYnO,MAOjC0V,EAAqB,SAACzH,GAC1B,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KACjCjF,QAAQC,IAAI,QAASwJ,EAAMC,OAAOlO,OAClCuT,EAAW,2BAAID,GAAL,kBAAenF,EAAYD,EAAOlO,UAgBxCgJ,EAAW,WHrDZ,IAAiBxI,EGsDpBsQ,GAAW,IHtDStQ,EGuDA6T,SAASgC,GHtDxB,IAAI1R,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,IAAD,OAAMkQ,GAAN,YAAqB9T,GACxB0K,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UGiDnByG,MAAK,SAAAtG,GAAY,IACTC,EAAyBD,EAAzBC,OAAQC,EAAiBF,EAAjBE,KAAMxF,EAAWsF,EAAXtF,QACrBiF,QAAQC,IAAI,OAAQM,GACN,YAAXD,EACEC,EACDwO,EAAW,CAACnK,MAAOrE,EAAKqE,MAAOqM,QAAS1Q,EAAK0Q,QAASxM,UAAWlE,EAAKkE,UAAWC,SAAUnE,EAAKmE,SAAUgL,aAAcnP,EAAKyE,WAAYF,WAAYvE,EAAKuE,WAAYhE,MAAOP,EAAKsE,gBAElLnK,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,SACPI,KAAM,yBAIVR,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,SACPI,KAAMH,GAAoB,4BAI/B6L,OAAM,SAAA1G,OAGN2G,SAAQ,WACPyF,GAAW,OAoDjB,OAVAzG,GAAkB,CAAC/E,MAAOlE,GAAoBI,gBAE9CgJ,qBAAU,WAIR,OAHArD,EAAW3E,kBAAkB,gBAC7BwG,IAtFAoI,KACGjG,MAAK,SAAAtG,GAAY,IACTE,EAAgBF,EAAhBE,KACM,MADUF,EAAVC,QAEX8L,EAAe7L,MAGlBqG,OAAM,SAAA1G,OAiFF,eAEN,CAAC2R,IAGF,gBAAC,WAAD,WACE,eAACjI,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAxD,SACE,eAACiE,EAAA,EAAD,CAAYnM,MAAM,UAAU4B,QAtHP,WACzBqC,EAAQmJ,UAqHJ,SACE,eAAC,IAAD,QAGJ,gBAACrF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAW,OAAQT,QAAQ,OAAQkC,cAAe,UAAnH,UACE,eAAC/F,EAAA,EAAD,CAAYC,QAAQ,KAAKvC,MAAM,cAA/B,uBAGA,eAACoI,EAAA,EAAD,IACCoC,EAAU,eAACa,GAAA,EAAD,CAAgBrL,MAAM,YAAYoC,MAAO,CAAC9C,MAAO,UAAa,KACzE,sBAAK8C,MAAO,CAAC9C,MAAM,OAAQ6G,QAAQ,OAAQmC,eAAgB,UAA3D,SACE,wBAAMhH,UAAWb,EAAQsM,KAAMM,aAAa,MAAMC,SA9DhC,SAAC1F,GACzBA,EAAM4F,iBACNrP,QAAQC,IAAI,UAAW6O,GAEvB,IAAMgD,EAA4B,CAChC9V,GAAI6T,SAASgC,GACbpN,UAAWqK,EAAQrK,UACnBC,SAAUoK,EAAQpK,SAClBE,MAAOkK,EAAQlK,MACfqM,QAASnC,EAAQmC,QACjBnM,WAAYgK,EAAQhK,WACpBhE,MAAOgO,EAAQhO,MACf4O,aAAcZ,EAAQY,eHtFrB,SAAoB1T,EAAY8S,GACrC,OAAO,IAAI3O,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,IAAD,OAAMkQ,GAAN,YAAqB9T,GACxB0K,OAAQ,MACRnG,KAAMuO,IAEPnI,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UGgFtB4Q,CAAuBjB,SAASgC,GAASC,GACtCnL,MAAK,SAAAtG,GAAY,IACTC,EAAyBD,EAAzBC,OAAcvF,GAAWsF,EAAjBE,KAAiBF,EAAXtF,SACR,WAAVuF,EACD5F,EAAOM,KAAK,CACVC,KAAM,UACNH,MAAO,UACPI,KAAMH,GAAoB,gCAC1BuU,mBAAmB,IAGrB5U,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,UACPI,KAAMH,GAAoB,cAI/B6L,OAAM,SAAA1G,GACL/E,GAAe,cAAe+E,OA6B5B,UACA,eAACoK,GAAA,EAAD,CAAWtO,GAAG,YAAYE,MAAM,aAAa+I,KAAK,YAAYzJ,MAAOsT,EAAQrK,UACzEL,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,WAAWE,MAAM,YAAY+I,KAAK,WAAWzJ,MAAOsT,EAAQpK,SACxEN,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,UAAUE,MAAM,QAAQ+I,KAAK,UAAUzJ,MAAOsT,EAAQmC,QAClE7M,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,QAAQE,MAAM,QAAQ+I,KAAK,QAAQzJ,MAAOsT,EAAQlK,MAC9DR,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,aAAaE,MAAM,cAAc+I,KAAK,aAAazJ,MAAOsT,EAAQhK,WAC9EV,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,gBAAC8H,GAAA,EAAD,CAAalN,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAnD,UACE,eAAC6I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,wBACA,eAACC,GAAA,EAAD,CACEC,QAAM,EACNlW,MAAOsT,EAAQY,aACf7E,SAAUqG,EACVhV,MAAM,aACN+I,KAAK,eALP,SAOGkH,GAAeA,EAAYoB,KAAI,SAACvI,GAC/B,OACE,yBAAQxJ,MAAOwJ,EAAWhJ,GAA1B,SAAmDgJ,EAAWC,MAA3BD,EAAWhJ,YAKtD,gBAACsV,GAAA,EAAD,CAAalN,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAnD,UACE,eAAC6I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,mBACA,eAACC,GAAA,EAAD,CACEC,QAAM,EACNlW,MAAOsT,EAAQhO,MACf+J,SAAUqG,EACVhV,MAAM,iBACN+I,KAAK,QALP,SAOGlJ,GAAewR,KAAI,SAACoE,GACnB,OACE,yBAAQnW,MAAOmW,EAAM3V,GAArB,SAAyC2V,EAAMzV,OAAjByV,EAAM3V,YAK5C,eAACyO,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,YAAYoC,MAAO,CAACuL,MAAO,SAAUhE,KAAK,SAAShB,SAAU6B,KAhKhGyC,EAAQrK,WAAaqK,EAAQpK,UAAYoK,EAAQhO,OAASgO,EAAQY,cAAgBZ,EAAQmC,SAAWnC,EAAQlK,OAgK5G,SACE,eAACT,EAAA,EAAD,CAAYC,QAAQ,SAApB,yC,cC3OF2N,G,wCAAAA,K,kBAAAA,E,kBAAAA,E,uBAAAA,Q,KAML,IAAMC,GAAoB,CAC/B,CAAChW,GAAI,UAAWE,MAAO,WACvB,CAACF,GAAI,UAAWE,MAAO,WACvB,CAACF,GAAI,YAAaE,MAAO,eCMrB8E,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,GAGN0N,KAAM,CACJzN,MAAO,kBACPE,gBAAiB,UAEnBqH,UAAW,CACTvH,MAAO,OACPwH,aAAc,QAEhBqD,eAAgB,CACdC,UAAW,IACXnC,QAAS,QAYPmI,GAAgC,CACpC,CAACjW,GAAI,OAAQE,MAAO,OAAQmI,MAAO,QACnC,CAACrI,GAAI,SAAUE,MAAO,SAAUmI,MAAO,QACvC,CAACrI,GAAI,UAAWE,MAAO,UAAWmI,MAAO,QACzC,CAACrI,GAAI,WAAYE,MAAO,WAAYmI,MAAO,SAgP9B6N,GA5OkC,WAAM,IAAD,EAEtB5T,mBAAyB,IAFH,mBAE7C6T,EAF6C,KAEpCC,EAFoC,OAG1B9T,mBAAqB,CAAC2G,KAAM,GAAIoN,OAAQN,GAAcO,UAAWC,QAAS,GAAIC,SAAU,IAH9D,mBAG7CC,EAH6C,KAGtCC,EAHsC,OAItBpU,oBAAkB,GAJI,mBAI7C+N,EAJ6C,KAIpCC,EAJoC,OAKlBhO,oBAAkB,GALA,mBAK7CqU,EAL6C,KAKlCC,EALkC,KAO9C9M,EAAUC,cACVzD,EAAUtB,KAEVtG,EAASC,KAAiBC,MAM1B4O,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7BkX,EAAS,2BAAID,GAAL,kBAAa9I,EAAYnO,MAsB7BqX,EAAoB,WACxB,ICpF4B/D,EDgGtBgE,EAA+C,CACnDC,oBAbgDZ,EAAQ5E,KAAI,SAAAkF,GAO5D,MAN+C,CAC7CxN,KAAMwN,EAAMxN,KACZoN,OAAQI,EAAMJ,OACdE,QAASE,EAAMF,QACfC,SAAUC,EAAMD,aASlBQ,YALerT,KACW3D,IAM5BsQ,GAAW,ICpGiBwC,EDqGGgE,ECpGjC9S,QAAQC,IAAI,UAAW6O,GAChB,IAAI3O,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,wBACJ8G,OAAQ,OACRnG,KAAMuO,IAEPnI,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UD6FnByG,MAAK,SAAAtG,GAC4BA,EAAzBE,KADU,IACJD,EAAmBD,EAAnBC,OAAQvF,EAAWsF,EAAXtF,QACP,OAAXuF,IACD8R,EAAW,IACXvX,GAAiB,eAAgBE,GAAoB,qBAGxD6L,OAAM,SAAA1G,GACL/E,GAAe,SAAU+E,MAE1B2G,SAAQ,WACPyF,GAAW,OAsBX2G,EAAoB,WACxBL,GAAa,IAmBf,OACE,gBAAC,WAAD,WACE,eAAChJ,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAxD,SACE,eAACiE,EAAA,EAAD,CAAYnM,MAAM,UAAU4B,QAzGP,WACzBqC,EAAQmJ,UAwGJ,SACE,eAAC,IAAD,QAGJ,gBAACrF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAW,OAAQT,QAAQ,OAAQkC,cAAe,UAAnH,UACE,gBAACpD,GAAA,EAAD,CAAMC,WAAS,EAAC9C,MAAO,CAAC6F,QAAS,GAAjC,UACE,eAAChD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACE,eAAChD,EAAA,EAAD,CAAYC,QAAQ,KAAKvC,MAAM,cAA/B,4BAIF,eAACiF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGlD,MAAO,CAAC+F,UAAU,SAAlD,SACE,gBAACS,EAAA,EAAD,CAAQrG,QAAQ,WAAWvC,MAAM,UAAU4B,QA/B5B,WACvBmP,GAAa,IA8BL,UACE,eAACM,GAAA,EAAD,CAAKhF,SAAS,UADhB,qBAMJ,eAACjE,EAAA,EAAD,IACA,uBAAKhG,MAAO,CAAC9C,MAAM,OAAQ6G,QAAQ,OAAQmC,eAAgB,SAAUD,cAAe,UAApF,UACE,eAAC+C,GAAA,EAAD,CAAgB9J,UAAWb,EAAQ0J,eAAnC,SACE,gBAACmB,GAAA,EAAD,CAAOC,cAAY,EAACL,aAAW,4BAA/B,UACE,eAACM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACG2E,GAAc1E,KAAI,SAAAC,GACjB,OACE,eAACC,GAAA,EAAD,UACGD,EAAOtR,OADMsR,EAAOxR,OAK3B,eAACyR,GAAA,EAAD,2BAKJ,eAACC,GAAA,EAAD,UACGyE,GAAWA,EAAQ5E,KAAI,SAACkF,EAAOU,GAC9B,OACE,gBAAC7F,GAAA,EAAD,WACG2E,GAAc1E,KAAI,SAACC,GAClB,IAAMhS,EAAciX,EAAMjF,EAAOxR,IACjC,OACE,eAACyR,GAAA,EAAD,CAA2BpJ,MAAOmJ,EAAOnJ,MAAzC,SACG7I,GADagS,EAAOxR,OAK3B,eAACyR,GAAA,EAAD,UACE,eAACO,EAAA,EAAD,CAAYnM,MAAM,YAAY4B,QAAS,kBA9EnC,SAAC0P,GAEzBf,EAAWD,EAAQtF,QAAO,SAAC4F,EAAOW,GAAR,OAAgBD,GAASC,MA4EaC,CAAkBF,IAA9D,SACE,eAAC,KAAD,UAXSA,aAoBzB,eAACrM,GAAA,EAAD,CAAMC,WAAS,EAAC9C,MAAO,CAACwE,UAAW,QAAnC,SACE,eAAC3B,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIhD,MAAO,CAAC+F,UAAW,SAAtC,SACE,gBAACS,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,YAAY2I,WA3EjD2H,EAAQnP,OAAS,IA2E6DqJ,EAAS5I,QApJtE,SAACgG,GACzBA,EAAM4F,iBACN3U,EAAOM,KAAK,CACVF,MAAM,iCACNqT,gBAAgB,EAChBC,kBAAmB,MACnBC,WAAY,WACVwE,QA6IM,UACGxG,EAAS,eAACX,GAAA,EAAD,CAAkBnB,KAAM,KAAS,KAC3C,eAAC+I,GAAA,EAAD,IAFF,IAEW,uBAAMrP,MAAO,CAACsP,WAAY,OAA1B,uCAMnB,gBAACtI,GAAA,EAAD,CAAQE,QAAS8H,EAAmB7H,kBAAgB,eAAeF,KAAMyH,EAAW1O,MAAO,CAAC9C,MAAO,QAAnG,UACE,eAACmK,GAAA,EAAD,4BAGA,eAACC,GAAA,EAAD,CAAeiI,UAAQ,EAAvB,SACE,uBAAKvP,MAAO,CAAC9C,MAAO,SAApB,UACE,gBAACmQ,GAAA,EAAD,CAAalN,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAnD,UACE,eAAC6I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,wBACA,eAACC,GAAA,EAAD,CACEC,QAAM,EACNlW,MAAOiX,EAAMJ,OACbxH,SA9Ka,SAACpB,GAC1B,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KACjCjF,QAAQC,IAAI,QAASwJ,EAAMC,OAAOlO,OAClCkX,EAAS,2BAAID,GAAL,kBAAa9I,EAAYD,EAAOlO,UA2K5BU,MAAM,SACN+I,KAAK,SALP,SAOG+M,GAAkBzE,KAAI,SAAA8E,GACrB,OACE,yBAAwB7W,MAAO6W,EAAOrW,GAAtC,SACGqW,EAAOnW,OADGmW,EAAOrW,YAO5B,eAACsO,GAAA,EAAD,CAAWtO,GAAG,YAAYE,MAAM,YAAY+I,KAAK,OAAOzJ,MAAOiX,EAAMxN,KAAMiK,aAAa,MACtF9K,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,UAAUE,MAAM,UAAU+I,KAAK,UAAUzJ,MAAOiX,EAAMF,QAASrD,aAAa,MACxF9K,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,eAACc,GAAA,EAAD,CAAWtO,GAAG,WAAWE,MAAM,WAAW+I,KAAK,WAAWzJ,MAAOiX,EAAMD,SAAUtD,aAAa,MAAM1D,KAAK,SACvGpH,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAWmC,SAAUrB,IAC7D,gBAAC1C,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACwD,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,YAAYoC,MAAO,CAACuL,MAAO,QAAS/L,QAASwP,EAA/E,sBAIF,eAACnM,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACwD,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,UAAUoC,MAAO,CAACuL,MAAO,SAAU/L,QAnJ5D,WACrB,IAAMgQ,EAAsB,CAC1BxO,KAAMwN,EAAMxN,KACZoN,OAAQI,EAAMJ,OACdE,QAASE,EAAMF,QACfC,SAAUC,EAAMD,UAGlBJ,EAAW,GAAD,oBAAKD,GAAL,CAAcsB,KACxBf,EAAS,CAACzN,KAAM,GAAIoN,OAAQN,GAAcO,UAAWC,QAAS,GAAIC,SAAU,KA0I8BhI,WApHtGiI,EAAMxN,MAASwN,EAAMJ,QAAWI,EAAMF,WAAWE,EAAMD,UAAY,IAoH3D,wC,UErQV5G,GAA+B,CACnC,CAAC5P,GAAI,OAAQE,MAAO,OAAQ2P,SAAU,IAAKxH,MAAO,QAClD,CAACrI,GAAI,SAAUE,MAAO,SAAU2P,SAAU,IAAKxH,MAAO,QACtD,CAACrI,GAAI,WAAYE,MAAO,WAAY2P,SAAU,IAAKxH,MAAO,QAC1D,CAACrI,GAAI,cAAeE,MAAO,WAAY2P,SAAU,IAAKxH,MAAO,QAC7D,CAACrI,GAAI,cAAeE,MAAO,iBAAkB2P,SAAU,IAAKxH,MAAO,OAAQoM,OAAQ,SAACjV,GAAD,OAAkBJ,GAAiBI,KACtH,CAACQ,GAAI,SAAUE,MAAO,SAAU2P,SAAU,IAAKxH,MAAO,SAGlDrD,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpC+N,UAAW,CACT3K,MAAO,OACP6G,QAAS,OACTmC,eAAgB,gBAChB4B,WAAY,UAEdC,eAAgB,CACdC,UAAW,IACXnC,QAAS,QAqIE4J,GA/H8B,WAAM,IAAD,EAChBpV,mBAAyB,IADT,mBACzCqV,EADyC,KAC/BC,EAD+B,OAElBtV,oBAAS,GAFS,mBAEhCgO,GAFgC,aAGxBhO,mBAAS,GAHe,mBAGzCuK,EAHyC,KAGnC0D,EAHmC,OAIVjO,mBAAS,IAJC,mBAIzCkO,EAJyC,KAI5BC,EAJ4B,KAO1C3G,EAAUC,cACRpJ,EAAS+P,cAAT/P,KACF2F,EAAUtB,KAEVtB,EAAWmU,KAEXlR,EAAaC,qBAAW1E,IAmBxB4V,EAAkB,WDDnB,IAA6BjC,ECEhCvF,GAAW,IDFqBuF,ECGGnS,EAAS1D,GDFvC,IAAImE,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,2BAAD,OAA6BiS,GAChCnL,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UCHnByG,MAAK,SAACtG,GAAa,IACVC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAChBP,QAAQC,IAAI,MAAOM,GACL,UAAXD,GACDsT,EAAYrT,GAGdP,QAAQC,IAAI,WAAY0T,MAEzB/M,OAAM,SAAA1G,GACL/E,GAAe,cAAe,gCAE/B0L,SAAQ,WACPyF,GAAW,OAYjB,OARAtG,qBAAU,WAGR,OAFArD,EAAW3E,kBAAkB,eAC7B8V,IACO,eAGN,IAGD,gBAAC,WAAD,WACE,eAAClK,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAASgD,aAAW,iBAA5E,SACE,uBAAK5J,UAAWb,EAAQwJ,UAAxB,UACE,eAAC3H,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAGA,eAACqG,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,UAChCmL,kBAAgB,EAACD,aAAW,2BAA2BtJ,QArDzB,WACtCqC,EAAQG,KAAR,UAAgBtJ,EAAhB,aAmDM,SAEE,eAACwH,EAAA,EAAD,CAAYC,QAAQ,SAApB,gCAON,gBAACwF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAU,QAA3E,UACE,eAACwE,GAAA,EAAD,CAAgB9J,UAAWb,EAAQ0J,eAAnC,SACE,gBAACmB,GAAA,EAAD,CAAOC,cAAY,EAACL,aAAW,4BAA/B,UACE,eAACM,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,UACG1B,GAAa2B,KAAI,SAACC,GAAD,OAChB,eAACC,GAAA,EAAD,CAEEpJ,MAAOmJ,EAAOnJ,MACdJ,MAAO,CAAC4H,SAAU2B,EAAO3B,UAH3B,SAKG2B,EAAOtR,OAJHsR,EAAOxR,WASpB,eAAC0R,GAAA,EAAD,UACGiG,GAAYA,EAAShG,MAAM9E,EAAK2D,EAAa3D,EAAK2D,EAAYA,GAAae,KAAI,SAACK,GAC/E,OACE,eAACN,GAAA,EAAD,CAAUO,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,SACGnC,GAAa2B,KAAI,SAACC,GACDA,EAAOxR,GAAvB,IACMR,EAAaoS,EAAIJ,EAAOxR,IACxB+X,EAAgBvG,EAAOiD,OAASjD,EAAOiD,OAAOjV,GAASA,EAC7D,OACE,eAACiS,GAAA,EAAD,CAA2BpJ,MAAOmJ,EAAOnJ,MAAzC,SACiB,WAAdmJ,EAAOxR,GAAkB,uBAAMiI,MAAO,CAAC5C,gBAAiB9F,GAAyBC,GAAQsO,QAAS,MAAOkK,aAAc,OAAQnS,MAAO,WAA7G,SAA0HkS,IAAwBA,GAD9JvG,EAAOxR,QANsB4R,EAAI5R,cAiBjE,eAACsS,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BzK,UAAU,MACV0K,MAAOmF,EAAS3Q,OAChBwJ,YAAaA,EACb3D,KAAMA,EACN4F,aAnGiB,SAAChF,EAA0BiF,GAClDnC,EAAQmC,IAmGFC,oBAhGwB,SAAClF,GAE/BgD,GAAgBhD,EAAMC,OAAOlO,OAC7B+Q,EAAQ,a,oBC7CNX,GAA+B,CACnC,CAAC5P,GAAI,OAAQE,MAAO,OAAQ2P,SAAU,IAAKxH,MAAO,QAClD,CAACrI,GAAI,WAAYE,MAAO,WAAYmI,MAAO,QAC3C,CAACrI,GAAI,SAAUE,MAAO,SAAU2P,SAAU,IAAKxH,MAAO,QACtD,CAACrI,GAAI,UAAWE,MAAO,UAAW2P,SAAU,IAAKxH,MAAO,QACxD,CAACrI,GAAI,cAAeE,MAAO,iBAAkB2P,SAAU,IAAKxH,MAAO,OAAQoM,OAAQ,SAACjV,GAAD,OAAkBJ,GAAiBI,KACtH,CAACQ,GAAI,cAAeE,MAAO,WAAY2P,SAAU,IAAKxH,MAAO,SAGzDrD,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpC+N,UAAW,CACT3K,MAAO,OACP6G,QAAS,OACTmC,eAAgB,gBAChB4B,WAAY,UAEdC,eAAgB,CACdC,UAAW,IACXnC,QAAS,QAiNEmK,GA3MmC,WAAM,IAAD,EACrB3V,mBAAyB,IADJ,mBAC9CqV,EAD8C,KACpCC,EADoC,OAEvBtV,oBAAS,GAFc,mBAE9C+N,EAF8C,KAErCC,EAFqC,OAG7BhO,mBAAS,GAHoB,mBAG9CuK,EAH8C,KAGxC0D,EAHwC,OAIfjO,mBAAS,IAJM,mBAI9CkO,EAJ8C,KAIjCC,EAJiC,KAM/C/R,EAASC,KAAiBC,MAG1BkL,EAAUC,cACRpJ,EAAS+P,cAAT/P,KACF2F,EAAUtB,KAGVtB,EAAWmU,KAEXlR,EAAaC,qBAAW1E,IAwCxBgW,EAAiB,SAACC,GACtB7H,GAAW,GFER,SAA4B6H,EAAmBrP,GACpD,OAAO,IAAI3E,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,iBAAD,OAAmBuU,EAAnB,sBAA0CrP,EAA1C,YACH4B,OAAQ,MACRnG,KAAM,KAEPoG,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SETtBkU,CAAkCD,EAAWzU,EAAS1D,IACnD2K,MAAK,SAAAtG,GAAY,IACTC,EAAmBD,EAAnBC,OAAQvF,EAAWsF,EAAXtF,QACD,OAAXuF,GACDsT,EAAYD,EAAS9G,QAAO,SAAA7F,GAAI,OAAIA,EAAKhL,IAAMmY,MAC/CtZ,GAAiB,kBAAmBE,IAEpCI,GAAe,kBAAmBJ,MAGrC6L,OAAM,SAAA1G,OAGN2G,SAAQ,kBAAKyF,GAAW,OAGvB+H,EAAgB,SAACF,GACrB7H,GAAW,GFJR,SAA8B6H,EAAmBrP,GACtD,OAAO,IAAI3E,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,iBAAD,OAAmBuU,EAAnB,sBAA0CrP,EAA1C,WACH4B,OAAQ,MACRnG,KAAM,KAEPoG,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SEHtBkU,CAAoCD,EAAWzU,EAAS1D,IACrD2K,MAAK,SAAAtG,GAAY,IACTC,EAAmBD,EAAnBC,OAAQvF,EAAWsF,EAAXtF,QACD,OAAXuF,GACDsT,EAAYD,EAAS9G,QAAO,SAAA7F,GAAI,OAAIA,EAAKhL,IAAMmY,MAC/CtZ,GAAiB,iBAAkBE,IAEnCI,GAAe,iBAAkBJ,MAGpC6L,OAAM,SAAA1G,OAGN2G,SAAQ,kBAAKyF,GAAW,OAGvBwH,EAAkB,WF5CnB,IAAsCpE,EAAsB5K,EE8C/DwH,GAAW,IF9C8BoD,EE+CGhQ,EAASsF,WAAWhJ,GF/CD8I,EE+CepF,EAAS1D,GF9ClF,IAAImE,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,6BAAD,OAA+B8P,EAA/B,sBAAyD5K,GAC5D4B,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UEyCnByG,MAAK,SAACtG,GAAa,IACVC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAChBP,QAAQC,IAAI,MAAOM,GACL,YAAXD,GACDsT,EAAYrT,GAEdP,QAAQC,IAAI,WAAY0T,MAEzB/M,OAAM,SAAA1G,GACL/E,GAAe,cAAe,gCAE/B0L,SAAQ,WACPyF,GAAW,OAYjB,OARAtG,qBAAU,WAGR,OAFArD,EAAW3E,kBAAkB,qBAC7B8V,IACO,eAGN,IAGD,gBAAC,WAAD,WACE,eAAClK,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAASgD,aAAW,iBAA5E,SACE,uBAAK5J,UAAWb,EAAQwJ,UAAxB,UACE,eAAC3H,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAGA,eAACqG,EAAA,EAAD,CAAQrG,QAAQ,YAAYvC,MAAM,UAChCmL,kBAAgB,EAACD,aAAW,2BAA2BtJ,QA9GzB,WACtCqC,EAAQG,KAAR,UAAgBtJ,EAAhB,aA4GM,SAEE,eAACwH,EAAA,EAAD,CAAYC,QAAQ,SAApB,gCAON,gBAACwF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAU,QAA3E,UACE,gBAACwE,GAAA,EAAD,CAAgB9J,UAAWb,EAAQ0J,eAAnC,UACGK,EAAU,eAACa,GAAA,EAAD,CAAgBrL,MAAM,YAAYoC,MAAO,CAAC9C,MAAO,UAAa,KACzE,gBAACgM,GAAA,EAAD,CAAOC,cAAY,EAACL,aAAW,4BAA/B,UACE,eAACM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACG1B,GAAa2B,KAAI,SAACC,GAAD,OAChB,eAACC,GAAA,EAAD,CAEEpJ,MAAOmJ,EAAOnJ,MACdJ,MAAO,CAAC4H,SAAU2B,EAAO3B,SAAUzK,SAAUoM,EAAOpM,UAHtD,SAKGoM,EAAOtR,OAJHsR,EAAOxR,OAOhB,eAACyR,GAAA,EAAD,CAAWpJ,MAAM,QAAjB,0BAKJ,eAACqJ,GAAA,EAAD,UACGiG,GAAYA,EAAShG,MAAM9E,EAAK2D,EAAa3D,EAAK2D,EAAYA,GAAae,KAAI,SAACK,GAC/E,OACE,gBAACN,GAAA,EAAD,CAAUO,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACGnC,GAAa2B,KAAI,SAACC,GACDA,EAAOxR,GAAvB,IACMR,EAAaoS,EAAIJ,EAAOxR,IACxB+X,EAAgBvG,EAAOiD,OAASjD,EAAOiD,OAAOjV,GAASA,EAC7D,OACE,eAACiS,GAAA,EAAD,CAA2BpJ,MAAOmJ,EAAOnJ,MAAzC,SACiB,WAAdmJ,EAAOxR,GAAkB,uBAAMiI,MAAO,CAAC5C,gBAAiB9F,GAAyBC,GAAQsO,QAAS,MAAOkK,aAAc,OAAQnS,MAAO,WAA7G,SAA0HkS,IAAwBA,GAD9JvG,EAAOxR,OAK3B,eAACyR,GAAA,EAAD,CAAWpJ,MAAM,QAAjB,SACE,uBAAKJ,MAAO,CAAC4H,SAAU,SAAvB,UACE,eAACmC,EAAA,EAAD,CAAYxD,SAAUoD,EAAI0G,cAAgBja,EAAkBsB,QAAS4O,KAAK,QAC1E9G,QAAS,kBA7IHzH,EA6I2B4R,EAAI5R,QA5IzDtB,EAAOM,KAAK,CACVF,MAAM,4CACNqT,gBAAgB,EAChBC,kBAAmB,MACnBC,WAAY,WACVrO,QAAQC,IAAI,gBACZiU,EAAelY,MAPM,IAACA,GA6I8CiI,MAAO,CAAC5C,gB5BhJrD,U4BgJuFkT,YAAa,MAAO1S,MAAO,WADzH,SAEE,eAAC2S,GAAA,EAAD,MAEF,eAACxG,EAAA,EAAD,CAAYxD,SAAUoD,EAAI0G,cAAgBja,EAAkBsB,QAAS4O,KAAK,QAC1E9G,QAAS,kBArIGzH,EAqI2B4R,EAAI5R,QApI/DtB,EAAOM,KAAK,CACVF,MAAM,2CACNqT,gBAAgB,EAChBC,kBAAmB,MACnBC,WAAY,WACVrO,QAAQC,IAAI,gBACZoU,EAAcrY,MAPa,IAACA,GAqI8CiI,MAAO,CAAC5C,gBAAiB,UAAWQ,MAAO,WADrG,SAEE,eAAC4S,GAAA,EAAD,aAnB2C7G,EAAI5R,eA6BjE,eAACsS,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BzK,UAAU,MACV0K,MAAOmF,EAAS3Q,OAChBwJ,YAAaA,EACb3D,KAAMA,EACN4F,aA5KiB,SAAChF,EAA0BiF,GAClDnC,EAAQmC,IA4KFC,oBAzKwB,SAAClF,GAE/BgD,GAAgBhD,EAAMC,OAAOlO,OAC7B+Q,EAAQ,aClENvL,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,CACJ6I,UAAW,QACX5I,MAAO,OACP6G,QAAS,OACTkC,cAAe,MACfC,eAAgB,SAChB4B,WAAY,cAcD2I,GAX8B,WAC3C,IAAMpS,EAAUtB,KAChB,OAAQ,sBAAKmC,UAAWb,EAAQpB,KAAxB,SACN,sBAAK+C,MAAO,CAAC6F,QAAS,OAAQkK,aAAc,OAAQ3S,gBAAiB,WAArE,SACE,eAAC8C,EAAA,EAAD,CAAYC,QAAQ,KAApB,sCCFAwH,GAA+B,CACnC,CAAC5P,GAAI,OAAQE,MAAO,OAAQ2P,SAAU,IAAKxH,MAAO,QAClD,CAACrI,GAAI,WAAYE,MAAO,WAAY2P,SAAU,IAAKxH,MAAO,QAC1D,CAACrI,GAAI,YAAaE,MAAO,aAAc2P,SAAU,IAAKxH,MAAO,QAC7D,CAACrI,GAAI,SAAUE,MAAO,SAAU2P,SAAU,IAAKxH,MAAO,OAAQoM,OAAQ,SAACjV,GAAD,gB9B+C3C,M8B/C2C,YAA8BA,KACpG,CAACQ,GAAI,SAAUE,MAAO,SAAU2P,SAAU,IAAKxH,MAAO,QACtD,CAACrI,GAAI,UAAWE,MAAO,UAAW2P,SAAU,IAAKxH,MAAO,QACxD,CAACrI,GAAI,WAAYE,MAAO,WAAYuU,OAAQ,SAACjV,GAC3C,OAAOA,EAAMyJ,OAEf,CAACjJ,GAAI,cAAeE,MAAO,iBAAkB2P,SAAU,IAAKxH,MAAO,OAAQoM,OAAQ,SAACjV,GAAD,OAAkBJ,GAAiBI,MAGlHwF,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpC+N,UAAW,CACT3K,MAAO,OACP6G,QAAS,OACTmC,eAAgB,gBAChB4B,WAAY,UAEdC,eAAgB,CACdC,UAAW,IACXnC,QAAS,QAgME6K,GA5L8C,WAAM,IAAD,EAChCrW,mBAAyB,IADO,mBACzDqV,EADyD,KAC/CC,EAD+C,OAElCtV,oBAAS,GAFyB,mBAEzD+N,EAFyD,KAEhDC,EAFgD,OAGxChO,mBAAS,GAH+B,mBAGzDuK,EAHyD,KAGnD0D,EAHmD,OAI1BjO,mBAAS,IAJiB,mBAIzDkO,EAJyD,KAI5CC,EAJ4C,KAK1D/R,EAASC,KAAiBC,MAC1B0H,EAAUtB,KAEV2B,EAAaC,qBAAW1E,IACxBmL,EAAczG,qBAAW6C,IAoCzBmP,EAAiB,SAACT,EAAmBrP,GACzCwH,GAAW,GJsER,SAAwB6H,EAAmBrP,GAChD,OAAO,IAAI3E,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,iBAAD,OAAmBuU,EAAnB,sBAA0CrP,EAA1C,YACH4B,OAAQ,MACRnG,KAAM,KAEPoG,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SI7EtBkU,CAA8BD,EAAWrP,GACtC6B,MAAK,SAAAtG,GAAY,IACTC,EAAmBD,EAAnBC,OAAQvF,EAAWsF,EAAXtF,QACD,OAAXuF,GACDsT,EAAYD,EAAS9G,QAAO,SAAA7F,GAAI,OAAIA,EAAKhL,IAAMmY,MAC/CtZ,GAAiB,kBAAmBE,IAEpCI,GAAe,kBAAmBJ,MAGrC6L,OAAM,SAAA1G,OAGN2G,SAAQ,kBAAKyF,GAAW,OAGvB+H,EAAgB,SAACF,EAAmBrP,GACxCwH,GAAW,GJgER,SAAuB6H,EAAmBrP,GAC/C,OAAO,IAAI3E,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,iBAAD,OAAmBuU,EAAnB,sBAA0CrP,EAA1C,WACH4B,OAAQ,MACRnG,KAAM,KAEPoG,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SIvEtBkU,CAA6BD,EAAWrP,GACrC6B,MAAK,SAAAtG,GAAY,IACTC,EAAmBD,EAAnBC,OAAQvF,EAAWsF,EAAXtF,QACD,OAAXuF,GACDsT,EAAYD,EAAS9G,QAAO,SAAA7F,GAAI,OAAIA,EAAKhL,IAAMmY,MAC/CtZ,GAAiB,kBAAmBE,IAEpCI,GAAe,kBAAmBJ,MAGrC6L,OAAM,SAAA1G,OAGN2G,SAAQ,kBAAKyF,GAAW,OAGvBwH,EAAkB,WJwBnB,IAAmChP,EIvBtC9E,QAAQC,IAAI,qBAAsBoJ,EAAY/D,MAC9CgH,GAAW,IJsB2BxH,EIrBGuE,EAAY/D,KAAKtJ,GJsBrD,IAAImE,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,2BAAD,OAA6BkF,EAA7B,mBACH4B,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UI3BnByG,MAAK,SAACtG,GAAa,IACVC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAChBP,QAAQC,IAAI,MAAOM,GACL,OAAXD,GACDsT,EAAYrT,GAEdP,QAAQC,IAAI,WAAY0T,MAEzB/M,OAAM,SAAA1G,GACL/E,GAAe,cAAe,gCAE/B0L,SAAQ,WACPyF,GAAW,OAcjB,OAVAzG,GAAkB,CAAC/E,MAAOlE,GAAoBe,6BAE9CqI,qBAAU,WAGR,OAFArD,EAAW3E,kBAAkB,iCAC7B8V,IACO,eAGN,IAGD,gBAAC,WAAD,WACE,eAAClK,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAASgD,aAAW,iBAA5E,SACE,sBAAK5J,UAAWb,EAAQwJ,UAAxB,SACE,eAAC3H,EAAA,EAAD,CAAYC,QAAQ,KAApB,+BAMJ,gBAACwF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAU,QAA3E,UACE,gBAACwE,GAAA,EAAD,CAAgB9J,UAAWb,EAAQ0J,eAAnC,UACGK,EAAU,eAACa,GAAA,EAAD,CAAgBrL,MAAM,YAAYoC,MAAO,CAAC9C,MAAO,UAAa,KACzE,gBAACgM,GAAA,EAAD,CAAOC,cAAY,EAACL,aAAW,4BAA/B,UACE,eAACM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACG1B,GAAa2B,KAAI,SAACC,GAAD,OAChB,eAACC,GAAA,EAAD,CAEEpJ,MAAOmJ,EAAOnJ,MACdJ,MAAO,CAAC4H,SAAU2B,EAAO3B,UAH3B,SAKG2B,EAAOtR,OAJHsR,EAAOxR,OAOhB,eAACyR,GAAA,EAAD,CAAWpJ,MAAM,QAAjB,0BAKJ,eAACqJ,GAAA,EAAD,UACGiG,GAAYA,EAAShG,MAAM9E,EAAK2D,EAAa3D,EAAK2D,EAAYA,GAAae,KAAI,SAACK,GAC/E,OACE,gBAACN,GAAA,EAAD,CAAUO,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACGnC,GAAa2B,KAAI,SAACC,GACDA,EAAOxR,GAAvB,IACMR,EAAaoS,EAAIJ,EAAOxR,IACxB+X,EAAgBvG,EAAOiD,OAASjD,EAAOiD,OAAOjV,GAASA,EAC7D,OACE,eAACiS,GAAA,EAAD,CAA2BpJ,MAAOmJ,EAAOnJ,MAAzC,SACiB,WAAdmJ,EAAOxR,GAAkB,uBAAMiI,MAAO,CAAC5C,gBAAiB9F,GAAyBC,GAAQsO,QAAS,MAAOkK,aAAc,OAAQnS,MAAO,WAA7G,SAA0HkS,IAAwBA,GAD9JvG,EAAOxR,OAK3B,eAACyR,GAAA,EAAD,CAAWpJ,MAAM,QAAjB,SACE,uBAAKJ,MAAO,CAAC4H,SAAU,OAAQ7D,QAAS,OAAQkC,cAAe,MAAOC,eAAgB,cAAtF,UACE,eAACM,EAAA,EAAD,CAAQD,SAAUoD,EAAIiH,WAAa,EAAGtK,KAAK,QAAQyC,kBAAgB,EACnE5I,QAAQ,YAAYX,QAAS,kBAzIvB0Q,EAyI+CvG,EAAI5R,QAxI7EtB,EAAOM,KAAK,CACVF,MAAM,4CACNqT,gBAAgB,EAChBC,kBAAmB,MACnBC,WAAY,WACVrO,QAAQC,IAAI,gBACZ2U,EAAeT,EAAW9K,EAAY/D,KAAKtJ,OAPtB,IAACmY,GAyIkElQ,MAAO,CAAC5C,gBAAiB,UAAWkT,YAAa,MAAO1S,MAAO,WADvI,SAEE,eAAC2S,GAAA,EAAD,MAEF,eAAC/J,EAAA,EAAD,CAAQD,SAAUoD,EAAIiH,WAAa,EAAGtK,KAAK,QAAQyC,kBAAgB,EACnE5I,QAAQ,YAAYX,QAAS,kBAjIjBzH,EAiI+C4R,EAAI5R,QAhInFtB,EAAOM,KAAK,CACVF,MAAM,2CACNqT,gBAAgB,EAChBC,kBAAmB,MACnBC,WAAY,WACVrO,QAAQC,IAAI,gBACZoU,EAAcrY,EAAIqN,EAAY/D,KAAKtJ,OAPR,IAACA,GAiIkEiI,MAAO,CAAC5C,gBAAiB,UAAWQ,MAAO,WADzH,SAEE,eAAC4S,GAAA,EAAD,aAnB2C7G,EAAI5R,eA6BjE,eAACsS,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BzK,UAAU,MACV0K,MAAOmF,EAAS3Q,OAChBwJ,YAAaA,EACb3D,KAAMA,EACN4F,aAxKiB,SAAChF,EAA0BiF,GAClDnC,EAAQmC,IAwKFC,oBArKwB,SAAClF,GAE/BgD,GAAgBhD,EAAMC,OAAOlO,OAC7B+Q,EAAQ,aC1CNX,GAA+B,CACnC,CAAC5P,GAAI,OAAQE,MAAO,OAAQ2P,SAAU,IAAKxH,MAAO,QAClD,CAACrI,GAAI,WAAYE,MAAO,WAAY2P,SAAU,IAAKxH,MAAO,QAC1D,CAACrI,GAAI,SAAUE,MAAO,SAAU2P,SAAU,IAAKxH,MAAO,QACtD,CAACrI,GAAI,cAAeE,MAAO,iBAAkB2P,SAAU,IAAKxH,MAAO,OAAQoM,OAAQ,SAACjV,GAAD,OAAkBJ,GAAiBI,KACtH,CAACQ,GAAI,cAAeE,MAAO,WAAY2P,SAAU,IAAKxH,MAAO,SAGzDrD,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpC+N,UAAW,CACT3K,MAAO,OACP6G,QAAS,OACTmC,eAAgB,gBAChB4B,WAAY,UAEdC,eAAgB,CACdC,UAAW,IACXnC,QAAS,IAEXpB,UAAW,CACTC,aAAc,YAcZmM,GAAc,CAAC9Y,GAAI,KAAMiJ,KAAM,GAAIoN,OAAQ,GAAIG,SAAU,EAAGqC,UAAW,EAAGrE,WAAY,GAAI+B,QAAS,IAkR1FwC,GAhR6C,WAAM,IAAD,EAC/BzW,mBAAyB,IADM,mBACxDqV,EADwD,KAC9CC,EAD8C,OAEjCtV,oBAAS,GAFwB,mBAExD+N,EAFwD,KAE/CC,EAF+C,OAGrBhO,oBAAkB,GAHG,mBAGxD8K,EAHwD,KAGzC4F,EAHyC,OAIrC1Q,mBAAqBwW,IAJgB,mBAIxDrC,EAJwD,KAIjDC,EAJiD,OAK3BpU,oBAAkB,GALS,mBAKxD0W,EALwD,KAK5CC,EAL4C,OAMvC3W,mBAAS,GAN8B,mBAMxDuK,EANwD,KAMlD0D,EANkD,OAOzBjO,mBAAS,IAPgB,mBAOxDkO,EAPwD,KAO3CC,EAP2C,OAQ7BnO,mBAAsB,IARO,mBAQxD2R,EARwD,KAQ7CC,EAR6C,KAezD5N,GALS3H,KAAiBC,MAGhBmL,cACC2G,cAAT/P,KACQqE,MAGVtB,EAAWmU,KAEXlR,EAAaC,qBAAW1E,IAsBxBgX,EAAmB,WACvBD,GAAc,IAGVhC,EAAoB,WACxBP,EAAS,2BAAIoC,IAAL,IAAkBtE,WAAYP,EAAU,GAAGjU,MACnDiZ,GAAc,IAgDVnB,EAAkB,WACtBxH,GAAW,IAC4B5M,EAAS1D,GL3B3C,IAAImE,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,8BACJ8G,OAAQ,QAETC,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,UKsBnByG,MAAK,SAACtG,GAAa,IACVC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAChBP,QAAQC,IAAI,MAAOM,GACL,UAAXD,GACDsT,EAAYrT,GAEdP,QAAQC,IAAI,WAAY0T,MAEzB/M,OAAM,SAAA1G,GACL/E,GAAe,cAAe,gCAE/B0L,SAAQ,WACPyF,GAAW,OAmBjBtG,qBAAU,WACRrD,EAAW3E,kBAAkB,yBAC7B8V,IAhBA1D,KACGzJ,MAAK,SAAAtG,GAAa,IACVC,EAAgBD,EAAhBC,OAAQC,EAAQF,EAARE,KACH,YAATD,IACD4P,EAAa3P,GACbmS,EAAS,2BAAID,GAAL,IAAYjC,WAAYjQ,EAAK,GAAGvE,UAG3C4K,OAAM,SAAA1G,OACN2G,SAAQ,iBASV,IAEH,IAAMsO,EAAgB,SAACvH,GACrB,OAAQA,EAAI0G,aAAeja,EAAkB+a,UAAaxH,EAAIiH,UAAY,GAG5E,OACE,gBAAC,WAAD,WACE,eAACjL,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAASgD,aAAW,iBAA5E,SACE,sBAAK5J,UAAWb,EAAQwJ,UAAxB,SACE,eAAC3H,EAAA,EAAD,CAAYC,QAAQ,KAApB,mCAMJ,gBAACwF,GAAA,EAAD,CAAOC,UAAW,EAAG5F,MAAO,CAAC6F,QAAS,MAAOC,UAAW,QAAStB,UAAU,QAA3E,UACE,gBAACwE,GAAA,EAAD,CAAgB9J,UAAWb,EAAQ0J,eAAnC,UACGK,EAAU,eAACa,GAAA,EAAD,CAAgBrL,MAAM,YAAYoC,MAAO,CAAC9C,MAAO,UAAa,KACzE,gBAACgM,GAAA,EAAD,CAAOC,cAAY,EAACL,aAAW,4BAA/B,UACE,eAACM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACG1B,GAAa2B,KAAI,SAACC,GAAD,OAChB,eAACC,GAAA,EAAD,CAEEpJ,MAAOmJ,EAAOnJ,MACdJ,MAAO,CAAC4H,SAAU2B,EAAO3B,UAH3B,SAKG2B,EAAOtR,OAJHsR,EAAOxR,OAOhB,eAACyR,GAAA,EAAD,CAAWpJ,MAAM,QAAjB,0BAKJ,eAACqJ,GAAA,EAAD,UACGiG,GAAYA,EAAShG,MAAM9E,EAAK2D,EAAa3D,EAAK2D,EAAYA,GAAae,KAAI,SAACK,GAC/E,OACE,gBAACN,GAAA,EAAD,CAAUO,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACGnC,GAAa2B,KAAI,SAACC,GACDA,EAAOxR,GAAvB,IACMR,EAAaoS,EAAIJ,EAAOxR,IACxB+X,EAAgBvG,EAAOiD,OAASjD,EAAOiD,OAAOjV,GAASA,EAC7D,OACE,eAACiS,GAAA,EAAD,CAA2BpJ,MAAOmJ,EAAOnJ,MAAzC,SACiB,WAAdmJ,EAAOxR,GAAkB,uBAAMiI,MAAO,CAAC5C,gBAAiB9F,GAAyBC,GAAQsO,QAAS,MAAOkK,aAAc,OAAQnS,MAAO,WAA7G,SAA0HkS,IAAwBA,GAD9JvG,EAAOxR,OAK3B,eAACyR,GAAA,EAAD,CAAWpJ,MAAM,QAAjB,SACE,eAACoG,EAAA,EAAD,CAAQD,SAAU2K,EAAcvH,GAAMrD,KAAK,QAAQyC,kBAAgB,EACnE5I,QAAQ,YAAYX,QAAS,kBAtJvB,SAAClE,GACzB,IAAM8S,EAAqB,CAACrW,GAAIuD,EAAQvD,GAAIiJ,KAAM1F,EAAQ0F,KAAMoN,OAAQ9S,EAAQ8S,OAAQE,QAAShT,EAAQgT,QAASC,SAAUjT,EAAQiT,SAAUqC,UAAW,EAAGrE,WAAYP,EAAU,GAAGjU,IACrL0W,EAASL,GACT6C,IAmJoDG,CAAkBzH,IAAM3J,MAAO,CAAC5C,gBAAiB8T,EAAcvH,GAAO,UAAW,UAAW2G,YAAa,MAAO1S,MAAO,WADzJ,SAEE,eAAC2S,GAAA,EAAD,UAd6C5G,EAAI5R,eAuBjE,eAACsS,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BzK,UAAU,MACV0K,MAAOmF,EAAS3Q,OAChBwJ,YAAaA,EACb3D,KAAMA,EACN4F,aAhLiB,SAAChF,EAA0BiF,GAClDnC,EAAQmC,IAgLFC,oBA7KwB,SAAClF,GAE/BgD,GAAgBhD,EAAMC,OAAOlO,OAC7B+Q,EAAQ,SA6KN,gBAACtB,GAAA,EAAD,CAAQC,KAAM8J,EAAY7J,QAAS8H,EAAmB7H,kBAAgB,oBAAoBC,sBAAsB,EAAhH,UACE,eAACC,GAAA,EAAD,CAAatP,GAAG,oBAAhB,8BACA,eAACuP,GAAA,EAAD,UACE,uBAAKtH,MAAO,CAAC9C,MAAO,SAApB,UACI,gBAAC0C,EAAA,EAAD,WACE,eAACT,EAAA,EAAD,UACE,eAACI,EAAA,EAAD,CAAcrB,QAAQ,OAAOmT,UAAW7C,EAAMxN,SAEhD,eAAC7B,EAAA,EAAD,UACE,eAACI,EAAA,EAAD,CAAcrB,QAAQ,SAASmT,UAAW7C,EAAMJ,WAElD,eAACjP,EAAA,EAAD,UACE,eAACI,EAAA,EAAD,CAAcrB,QAAQ,UAAUmT,UAAW7C,EAAMF,YAEnD,eAACnP,EAAA,EAAD,UACE,eAACI,EAAA,EAAD,CAAcrB,QAAQ,WAAWmT,UAAW7C,EAAMD,gBAGtD,uBAAKvO,MAAO,CAAC9C,MAAO,OAAQ6G,QAAS,OAAQkC,cAAe,UAA5D,UACE,gBAACoH,GAAA,EAAD,CAAalN,QAAQ,WAAWjB,UAAWb,EAAQoG,UAAnD,UACE,eAAC6I,GAAA,EAAD,CAAYC,QAAQ,6BAApB,sBACA,eAACC,GAAA,EAAD,CACEC,QAAM,EACNlW,MAAOiX,EAAMjC,WACb3F,SA7IS,SAACpB,GAC1B,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KACjCjF,QAAQC,IAAI,QAASwJ,EAAMC,OAAOlO,OAClCkX,EAAS,2BAAID,GAAL,kBAAa9I,EAAYD,EAAOlO,UA0IxBU,MAAM,WACN+I,KAAK,aALP,SAOGgL,GAAaA,EAAU1C,KAAI,SAACgI,GAC3B,OACE,yBAAQ/Z,MAAO+Z,EAASvZ,GAAxB,SAA+CuZ,EAAStQ,MAAvBsQ,EAASvZ,YAKlD,eAACsO,GAAA,EAAD,CACAkB,KAAK,SACLtP,MAAM,aACNkI,QAAQ,WACRa,KAAK,YACLzJ,MAAOiX,EAAMoC,UACbhK,SArKY,SAACpB,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7BkX,EAAS,2BAAID,GAAL,kBAAa9I,EAAYnO,MAkKrB2H,UAAWb,EAAQoG,oBAK3B,gBAAC+C,GAAA,EAAD,WACE,eAAChB,EAAA,EAAD,CAAQhH,QAhLU,WACxBwP,KA+K0CpR,MAAM,UAAU2I,SAAUpB,EAA9D,SACE,eAACjF,EAAA,EAAD,CAAYC,QAAQ,SAApB,sBAIF,gBAACqG,EAAA,EAAD,CAAQhH,QAhNO,WACrB,IAAM8R,EAAWtF,EAAUkB,MAAK,SAAAoE,GAAQ,OAAGA,EAASvZ,IAAMyW,EAAMjC,cAChExQ,QAAQC,IAAI,WAAYsV,GACxB,IAAMzG,EAA0C,CAC9CyG,SAAUA,EACVV,UAAWW,OAAO/C,EAAMoC,YAE1B7F,GAAiB,GLuBd,SAAiCmF,EAAmBrF,GACzD,OAAO,IAAI3O,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAI,gBAAD,OAAkBuU,GACrBzN,OAAQ,MACRnG,KAAMuO,IAEPnI,MAAK,SAACtG,GAAD,OAA6BG,EAAQH,MAC1CuG,OAAM,SAAA1G,GAAK,OAAGE,EAAOF,SK9BtBkU,CAAuC3B,EAAMzW,GAAI8S,GAC9CnI,MAAK,SAAAtG,GAAa,IACVC,EAAmBD,EAAnBC,OAAQvF,EAAWsF,EAAXtF,QACD,OAAXuF,GACDsT,EAAYD,EAAS9G,QAAO,SAAA4I,GAAE,OAAGA,EAAGzZ,IAAMyW,EAAMzW,OAChDiX,IACApY,GAAiB,UAAWE,KAE5BkY,IACA9X,GAAe,cAAeJ,OAGjC6L,OAAM,SAAA1G,GACL+S,OAEDpM,SAAQ,WACPmI,GAAiB,OAwLkBnN,MAAM,UAAU2I,SAAUpB,EAA3D,UACGA,EAAgB,eAACsC,GAAA,EAAD,IAAuB,KACxC,eAACvH,EAAA,EAAD,CAAYC,QAAQ,SAApB,iCCtRNpD,GAAYC,aAAW,SAAAlD,GAAK,MAAI,CACpCmD,KAAM,CACJ8G,QAAS,QAEX0N,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACV5N,QAAS,OACT+D,WAAY,SACZ5B,eAAgB,WAChBL,QAAS,SACN/L,EAAM8X,OAAOH,SAElBI,OAAQ,CACNC,OAAQhY,EAAMgY,OAAOC,OAAS,EAC9BC,WAAYlY,EAAMmY,YAAY7W,OAAO,CAAC,QAAS,UAAW,CACxD8W,OAAQpY,EAAMmY,YAAYC,OAAOC,MACjCC,SAAUtY,EAAMmY,YAAYG,SAASC,iBAGzCC,YAAa,CACXhD,WAxBgB,IAyBhBpS,MAAM,eAAD,OAzBW,IAyBX,OACL8U,WAAYlY,EAAMmY,YAAY7W,OAAO,CAAC,QAAS,UAAW,CACxD8W,OAAQpY,EAAMmY,YAAYC,OAAOC,MACjCC,SAAUtY,EAAMmY,YAAYG,SAASG,kBAGzCC,WAAY,CACVlC,YAAa,IAEfmC,iBAAkB,CAChB1O,QAAS,QAEXlN,MAAO,CACL6b,SAAU,EACV3M,UAAW,QAEb4M,YAAa,CACXC,SAAU,WACVC,WAAY,SACZ3V,MA5CgB,IA6ChB8U,WAAYlY,EAAMmY,YAAY7W,OAAO,QAAS,CAC5C8W,OAAQpY,EAAMmY,YAAYC,OAAOC,MACjCC,SAAUtY,EAAMmY,YAAYG,SAASG,kBAGzCO,iBAAiB,aACfC,UAAW,SACXf,WAAYlY,EAAMmY,YAAY7W,OAAO,QAAS,CAC5C8W,OAAQpY,EAAMmY,YAAYC,OAAOC,MACjCC,SAAUtY,EAAMmY,YAAYG,SAASC,gBAEvCnV,MAAOpD,EAAM4D,QAAQ,IACpB5D,EAAMkZ,YAAYC,GAAG,MAAQ,CAC5B/V,MAAOpD,EAAM4D,QAAQ,KAGzBwV,aAAcpZ,EAAM8X,OAAOH,QAC3B0B,QAAS,CACPT,SAAU,EACV1U,OAAQ,QACRoV,SAAU,QAEZtQ,UAAW,CACTuQ,WAAYvZ,EAAM4D,QAAQ,GAC1B4V,cAAexZ,EAAM4D,QAAQ,GAC7BqG,QAAS,OACTC,SAAU,gBACV8D,WAAY,aACZ5B,eAAgB,UAElBqN,cAAe,CACbrW,MAAO,OACPwV,SAAU,EACV7M,QAAS,QAEX1B,MAAO,CACL0B,QAAS/L,EAAM4D,QAAQ,GACvBqG,QAAS,OACTqP,SAAU,OACVnN,cAAe,UAEjBuN,YAAa,CACXxV,OAAQ,SAyLGyV,GAzKqB,WAClC,IAAMpV,EAAUtB,KADuB,EAEf1C,oBAAkB,GAFH,mBAEhC4M,EAFgC,KAE1ByM,EAF0B,OAGOrZ,oBAAkB,GAHzB,gCAIPA,mBAAc,OAJP,mBAIhCsZ,EAJgC,KAItBC,EAJsB,KAKjCxO,EAAczG,qBAAW6C,IACzB9C,EAAaC,qBAAW1E,IAKxBuE,GAHeqV,iBAAO,MAGXpV,eACT/F,EAAS+P,cAAT/P,KACFmJ,EAAUC,cAMVgS,EAAyB,WAC7BF,EAAY,OAuCd,OAXA7R,qBAAU,WAER,IADiB6N,KAGf,OADA7T,QAAQC,IAAI,OAAQtD,GACbmJ,EAAQG,KAAR,aAQT,uBAAK9C,UAAWb,EAAQpB,KAAxB,UACE,eAAC8W,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAQpB,SAAS,WAAW1T,UAAW+U,YAAK5V,EAAQwT,OAAQ5K,GAAQ5I,EAAQiU,aAA5E,SACE,gBAAC4B,EAAA,EAAD,CAAShV,UAAWb,EAAQoT,QAA5B,UACE,eAAC1H,EAAA,EAAD,CACEpD,KAAK,QACL/I,MAAM,UACNkL,aAAW,cACXtJ,QA7Ce,WACvBkU,GAAQ,IA6CAxU,UAAW+U,YAAK5V,EAAQmU,WAAYvL,GAAQ5I,EAAQoU,kBALtD,SAOE,eAAC,IAAD,MAEF,sBAAKzS,MAAO,CAACsQ,YAAa,QAA1B,SACE,sBAAKpT,MAAM,KAAKc,OAAO,KAAKmW,IAAI,mEAAmEC,IAAI,GAAGhM,QAAQ,YAEpH,eAAClI,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,KAAKvC,MAAM,UAAUyW,QAAM,EAACnV,UAAWb,EAAQxH,MAAlF,SACG6H,EAAW7E,cAEd,uBAAKmG,MAAO,CAACsP,WAAY,QAAzB,UACE,gBAAC9I,EAAA,EAAD,CAAQxG,MAAO,CAACpC,MAAO,WAAY0W,gBAAc,OAAO9U,QAjE7B,SAACgG,GACpCoO,EAAYpO,EAAM+O,gBAgEV,UACGnP,EAAY/D,KAAKX,SAClB,eAAC8T,GAAA,EAAD,OAEF,gBAACC,EAAA,EAAD,CACE1c,GAAG,cACH4b,SAAUA,EACVe,aAAW,EACXzN,KAAM0N,QAAQhB,GACdzM,QAAS4M,EALX,UAOE,eAACc,EAAA,EAAD,CAAUpV,QAhDK,WACzBzD,QAAQC,IAAI,YA+CF,qBACA,eAAC4Y,EAAA,EAAD,CAAUpV,QAvDD,WACnBsU,I5BnIFe,OAAOjd,aAAakd,WAAW,Q4BqI7BjT,EAAQG,KAAK,WAoDH,+BAKR,gBAAC+S,EAAA,EAAD,CACE5U,QAAQ,YACR9B,QAAS,CACP8F,MAAO8P,YAAK5V,EAAQsU,aAAc1L,GAAQ5I,EAAQyU,mBAEpD7L,KAAMA,EALR,UAOE,sBAAK/H,UAAWb,EAAQsT,YAAxB,SACE,eAAC5H,EAAA,EAAD,CAAYvK,QA9EM,WACxBkU,GAAQ,IA6EF,SACE,eAAC,IAAD,QAGJ,eAAC1N,EAAA,EAAD,IACA,eAACpG,EAAA,EAAD,UACE,eAAC,GAAD,CAAenE,SAAUmU,YAG7B,wBAAM1Q,UAAWb,EAAQ8U,QAAzB,UACE,sBAAKjU,UAAWb,EAAQ6U,eACxB,gBAAC8B,EAAA,EAAD,CAAW7X,SAAS,KAAK+B,UAAWb,EAAQyE,UAA5C,UACE,sBAAK5D,UAAWb,EAAQkV,cAAxB,SACE,eAAC0B,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAEEC,WAAW,OACXva,QAAS,IAHX,SAKE,gBAAC,IAAD,CAAQ4D,SAAUA,EAAlB,UACE,eAAC,IAAD,CAAO9F,KAAI,UAAKA,GAAL,OAAYD,GAA4BC,MAAQmH,UAAW8E,KACtE,eAAC,IAAD,CAAOjM,KAAI,UAAKA,EAAL,sBAAX,SACE,eAAC,GAAD,CAAsB+C,SAAU2J,EAAY/D,SAE9C,eAAC,IAAD,CAAO3I,KAAI,UAAKA,EAAL,kCAAX,SACE,eAAC0c,GAAD,CAAoB3Z,SAAU2J,EAAY/D,SAE5C,eAAC,IAAD,CAAO3I,KAAI,UAAKA,EAAL,eAAX,SACE,eAAC,GAAD,CAAoB+C,SAAU2J,EAAY/D,SAG5C,eAAC,IAAD,CAAO3I,KAAI,UAAKA,EAAL,kDAAX,SACE,eAAC,GAAD,CAAkB+C,SAAU2J,EAAY/D,SAE1C,eAAC,IAAD,CAAO3I,KAAI,UAAKA,EAAL,wCAAX,SACE,eAAC,GAAD,CAAoB+C,SAAU2J,EAAY/D,SAE5C,eAAC,IAAD,CAAO3I,KAAI,UAAKA,EAAL,iCAAX,SACE,eAAC,GAAD,CAAkB+C,SAAU2J,EAAY/D,SAG1C,eAAC,IAAD,CAAO3I,KAAI,UAAKA,EAAL,gCAAyCmH,UAAWkN,KAC/D,eAAC,IAAD,CAAOrU,KAAI,UAAKA,EAAL,sCAA+CmH,UAAW8N,KACrE,eAAC,IAAD,CAAOjV,KAAI,UAAKA,EAAL,yBAAkCmH,UAAW4M,KACxD,eAAC,IAAD,CAAO/T,KAAI,UAAKA,GAAL,OAAYD,GAAgCC,KAA5C,uBAAuEmH,UAAWoO,KAC7F,eAAC,IAAD,CAAOvV,KAAI,UAAKA,GAAL,OAAYD,GAAgCC,KAA5C,gBAAgEmH,UAAW4P,KACtF,eAAC,IAAD,CAAO/W,KAAI,UAAKA,GAAL,OAAYD,GAAgCC,KAA5C,sBAAsEmH,UAAWmQ,KAC5F,eAAC,IAAD,CAAOtX,KAAI,UAAKA,GAAL,OAAYD,GAAgCC,KAA5C,kCAAkFmH,UAAW6Q,KACxG,eAAC,IAAD,CAAOhY,KAAI,UAAKA,GAAL,OAAYD,GAAgCC,KAA5C,sCAAsFmH,UAAWiR,KAC5G,eAAC,IAAD,CAAOpY,KAAK,kBAAkBmH,UAAW4Q,KACzC,eAAC,IAAD,CAAO4E,OAAK,EAAC3c,KAAI,UAAKA,GAAQmH,UAAWqC,SAnCtC1D,EAAS8W,SAwCpB,sBAAKtV,MAAO,CAAC9C,MAAM,OAAQsH,UAAW,QAAtC,SACE,eAAC,GAAD,gB,wCC1SG,OAA0B,sCCanCzH,GAAYC,aAAW,SAAClD,GAAD,MAAY,CACvCmD,KAAM,CACJe,OAAQ,SAEVuX,MAAO,CACLC,gBAAgB,OAAD,OAASC,GAAT,KACfC,iBAAkB,YAClBtY,gBAAwC,UAAvBtD,EAAMuD,QAAQkK,KAAmBzN,EAAMuD,QAAQsY,KAAK,IAAM7b,EAAMuD,QAAQsY,KAAK,KAC9FC,eAAgB,QAChBC,mBAAoB,UAEtBC,OAAQ,CACN1Y,gBAAiB,WAEnB+G,MAAO,CACL4R,OAAQjc,EAAM4D,QAAQ,EAAG,GACzBqG,QAAS,OACTkC,cAAe,SACf6B,WAAY,UAEdkO,OAAQ,CACND,OAAQjc,EAAM4D,QAAQ,GACtBN,gBAAiBtD,EAAMuD,QAAQgU,UAAUlT,MAE3CwM,KAAM,CACJzN,MAAO,OACPsH,UAAW1K,EAAM4D,QAAQ,IAE3BuY,OAAQ,CACNF,OAAQjc,EAAM4D,QAAQ,EAAG,EAAG,QA6KjBwY,GAnKsB,WAAM,IAAD,EACV7b,mBAAoB,CAACsG,MAAO,GAAIyM,SAAU,GAAI+I,YAAY,IADhD,mBACjCtL,EADiC,KACxBC,EADwB,OAEJzQ,oBAAS,GAFL,mBAEjC8b,EAFiC,aAGV9b,oBAAS,IAHC,mBAGjC+N,EAHiC,KAGxBC,EAHwB,KAIlChK,EAAUtB,KACV8E,EAAUC,cAEVrL,GADWgS,cAAT/P,KACOhC,KAAiBC,OAE1ByO,EAAczG,qBAAW6C,IAOzB+D,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfC,EAAoBD,EAAOzE,KAC3BzJ,EAAgBkO,EAAOlO,MAC7BuT,EAAW,2BAAID,GAAL,kBAAenF,EAAYnO,MA+DvC,OACE,gBAACsL,GAAA,EAAD,CAAMC,WAAS,EAACjD,UAAU,OAAOX,UAAWb,EAAQpB,KAApD,UACE,eAAC8W,EAAA,EAAD,IACA,eAAClR,GAAA,EAAD,CAAME,MAAI,EAACI,IAAI,EAAOD,GAAI,EAAGF,GAAI,EAAG9D,UAAWb,EAAQkX,QACvD,eAAC1S,GAAA,EAAD,CAAME,MAAI,EAACI,GAAI,GAAID,GAAI,EAAGF,GAAI,EAAGnD,UAAW8F,KAAOC,UAAW,EAAGwQ,QAAM,EAAvE,SACE,uBAAKlX,UAAWb,EAAQ8F,MAAxB,UACE,eAACgC,GAAA,EAAD,CAAQjH,UAAWb,EAAQ2X,OAA3B,SACE,eAACK,GAAA,EAAD,MAEF,eAACnW,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,KAAnC,qBAGA,wBAAMjB,UAAWb,EAAQsM,KAAM2L,YAAU,EAACpL,SAxExB,SAAC1F,G9BrEtB,IAAe+Q,E8BsElB/Q,EAAM4F,iBACN/C,GAAW,I9BvEOkO,E8BwEA1L,E9BvEb,IAAI3O,SAAQ,SAACK,EAASJ,GAC3BqG,GAAQ,CACN7G,IAAK,cACL8G,OAAQ,OACRnG,KAAMia,IAEP7T,MAAK,SAACtG,GACL,OAAOG,EAAQH,MAEhBuG,OAAM,SAAA1G,GAAK,OAAIE,EAAOF,U8B+DpByG,MAAK,SAAAtG,GACJL,QAAQC,IAAI,MAAOI,GADH,IAETE,EAAyBF,EAAzBE,KAAMxF,EAAmBsF,EAAnBtF,QAASuF,EAAUD,EAAVC,OACtB,GAAc,YAAXA,EACD,GAAc,YAAXA,EAAsB,CACvB,IAAMma,EAAWla,EAAKka,SAEhB/a,EAAqB,CACzB1D,GAAIye,EAASze,GACbyI,UAAWgW,EAAShW,UACpBC,SAAU+V,EAAS/V,SACnBC,SAAU8V,EAAS9V,SACnBC,MAAO6V,EAAS7V,MAChBG,YAAa0V,EAASxJ,QACtBnQ,MAAO2Z,EAAS3Z,MAChBgE,WAAY2V,EAAS3V,WACrBD,cAAe4V,EAAS5V,cACxBG,WAAYyV,EAASzV,WACrBG,UAAWsV,EAAStV,UACpBpF,MAAOQ,EAAKR,OAKd,GAFA+Y,OAAOjd,aAAakP,QAAQ,OAAQrK,KAAKga,UAAUhb,IACnD2J,EAAY9D,SAAS7F,IACjBib,GAA8Bjb,EAASoB,MAAOlE,GAAoBC,gBACpE,OAAOiJ,EAAQG,KAAK,mCAEtBH,EAAQG,KAAR,UAEAvL,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,QACPI,KAAMH,GAAoB,yBAK9BL,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,QACPI,KAAMH,GAAoB,aAI/B6L,OAAM,SAAA1G,GACLxF,EAAOM,KAAK,CACVC,KAAM,QACNH,MAAO,QACPI,KAAM,oBAGT2L,SAAQ,WACPyF,GAAW,OAgBT,UACE,eAAChC,GAAA,EAAD,CACEO,SAAUrB,EACVpF,QAAQ,WACR4V,OAAO,SACPY,UAAQ,EACRC,WAAS,EACT7e,GAAG,QACHE,MAAM,gBACNV,MAAOsT,EAAQlK,MACfK,KAAK,QACLiK,aAAa,QACb4L,WAAS,IAEX,eAACxQ,GAAA,EAAD,CACEO,SAAUrB,EACVpF,QAAQ,WACR4V,OAAO,SACPY,UAAQ,EACRC,WAAS,EACTrf,MAAOsT,EAAQuC,SACfpM,KAAK,WACL/I,MAAM,WACNsP,KAAK,WACLxP,GAAG,WACHkT,aAAa,qBAEf,eAAC6L,GAAA,EAAD,CACEC,QAAS,eAACC,GAAA,EAAD,CAAUzf,MAAO4e,EAAYvY,MAAM,UAAUoD,KAAK,WAAW4F,SAAUrB,IAChFtN,MAAM,gBAER,gBAACuO,EAAA,EAAD,CACEe,KAAK,SACLqP,WAAS,EACTzW,QAAQ,YACRoG,SAAU6B,KAtHbyC,EAAQlK,OAASkK,EAAQuC,UAuHtBxP,MAAM,UACNsB,UAAWb,EAAQ4X,OANrB,UASI7N,GACA,eAACX,GAAA,EAAD,CAAkBnB,KAAM,GAAItG,MAAO,CAACsQ,YAAa,QAAS1S,MAAM,cAVpE,aAeA,gBAACiF,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,GAAA,EAAD,CAAME,MAAI,EAACI,IAAE,EAAb,SACE,eAAC9C,GAAA,EAAD,CAAMC,KAAK,IAAIH,QAAQ,QAAvB,gCAIF,eAAC0C,GAAA,EAAD,CAAME,MAAI,EAACI,IAAE,EAAb,SACE,eAAC9C,GAAA,EAAD,CAAMC,KAAK,IAAIH,QAAQ,QAAvB,SACG,wCAIP,eAAC8W,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC,GAAD,kB,oBC5MDC,GAA2B,CACtC9Z,QAAS,CACPkK,KAAM,QACNrJ,QAAS,CACPC,KAAM,UACNiZ,KAAM,UACNC,MAAO,WAEThG,UAAW,CACTlT,KAAM,UACNiZ,KAAM,UACNC,MAAO,WAET/Z,WAAY,CACVC,QAAS,aAKF+Z,GAA0B,CACrCja,QAAS,CACPkK,KAAM,OACNrJ,QAAS,CACPC,KAAM,UACNiZ,KAAM,UACNC,MAAO,WAET/Z,WAAY,CACVC,QAAS,UACT4G,MAAO,WAETkN,UAAW,CACTlT,KAAM,UACNiZ,KAAM,UACNC,MAAO,aCAEE,OAvBf,WAEE,IAAM7Y,EAAaC,qBAAW1E,IAE9B8B,QAAQC,IAAI,oBAAqB0C,EAAW5E,OAE5C,IAAM0d,EAAiC,UAArB9Y,EAAW5E,MAAoB2d,aAAeN,IAAcM,aAAeH,IAC7F,OACE,eAACI,GAAA,EAAD,CAAe5d,MAAO0d,EAAtB,SACE,eAAC,IAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOnC,OAAK,EAAC3c,KAAK,SAAlB,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,eAAC,GAAD,cCdGif,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnV,MAAK,YAAkD,IAA/CoV,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,UCAR9U,GAAYqV,SAASC,eAAe,QAE1CC,IAASC,OACP,+BACE,eAAC,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,UAONxV,IAGFyV,aAAoBzV,GAAW,CAAC0V,cAAc,EAAMC,cAAc,EAAMC,SAAS,EAAOC,iBAAiB,IAIzGhB,O","file":"static/js/main.48e753b8.chunk.js","sourcesContent":["export enum EndorsementStatus {\r\n  REJECTED = 'REJECTED',\r\n  ENDORSED = 'ENDORSED',\r\n  PENDING = 'PENDING'\r\n}\r\n\r\nexport enum RequestApproval {\r\n  APPROVED = 'APPROVED',\r\n  REJECTED = 'REJECTED',\r\n  PENDING = 'PENDING',\r\n  NON = 'NON'\r\n}\r\n\r\nexport enum RequestStatus {\r\n  PROCESSED = 'PROCESSED',\r\n  ENDORSEMENT_CANCELLED = 'ENDORSEMENT_CANCELLED',\r\n  APPROVAL_CANCELLED = 'APPROVAL_CANCELLED',\r\n  PENDING = 'PENDING'\r\n}\r\n\r\nexport enum UserRoles {\r\n  \r\n}","import * as _ from 'lodash'\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport * as dateFormatter from 'dateformat'\r\nimport { RequestStatus } from '../types/enums';\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nexport function getIndexByField(array: any[], field: string, value: any) {\r\n  return _.findIndex(array, (item)=> {\r\n    return item[field] === value;\r\n  })\r\n}\r\n\r\nexport function showSuccessAlert(title: string, message: string) {\r\n  MySwal.fire({\r\n    icon: 'success',\r\n    title,\r\n    text: message\r\n  })\r\n}\r\n\r\nexport function showErrorAlert(title: string, message: string) {\r\n  MySwal.fire({\r\n    icon: 'error',\r\n    title,\r\n    text: message\r\n  })\r\n}\r\n\r\nexport function prettifyDateTime(date: string): string {\r\n  return dateFormatter.default(date, 'ddd mmm dd yyyy HH:MM')\r\n}\r\n\r\nexport function formatRequestStatusColor(value: string): string {\r\n  if(value === RequestStatus.APPROVAL_CANCELLED || value === RequestStatus.ENDORSEMENT_CANCELLED) {\r\n    return '#f5210a'\r\n  } else if(value === RequestStatus.PENDING) {\r\n    return '#f5d50a'\r\n  } else {\r\n    return '#35f50a'\r\n  }\r\n}\r\n\r\nexport function storeThemeInLocalStorage(value: string) {\r\n  localStorage.setItem('theme', value)\r\n}\r\n\r\nexport function getLocalStorageTheme(): string | null {\r\n  return localStorage.getItem('theme')\r\n}","export enum EmployeeLevel {\r\n  REGULAR = 'REGULAR',\r\n  HOD = 'HOD',\r\n  GENERAL_MANAGER = 'GENERAL_MANAGER',\r\n  PROCUREMENT_OFFICER = 'PROCUREMENT_OFFICER',\r\n  ADMIN = 'ADMIN'\r\n}\r\n\r\nexport const employeeLevels = [\r\n  {id: EmployeeLevel.REGULAR, label: 'REGULAR'},\r\n  {id: EmployeeLevel.HOD, label: 'HEAD OF DEPARTMENT'},\r\n  {id: EmployeeLevel.PROCUREMENT_OFFICER, label: 'PROCUREMENT OFFICER'},\r\n  {id: EmployeeLevel.GENERAL_MANAGER, label: 'GENERAL MANAGER'},\r\n  {id: EmployeeLevel.ADMIN, label: 'SYSTEM ADMIN'}\r\n]","import { EmployeeLevel } from \"../types/EmployeeLevel\"\r\nimport { IMenuItem } from \"../types/types\"\r\n\r\nexport const LIGHT_THEME_MODE = 'light'\r\nexport const DARK_THEME_MODE = 'dark'\r\n\r\nexport const reduxActions = {\r\n  SET_THEME: 'SET-THEME',\r\n  UPDATE_USER: 'UPDATE-USER'\r\n}\r\n\r\nexport const appPages = {\r\n  dashboardPage: 'DASHBOARD',\r\n  userManagementPage: 'USER MANAGEMENT',\r\n  settingsPage: 'APPLICATION SETTINGS',\r\n  department: 'DEPARTMENT',\r\n  RequestItemModule: 'ITEM REQUEST MANAGEMENT'\r\n}\r\n\r\nexport const APP_MODULES = {\r\n  USER_MANAGEMENT_MODULE: {path: 'user-management', label: 'USER MANAGEMENT MODULE'},\r\n  DASHBOARD: {path: '', label: 'DASHBOARD'},\r\n  SETTINGS_MODULE: {path: 'settings', label: 'SETTINGS'},\r\n  DEPARTMENT_MODULE: {path: 'department-management', label: 'DEPARTMENT'},\r\n  REQUEST_ITEM_MODULE: {path: 'request-management', label: 'ITEM REQUEST'},\r\n  USER_MODULE: {path: 'user-management', label: 'USER MANAGEMENT'},\r\n  SUPPLIER_MODULE: {path:'supplier-management', label: 'SUPPLIER MANAGEMENT'}\r\n}\r\n\r\nexport const APP_PAGES_AND_ROLES = {\r\n  dashboardRoles: [EmployeeLevel.ADMIN, EmployeeLevel.PROCUREMENT_OFFICER, EmployeeLevel.HOD, EmployeeLevel.GENERAL_MANAGER],\r\n\r\n  createUserRoles: [EmployeeLevel.ADMIN, EmployeeLevel.HOD],\r\n  listUserRoles: [EmployeeLevel.ADMIN, EmployeeLevel.GENERAL_MANAGER, EmployeeLevel.HOD],\r\n  editUserRoles: [EmployeeLevel.ADMIN],\r\n  deleteUserRoles: [EmployeeLevel.ADMIN],\r\n\r\n  listDepartmentsRoles: [EmployeeLevel.ADMIN, EmployeeLevel.GENERAL_MANAGER, EmployeeLevel.HOD],\r\n  editDepartmentRoles: [EmployeeLevel.ADMIN, EmployeeLevel.HOD],\r\n  createDepartmentRoles: [EmployeeLevel.ADMIN],\r\n  deleteDepartmentRoles: [EmployeeLevel.ADMIN, EmployeeLevel.HOD],\r\n\r\n  listSupplierRoles: [EmployeeLevel.ADMIN, EmployeeLevel.GENERAL_MANAGER, EmployeeLevel.HOD],\r\n  editSupplierRoles: [EmployeeLevel.ADMIN, EmployeeLevel.HOD],\r\n  createSupplierRoles: [EmployeeLevel.ADMIN, EmployeeLevel.HOD],\r\n  deleteSupplierRoles: [EmployeeLevel.ADMIN, EmployeeLevel.HOD],\r\n\r\n  hodEndorseRoles: [EmployeeLevel.ADMIN, EmployeeLevel.GENERAL_MANAGER, EmployeeLevel.HOD],\r\n  generalManagerApproveRoles: [EmployeeLevel.ADMIN, EmployeeLevel.HOD, EmployeeLevel.GENERAL_MANAGER],\r\n  procurementOfficerApproveRoles: [EmployeeLevel.ADMIN, EmployeeLevel.HOD, EmployeeLevel.PROCUREMENT_OFFICER]\r\n}\r\n\r\n\r\n\r\nexport const MENU_ROUTES: IMenuItem[] = [\r\n  {path: '/', label:'Dashboard', icon: 'dashboard', hasSubMenu: false},\r\n  {path: '/departments', label:'Department', icon: 'home', hasSubMenu: false},\r\n  {path: '/item-requests', label:'Item Request', icon: 'home', hasSubMenu: true, \r\n    children: [\r\n      {path: '/request-management/my-myrequest', label:'My Request', icon: 'home', hasSubMenu: false},\r\n      {path: '/request-management/new-request', label:'New Request', icon: 'star', hasSubMenu: false},\r\n      {path: '/request-management/hod-item-requests', label:'HOD Requests', icon: 'home', hasSubMenu: false},\r\n    ]\r\n  },\r\n]\r\n\r\nexport const CURRENCY_CODE = \"GHS\"\r\n\r\nexport const dangerBtnColor = \"#c90808\"\r\nexport const successBtnColor = '#18ab30'","import React, { createContext, FC, useState } from 'react'\r\nimport { AppContextState } from '../types/types'\r\nimport { getLocalStorageTheme } from '../utils/common-helper'\r\nimport { appPages, DARK_THEME_MODE, LIGHT_THEME_MODE } from '../utils/constants'\r\n\r\nconst contextDefaultValues: AppContextState = {\r\n  currentPage: appPages.dashboardPage,\r\n  theme: getLocalStorageTheme() && (getLocalStorageTheme() === DARK_THEME_MODE) ? DARK_THEME_MODE : LIGHT_THEME_MODE,\r\n  updateCurrentPage: () => {},\r\n  updateTheme: () => {}\r\n}\r\n\r\nexport const AppContext = createContext<AppContextState> (\r\n  contextDefaultValues\r\n)\r\n\r\n\r\nconst AppProvider: FC = ({ children }) => {\r\n  const [currentPage, setCurrentPage] = useState<string>(contextDefaultValues.currentPage);\r\n  const [theme, setTheme] = useState<string>(contextDefaultValues.theme);\r\n\r\n  const updateCurrentPage = (pageVal: string) => setCurrentPage((currentPage) => pageVal)\r\n  const updateTheme = (themeVal: string) => setTheme((theme)=> themeVal)\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        theme,\r\n        currentPage,\r\n        updateCurrentPage,\r\n        updateTheme\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AppProvider","import {PathLike} from 'fs'\r\nimport * as qs from 'qs'\r\n\r\n// export const apiConfig = {\r\n//   returnRejectedPromiseOnError: true,\r\n//   withCredentials: true,\r\n//   timeout: 30000,\r\n//   baseURL: 'http://localhost:8080/api',\r\n//   headers: {\r\n//     common: {\r\n//       \"Access-Control-Allow-Origin\": true,\r\n//       \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\r\n//        Pragma: \"no-cache\",\r\n//       \"Content-Type\": \"application/json\",\r\n//       Accept: \"application/json\",\r\n//     }\r\n//   },\r\n//   paramsSerializer: (params: PathLike) => qs.stringify(params, { indices: false }),\r\n// }\r\nexport const apiConfig = {\r\n  timeout: 30000,\r\n  baseURL: 'http://localhost:8080/api',\r\n  //baseURL: 'http://bluesupply-env.eba-tykdzwp2.us-east-1.elasticbeanstalk.com/api',\r\n  paramsSerializer: (params: PathLike) => qs.stringify(params, { indices: false }),\r\n}","import axios, { AxiosInstance, AxiosResponse } from 'axios'\r\nimport { apiConfig } from './api.config'\r\nimport { ResponseData } from '../../types/types';\r\nimport { getUserDetailsFromStorage } from '../auth-service';\r\nimport { AuthUser } from '../../types/User';\r\nconst HTTP_SUCCESS_CODE = 200;\r\n\r\n\r\n\r\nconst webApi: AxiosInstance = axios.create(apiConfig)\r\n\r\nwebApi.interceptors.request.use(config=> {\r\n  const authUser = getUserDetailsFromStorage() as AuthUser\r\n  \r\n  if(config.url?.indexOf('/auth/login') === -1) {\r\n    if(authUser) {\r\n      config.headers['Authorization'] = `Bearer ${authUser.token}`\r\n    }\r\n  }\r\n  console.log('config', config)\r\n  return config\r\n}, error=> {\r\n  return Promise.reject(error)\r\n})\r\n\r\n\r\nwebApi.interceptors.response.use((response: AxiosResponse): Promise<any>=> {\r\n  console.log('response', response)\r\n  const { status } = response;\r\n  if(status === HTTP_SUCCESS_CODE) {\r\n    const {data} = response\r\n    return Promise.resolve(data as ResponseData)\r\n  } else {\r\n    if(status === 404) {\r\n      console.log('400')\r\n    }\r\n    return Promise.reject(response)\r\n  }\r\n}, error=> {\r\n  console.log('error', error)\r\n  return Promise.reject(error)\r\n})\r\n\r\nexport default webApi","import { AxiosResponse } from \"axios\";\r\nimport { EmployeeLevel } from \"../types/EmployeeLevel\";\r\nimport { LoginPayload } from \"../types/payloads\";\r\nimport { AuthUser} from \"../types/User\";\r\nimport service from './helpers/web-api'\r\n\r\nexport function login(loginPayload: LoginPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: '/auth/login',\r\n      method: 'POST',\r\n      data: loginPayload\r\n    })\r\n    .then((response: AxiosResponse) => {\r\n      return resolve(response)\r\n    })\r\n    .catch(error => reject(error))\r\n  })\r\n}\r\n\r\nexport function saveToken(token: string): void {\r\n  window.localStorage.setItem('token', token);\r\n}\r\n\r\nexport function isAuthenticated() {\r\n  const token: string | null = window.localStorage.getItem('token');\r\n  return token ? true : false;\r\n}\r\n\r\nexport function getAuthToken(): string | null {\r\n  return window.localStorage.getItem('token');\r\n}\r\n\r\nexport function getUserDetailsFromStorage(): AuthUser | undefined {\r\n  const storeData = localStorage.getItem('user');\r\n  \r\n  if(storeData) {\r\n    return JSON.parse(storeData) as AuthUser\r\n  } else {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport function logout(): void {\r\n  window.localStorage.removeItem('user');\r\n}\r\n\r\n\r\nexport function userHasAnyOfRoles(userRole: any, roles: EmployeeLevel[]): boolean {\r\n  if(!userRole) {\r\n    console.log('No Role....')\r\n    return false\r\n  }\r\n\r\n  return roles.indexOf(userRole) >= 0;\r\n}\r\n\r\n","import React, { Fragment, FunctionComponent, useContext, useState } from 'react'\r\n\r\nimport { Collapse, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport DashBoardIcon from '@material-ui/icons/Dashboard'\r\nimport AdminUserIcon from '@material-ui/icons/Group'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { ExpandedMenu } from '../../types/ExpandedMenu';\r\nimport DepartmentIcon from '@material-ui/icons/Apartment'\r\nimport InventoryIcon from '@material-ui/icons/DesktopMac'\r\nimport SubMenuItemIcon from '@material-ui/icons/Adjust'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTruckMoving } from '@fortawesome/free-solid-svg-icons';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { appPages, APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { userHasAnyOfRoles } from '../../services/auth-service';\r\nimport { AuthUser } from '../../types/User';\r\n// import clsx from 'clsx';\r\n\r\nconst iconSize = '25px'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  activeRoute: {\r\n    backgroundColor: 'red',\r\n    color: 'white'\r\n  },\r\n  link: {\r\n    color: 'inherit',\r\n    textDecoration: 'none'\r\n  },\r\n  faNavIcon: {\r\n    height: '50px',\r\n    width: '50px'\r\n  },\r\n  listItem: {\r\n    backgroundColor: `${theme.palette.primary.main} !important`,\r\n    color: '#ffffff'\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  authUser: AuthUser | undefined\r\n}\r\n\r\n\r\nconst MenuListItems: FunctionComponent<Props> = ({authUser}) => {\r\n  const classes = useStyles();\r\n  const [inventoryOpen, setInventoryExpand] = useState(false)\r\n  const [reportExpand, setReportExpand] = useState(false)\r\n  const [userAdminOpen, setUserAdminOpen] = useState(false)\r\n\r\n  const [expandedMenu, setExpandedMenu] = useState(\"\");\r\n  const location = useLocation();\r\n  const appContext = useContext(AppContext)\r\n\r\n  const handleExpandInventory = ()=> {\r\n    let val = !inventoryOpen\r\n    setInventoryExpand(val);\r\n  }\r\n\r\n  const activeLink = (subString: string): boolean => {\r\n    const pathMatches = location.pathname === subString\r\n    if(pathMatches) {\r\n      return true\r\n    } else if((location.pathname.indexOf(subString) >= 0) && (subString.length > 1)) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const handleSetExpandedMenu = (value: ExpandedMenu.inventory | ExpandedMenu.userAdmin)=> {\r\n    setExpandedMenu(value);\r\n  }\r\n\r\n  const handleSetCurrentPageName = (value: string) => {\r\n    appContext.updateCurrentPage(value)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {userHasAnyOfRoles(authUser?.roles, APP_PAGES_AND_ROLES.dashboardRoles) ? \r\n      <Link to=\"/\" className={classes.link} color=\"primary\">\r\n        <ListItem button selected ={activeLink('/')}>\r\n          <ListItemIcon>\r\n            <DashBoardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n      </Link>\r\n      : null}\r\n      {userHasAnyOfRoles(authUser?.roles, APP_PAGES_AND_ROLES.listDepartmentsRoles) ?\r\n      <Link to=\"/departments\" className={classes.link} onClick={()=> handleSetCurrentPageName(appPages.department)}>\r\n        <ListItem button selected={activeLink('/department')}>\r\n          <ListItemIcon>\r\n            <DepartmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Department\" />\r\n        </ListItem>\r\n      </Link> : null}\r\n      <ListItem button onClick={handleExpandInventory} selected={activeLink('/request-management')}>\r\n        <ListItemIcon>\r\n          <InventoryIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Item Requests\"/>\r\n        {inventoryOpen ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={inventoryOpen} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/request-management/my-requests\" className={classes.link}>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <SubMenuItemIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"My Requests\" />\r\n            </ListItem>\r\n          </Link>\r\n          {userHasAnyOfRoles(authUser?.roles, APP_PAGES_AND_ROLES.hodEndorseRoles) ? <Link to=\"/request-management/hod-item-requests\" className={classes.link}>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <SubMenuItemIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"HOD Item Requests\" />\r\n            </ListItem>\r\n          </Link> : null}\r\n          {userHasAnyOfRoles(authUser?.roles, APP_PAGES_AND_ROLES.generalManagerApproveRoles) ?<Link to=\"/request-management/general-manager-item-requests\" className={classes.link}>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <SubMenuItemIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"GM Requests\" />\r\n            </ListItem>\r\n          </Link> : null}\r\n          {userHasAnyOfRoles(authUser?.roles, APP_PAGES_AND_ROLES.procurementOfficerApproveRoles) ? <Link to=\"/request-management/procurement-officer-item-requests\" className={classes.link}>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <SubMenuItemIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Endorsed Requests\" />\r\n            </ListItem>\r\n          </Link> : null}\r\n        </List>\r\n      </Collapse>\r\n      {userHasAnyOfRoles(authUser?.roles, APP_PAGES_AND_ROLES.listSupplierRoles) ? <Link to=\"/supplier-management/suppliers\" className={classes.link}>\r\n        <ListItem button selected={activeLink('/suppliers')}>\r\n          <ListItemIcon>\r\n            <FontAwesomeIcon icon={faTruckMoving} style={{width: iconSize, height: iconSize}} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Suppliers\" />\r\n        </ListItem>\r\n      </Link> : null}\r\n      {userHasAnyOfRoles(authUser?.roles, APP_PAGES_AND_ROLES.listUserRoles) ? <Link to=\"/user-management/users\" className={classes.link} onClick={()=> handleSetCurrentPageName(appPages.userManagementPage)}>\r\n        <ListItem button selected={activeLink('/user-management')}>\r\n          <ListItemIcon>\r\n            <AdminUserIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"User Management\" />\r\n        </ListItem>\r\n      </Link> : null}\r\n      <Link to=\"/settings\" className={classes.link}>\r\n        <ListItem button selected={activeLink('settings')}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"settings\" />\r\n        </ListItem>\r\n      </Link>\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n\r\nexport default MenuListItems","import { Link, Typography } from '@material-ui/core'\r\nimport React, { FunctionComponent } from 'react'\r\n\r\nconst CopyRight: FunctionComponent = ()=> {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      <span>Copyright &copy;</span>\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Website 2021\r\n      </Link>\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default CopyRight;\r\n","import { createContext, FC, useState } from \"react\";\r\nimport { getUserDetailsFromStorage } from \"../services/auth-service\";\r\nimport { IDepartment, UserContextState } from \"../types/types\";\r\nimport { AuthUser, User } from \"../types/User\";\r\n\r\n\r\nconst defaultDepartment: IDepartment = {\r\n  id: null,\r\n  name: '',\r\n  description: ''\r\n}\r\n\r\nconst initUser = {\r\n  id: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  fullName: '',\r\n  email: '',\r\n  employeeLevel: '',\r\n  employeeId: '',\r\n  phoneNumber: '',\r\n  roles: '',\r\n  department: defaultDepartment,\r\n  createdAt: '',\r\n  token: ''\r\n}\r\n\r\nconst storeUser = getUserDetailsFromStorage() as AuthUser;\r\n\r\nconst defaultContextValues: UserContextState = {\r\n  user: storeUser ? storeUser : initUser,\r\n  saveUser: (authUser: AuthUser)=> {},\r\n  removeUser: ()=> {}\r\n}\r\n//\r\n\r\nexport const UserContext = createContext<UserContextState>(defaultContextValues);\r\n\r\nconst UserProvider: FC = ({children}) => {\r\n  const [user, setUser] = useState<AuthUser>(defaultContextValues.user);\r\n\r\n  const saveUser = (userVal: AuthUser)=> setUser(userVal);\r\n  const removeUser = ()=> setUser(defaultContextValues.user)\r\n  \r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user,\r\n        saveUser,\r\n        removeUser\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default UserProvider","import { FunctionComponent, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getUserDetailsFromStorage } from \"../../services/auth-service\";\r\n\r\ninterface Props {\r\n  roles?: string[]\r\n}\r\n\r\nconst useAuthentication: FunctionComponent<Props> = ({ roles })=> {\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    const authUser = getUserDetailsFromStorage()\r\n    const userRole = authUser?.roles as string\r\n    if(!authUser) {\r\n      return history.push('/login')\r\n    }\r\n    //lets authorize\r\n    if(roles && roles.indexOf(userRole) < 0) {\r\n      history.push('/not-authorized')\r\n    }\r\n  })\r\n\r\n  return null;\r\n}\r\n\r\nexport default useAuthentication;","import { Card, CardActions, CardContent, CardHeader, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport useAuthentication from '../components/hooks/use-authentication'\r\nimport { APP_PAGES_AND_ROLES } from '../utils/constants'\r\nimport * as dashboardService from '../services/dashboard-service'\r\nimport { IRequestPerDepartment } from '../types/types'\r\nimport { Pie, PieChart } from 'recharts'\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n    width: '100%',\r\n    // display: 'flex',\r\n    // flexDirection: 'column'\r\n  },\r\n  card: {\r\n    width: '100%'\r\n  }\r\n}))\r\nconst HomePage: FunctionComponent = (props)=> {\r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.dashboardRoles})\r\n  const [requestPerDepartment, setRequestPerDepartment] = useState<IRequestPerDepartment[]>([])\r\n  const [loadinRequestPerDepartment, setLoadingRequestPerDepartment] = useState<boolean>(false)\r\n  const classes = useStyles()\r\n\r\n  const fetchRequestPerCurrentMonthPerDepartment = ()=> {\r\n    setLoadingRequestPerDepartment(true)\r\n    dashboardService.requestPerCurrentMonthPerDepartment()\r\n      .then(response => {\r\n        const {status, data} = response\r\n        if(status === 'SUCCESS') {\r\n          setRequestPerDepartment(data)\r\n        }\r\n      })\r\n      .catch(()=> {})\r\n      .finally(()=> {\r\n        setLoadingRequestPerDepartment(false)\r\n      })\r\n  }\r\n\r\n  useEffect(()=> {\r\n    fetchRequestPerCurrentMonthPerDepartment()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item md={4} lg={4} sm={12} xs={12}>\r\n            <Card className={classes.card}>\r\n              <CardHeader title=\"Department Request\" subheader=\"This Month\"/>\r\n              <CardContent>\r\n                <PieChart width={530} height={100}>\r\n                  <Pie data={requestPerDepartment} dataKey=\"Num_of_Request\" nameKey=\"Department\" />\r\n                </PieChart>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <Typography variant=\"button\" color=\"primary\" style={{textDecoration: 'underline', cursor: 'pointer'}}>\r\n                  View All\r\n                </Typography>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={4} lg={4} sm={12} xs={12}>\r\n            <Card className={classes.card}>\r\n              <CardHeader title=\"Number of Users\" subheader=\"Total Users\"/>\r\n              <CardContent>\r\n                <Typography variant=\"h3\" align=\"left\">\r\n                    101\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <Typography variant=\"button\" color=\"primary\" style={{textDecoration: 'underline', cursor: 'pointer'}}>\r\n                  View All\r\n                </Typography>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={4} lg={4} sm={12} xs={12}>\r\n            <Card className={classes.card}>\r\n              <CardHeader title=\"Number of Users\" subheader=\"Total Users\"/>\r\n              <CardContent>\r\n                <Typography variant=\"h3\" align=\"left\">\r\n                    101\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <Typography variant=\"button\" color=\"primary\" style={{textDecoration: 'underline', cursor: 'pointer'}}>\r\n                  View All\r\n                </Typography>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={12} lg={12} sm={12} xs={12}>\r\n            <Card className={classes.card}>\r\n              <CardHeader title=\"Number of Users\" subheader=\"Total Users\"/>\r\n              <CardContent>\r\n                <Typography variant=\"h3\" align=\"left\">\r\n                    101\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <Typography variant=\"button\" color=\"primary\" style={{textDecoration: 'underline', cursor: 'pointer'}}>\r\n                  View All\r\n                </Typography>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","import { AxiosResponse } from \"axios\";\r\nimport { DepartmentPayload} from \"../types/payloads\";\r\nimport service from './helpers/web-api'\r\n\r\nexport function requestPerCurrentMonthPerDepartment(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: '/dashboard/requestPerCurrentMonthPerDepartment',\r\n      method: 'GET',\r\n    })\r\n    .then((response) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}","import { Avatar, Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, Icon, List, ListItem, ListItemSecondaryAction, ListItemText, ListSubheader, makeStyles, Paper, Switch, TextField, ThemeProvider, Typography, useTheme } from '@material-ui/core';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\nimport { Settings } from '@material-ui/icons';\r\nimport React, { FormEvent, FunctionComponent, SyntheticEvent, useContext, useEffect, useState } from 'react'\r\nimport { AppContext } from '../context/AppProvider';\r\nimport { UserContext } from '../context/UserProvider';\r\nimport { storeThemeInLocalStorage } from '../utils/common-helper';\r\nimport { DARK_THEME_MODE, LIGHT_THEME_MODE } from '../utils/constants';\r\n\r\n// interface Props {\r\n\r\n// }\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap'\r\n  },\r\n  headerDiv: {\r\n    display: 'flex'\r\n  },\r\n  settingsDiv: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  myAvatar: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n  userField: {\r\n    marginTop: '10px',\r\n    width: '100%'\r\n  },\r\n  textField: {\r\n    marginBottom: '20px'\r\n  }\r\n}))\r\n\r\ninterface UserPayloadState {\r\n  oldPassword: string\r\n  newPassword: string\r\n}\r\n\r\nconst SettingsPage: FunctionComponent = ()=> {\r\n  const [page, setPage] = useState<string>('My Settings');\r\n  const [changePasswordDialogOpen, setChangePasswordDialogOpen] = useState<boolean>(false)\r\n  const [userPayload, setUserPayload] = useState<UserPayloadState>({oldPassword: '', newPassword: ''})\r\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\r\n  const appContext = useContext(AppContext)\r\n  const userContext = useContext(UserContext)\r\n  const themeContext = useTheme()\r\n  const classes = useStyles()\r\n  const handleThemeToggle = (event: SyntheticEvent)=> {\r\n    console.log(event)\r\n  }\r\n  const handleSubmitChangePassword = ()=> {\r\n    console.log('payload', userPayload)\r\n  }\r\n\r\n  const handleDarkModeSwitch = (event: any)=> {\r\n    const value = event.target.checked\r\n    const theme = value ? DARK_THEME_MODE : LIGHT_THEME_MODE\r\n    storeThemeInLocalStorage(theme)\r\n    appContext.updateTheme(theme)\r\n  }\r\n\r\n  const handleOpenChangePasswordDialog = ()=> {\r\n    setUserPayload({oldPassword: '', newPassword: ''})\r\n    setChangePasswordDialogOpen(true)\r\n  }\r\n\r\n  const handleCloseChangePasswordDialog = ()=> {\r\n    setChangePasswordDialogOpen(false)\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setUserPayload({...userPayload, [eventName]: value})\r\n  }\r\n\r\n  useEffect(()=> {\r\n    appContext.updateCurrentPage('SETTINGS')\r\n  }, [])\r\n\r\n  return(\r\n    <Paper elevation={0} style={{padding: '5px', minHeight: '300px'}}>\r\n      <Grid container spacing={3}>\r\n        <Grid item md={12} lg={12} sm={12} style={{textAlign: 'left'}}>\r\n          <Typography variant=\"h5\" color=\"textPrimary\">\r\n            {page}\r\n          </Typography>\r\n          <Divider />\r\n        </Grid>\r\n        <Grid item md={12} lg={12}>\r\n          <Grid container>\r\n            <Grid item md={6} sm={12} style={{padding: '20px'}}>\r\n              <Grid container spacing={3}>\r\n                <Grid item md={12} sm={12} style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\r\n                  <Avatar className={classes.myAvatar} style={{width: '40px', height: '40px'}}>\r\n                    {`${userContext.user.firstName[0]}${userContext.user.lastName[0]}`.toUpperCase()}\r\n                  </Avatar>\r\n                </Grid>\r\n                <Grid item sm={12} md={6} >\r\n                  <TextField className={classes.userField} variant=\"outlined\" size=\"small\"\r\n                    label=\"First Name\" value={userContext.user.firstName} disabled />\r\n                </Grid>\r\n                <Grid item sm={12} md={6} >\r\n                  <TextField className={classes.userField} variant=\"outlined\" size=\"small\"\r\n                    label=\"Last Name\" value={userContext.user.lastName} disabled />\r\n                </Grid>\r\n                <Grid item sm={12} md={12} lg={12} xs={12}>\r\n                  <TextField className={classes.userField} variant=\"outlined\" size=\"small\"\r\n                    label=\"Email\" value={userContext.user.email} disabled />\r\n                </Grid>\r\n                <Grid item sm={12} md={12} lg={12} xs={12}>\r\n                  <TextField className={classes.userField} variant=\"outlined\" size=\"small\"\r\n                    label=\"Phone\" value={userContext.user.phoneNumber} disabled />\r\n                </Grid>\r\n                <Grid item sm={12} md={6} lg={6} xs={12}>\r\n                  <TextField className={classes.userField} variant=\"outlined\" size=\"small\"\r\n                    label=\"Role\" value={userContext.user.roles} disabled />\r\n                </Grid>\r\n                <Grid item sm={12} md={6} lg={6} xs={12}>\r\n                  <TextField className={classes.userField} variant=\"outlined\" size=\"small\"\r\n                    label=\"Department\" value={userContext.user.department.name} disabled />\r\n                </Grid>\r\n                <Grid item sm={12} md={12} xs={12}>\r\n                  <Button variant=\"outlined\" onClick={handleOpenChangePasswordDialog}>\r\n                    <Typography variant=\"button\">\r\n                      Change Password\r\n                    </Typography>\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={6} sm={12} style={{padding: '20px'}}>\r\n              <Grid container>\r\n                <Grid item md={12}>\r\n                  <Typography variant=\"h6\" align=\"center\">\r\n                    General Settings\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <List>\r\n                    <Divider />\r\n                    <ListItem>\r\n                      <ListItemText primary=\"Dark Model\"/>\r\n                      <ListItemSecondaryAction>\r\n                        <Switch\r\n                          edge=\"end\"\r\n                          onChange={handleDarkModeSwitch}\r\n                          checked={appContext.theme === DARK_THEME_MODE}\r\n                        />\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog open={changePasswordDialogOpen} onClose={handleCloseChangePasswordDialog} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}>\r\n        <DialogTitle id=\"form-dialog-title\">Procurement Form</DialogTitle>\r\n        <DialogContent>\r\n          <div style={{width: '400px'}}>\r\n              <div style={{width: '100%', display: 'flex', flexDirection: 'column'}}>\r\n                <TextField\r\n                type=\"password\"\r\n                label=\"Old Password\"\r\n                variant=\"outlined\"\r\n                name=\"oldPassword\"\r\n                value={userPayload.oldPassword}\r\n                onChange={handleInputChange}\r\n                className={classes.textField}\r\n                />\r\n                <TextField\r\n                type=\"password\"\r\n                label=\"New Password\"\r\n                variant=\"outlined\"\r\n                name=\"newPassword\"\r\n                value={userPayload.newPassword}\r\n                onChange={handleInputChange}\r\n                className={classes.textField}\r\n                />\r\n              </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseChangePasswordDialog} color=\"primary\" disabled={submitLoading}>\r\n            <Typography variant=\"button\">\r\n              Cancel\r\n            </Typography>\r\n          </Button>\r\n          <Button onClick={handleSubmitChangePassword} color=\"primary\" disabled={submitLoading}>\r\n            {submitLoading ? <CircularProgress /> : null}\r\n            <Typography variant=\"button\">\r\n              Submit\r\n            </Typography>\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default SettingsPage;","import { AxiosResponse } from \"axios\";\r\nimport { DepartmentPayload} from \"../types/payloads\";\r\nimport service from './helpers/web-api'\r\n\r\nexport function saveDepartment(departmentPayload: DepartmentPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: '/departments',\r\n      method: 'POST',\r\n      data: departmentPayload\r\n    })\r\n    .then((response) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getAllDepartments(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: '/departments',\r\n      method: 'GET'\r\n    })\r\n    .then((response: AxiosResponse) => {\r\n      \r\n      return resolve(response)\r\n    })\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getDepartment(id: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/departments/${id}`,\r\n      method: 'GET'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function updateDepartment(id: number, payload: DepartmentPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/departments/${id}`,\r\n      method: 'PUT',\r\n      data: payload\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function deleteDepartment(id: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/departments/${id}`,\r\n      method: 'DELETE'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}","import { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, IconButton, LinearProgress } from '@material-ui/core';\r\nimport React, { Fragment, FunctionComponent, useState, useEffect, ChangeEvent, MouseEvent, useContext} from 'react'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport {IDepartment, ITableColumn  } from '../../types/types'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport * as departmentService from '../../services/department-service'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport * as _ from 'lodash'\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\nimport { APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { userHasAnyOfRoles } from '../../services/auth-service';\r\nimport { AuthUser } from '../../types/User';\r\n\r\nconst tableColumns: ITableColumn[] = [\r\n  {id: 'name', label: 'Name', minWidth: 170, align: 'left'},\r\n  {id: 'description', label: 'Description', minWidth: 100, align: 'left'},\r\n]\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  headerBar: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    padding: 10\r\n  }\r\n}))\r\n\r\ninterface Props{\r\n  authUser: AuthUser\r\n}\r\n\r\nconst DepartmentListPage: FunctionComponent<Props> = ({authUser})=> {\r\n  //lets authorize user\r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.listDepartmentsRoles})\r\n\r\n  const [departments, setDepartments] = useState<IDepartment[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  //router helpers\r\n  const history = useHistory()\r\n  const { path } = useRouteMatch()\r\n  const classes = useStyles()\r\n\r\n  const appContext = useContext(AppContext)\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateToCreatePageClick = ()=> {\r\n    history.push(`${path}/create`)\r\n  }\r\n\r\n  const handleChangePage = (event: MouseEvent | null, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    //const value = event.\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleEdit = (id: number, event: any): void => {\r\n    history.push(`${path}/${id}/edit`)\r\n  }\r\n\r\n  const handleDelete = (id: number, event: any): void => {\r\n    MySwal.fire({\r\n      title: `Are you sure you want to delete department?`,\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Yes',\r\n      preConfirm: ()=> {\r\n        console.log('left confirm')\r\n        deleteDepartment(id)\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  const deleteDepartment = (id: number): void => {\r\n    departmentService.deleteDepartment(id)\r\n      .then(response => {\r\n        const {message, status} = response\r\n        setDepartments(departments.filter(dpt => dpt.id != id))\r\n        if(status === 'SUCCESS') {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: message ? message : 'Deleted Successfully!'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n\r\n      })\r\n  }\r\n\r\n  const fetchAllDepartments = ()=> {\r\n    setLoading(true)\r\n    departmentService.getAllDepartments()\r\n      .then((response)=> {\r\n        const { status, data } = response\r\n        if(status === 'OK') {\r\n          setDepartments(data)\r\n        }\r\n        //return (<Alert severity=\"error\">Hey</Alert>)\r\n        console.log('departments', departments)\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('DEPARTMENT')\r\n    fetchAllDepartments();\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}} aria-label=\"department bar\">\r\n        <div className={classes.headerBar}>\r\n          <Typography variant=\"h6\">\r\n            Department List\r\n          </Typography>\r\n          {userHasAnyOfRoles(authUser.roles, APP_PAGES_AND_ROLES.createDepartmentRoles) ? <Button variant=\"contained\" color=\"primary\" \r\n          disableElevation aria-label=\"Create Department Button\" onClick={handleNavigateToCreatePageClick}>\r\n            <Typography variant=\"button\">\r\n              Add Department\r\n            </Typography>\r\n          </Button> : null}\r\n        </div>\r\n      </Paper>\r\n      \r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop:'10px'}}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          {loading ? <LinearProgress color=\"secondary\" style={{width: '100%'}}/> : null}\r\n          <Table stickyHeader aria-label=\"list of departments table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {tableColumns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{minWidth: column.minWidth}}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell\r\n                align=\"right\"\r\n                >\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {departments && departments.slice(page*rowsPerPage, page*rowsPerPage+rowsPerPage).map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"chckbox\" tabIndex={-1} key={row.id}>\r\n                    {tableColumns.map((column) => {\r\n                      const id: any = column.id\r\n                      const value: any = row[column.id as keyof IDepartment]\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      )\r\n                    })}\r\n                    <TableCell align=\"right\">\r\n                      <IconButton onClick={(e)=> handleEdit(row.id, e)} size=\"small\">\r\n                        <EditIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <IconButton onClick={(e)=> handleDelete(row.id, e)} size=\"small\">\r\n                        <DeleteIcon fontSize=\"small\"/>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={departments.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default DepartmentListPage;","import { Button, CircularProgress, Divider, Grid, IconButton, makeStyles, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React, { FormEvent, Fragment, FunctionComponent, SyntheticEvent, useState } from 'react'\r\nimport BackIcon from '@material-ui/icons/ChevronLeft'\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as departmentService from '../../services/department-service'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\nimport { APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { AuthUser } from '../../types/User';\r\nimport { userHasAnyOfRoles } from '../../services/auth-service';\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n\r\n  },\r\n  form: {\r\n    width: '70%',\r\n    padding: '20px',\r\n    marginTop: '40px',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  }\r\n\r\n}));\r\n\r\ninterface Props {\r\n  authUser: AuthUser\r\n}\r\n\r\nconst DepartmentCreatePage: FunctionComponent<Props> = ({authUser})=> {\r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.createDepartmentRoles})\r\n  const [payload, setPayload] = useState({name: '', description: ''})\r\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\r\n\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateBack = ()=> {\r\n    history.goBack()\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setPayload({...payload, [eventName]: value})\r\n  }\r\n\r\n  const handleSubmitEvent = (event: SyntheticEvent)=> {\r\n    event.preventDefault()\r\n    setSubmitLoading(true)\r\n    departmentService.saveDepartment(payload)\r\n      .then(response=> {\r\n        const {status, data, message} = response\r\n        if(status == 'CREATED') {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: message ? message : 'Department Created Successfully',\r\n            allowOutsideClick: false,\r\n            willClose: ()=> {\r\n              setPayload({name: '', description: ''})\r\n            }\r\n          })\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed!',\r\n            text: message ? message : 'failed'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> {\r\n        setSubmitLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}}>\r\n        {userHasAnyOfRoles(authUser.roles, APP_PAGES_AND_ROLES.createDepartmentRoles) ? <IconButton color=\"primary\" onClick={handleNavigateBack}>\r\n          <BackIcon />\r\n        </IconButton> : null}\r\n      </Paper>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop: '10px', display:'flex', flexDirection: 'column'}}>\r\n        <Typography variant=\"h5\" color=\"textPrimary\">\r\n          Create Department Form\r\n        </Typography>\r\n        <Divider />\r\n        <div style={{width:'100%', display:'flex', justifyContent: 'center'}}>\r\n          <form className={classes.form} autoComplete=\"off\" onSubmit={handleSubmitEvent}>\r\n            <TextField id=\"department-name\" label=\"name\" name=\"name\" value={payload.name}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"department-description\" label=\"description\" name=\"description\" value={payload.description}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <Button variant=\"contained\" color=\"secondary\" style={{float: 'right'}} type=\"submit\" disabled={submitLoading}>\r\n              {submitLoading ? <CircularProgress size={20} /> : null}\r\n              <Typography variant=\"button\">\r\n                Create Department\r\n              </Typography>\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n\r\nexport default DepartmentCreatePage;","import { Button, Divider, Grid, IconButton, LinearProgress, makeStyles, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React, { FormEvent, Fragment, FunctionComponent, SyntheticEvent, useState, useEffect, useContext } from 'react'\r\nimport BackIcon from '@material-ui/icons/ChevronLeft'\r\nimport { useHistory, useParams, useRouteMatch } from 'react-router-dom';\r\nimport * as departmentService from '../../services/department-service'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { DepartmentPayload } from '../../types/payloads';\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\nimport { APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { AuthUser } from '../../types/User';\r\nimport { AppContext } from '../../context/AppProvider';\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n    \r\n  },\r\n  form: {\r\n    width: '70%',\r\n    padding: '20px',\r\n    marginTop: '40px',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  }\r\n\r\n}));\r\n\r\ninterface ParamTypes {\r\n  departmentId: string\r\n}\r\n\r\ninterface Props {\r\n  authUser: AuthUser\r\n}\r\n\r\nconst EditDepartmentPage: FunctionComponent<Props> = ({authUser})=> {\r\n  //lets authorize user\r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.editDepartmentRoles})\r\n  //local states\r\n  const [payload, setPayload] = useState({name: '', description: ''})\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n\r\n  const { departmentId } = useParams<ParamTypes>() //department id from url params\r\n  const appContext = useContext(AppContext)\r\n\r\n  const history = useHistory()\r\n  const { path } = useRouteMatch()\r\n  const classes = useStyles()\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateBack = ()=> {\r\n    history.goBack()\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setPayload({...payload, [eventName]: value})\r\n  }\r\n\r\n  const initDepartment = () => {\r\n    setLoading(true)\r\n    departmentService.getDepartment(parseInt(departmentId))\r\n      .then(response=> {\r\n        const {status, data, message} = response;\r\n        console.log('data', data)\r\n        if(status === 'OK') {\r\n          if(data) {\r\n            setPayload({name: data.name, description: data.description})\r\n          } else {\r\n            MySwal.fire({\r\n              icon: 'error',\r\n              title: 'Failed',\r\n              text: 'Department Not Found'\r\n            })\r\n          }\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed',\r\n            text: message ? message : 'Department Not Found'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const handleSubmitEvent = (event: SyntheticEvent)=> {\r\n    event.preventDefault()\r\n    console.log('payload', payload)\r\n\r\n    const payloadModel: DepartmentPayload = {\r\n      id: parseInt(departmentId),\r\n      name: payload.name,\r\n      description: payload.description\r\n    }\r\n    departmentService.updateDepartment(parseInt(departmentId), payload)\r\n      .then(response=> {\r\n        const {status, data, message} = response\r\n        if(status == 'SUCCESS') {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: message ? message : 'Department Created Successfully',\r\n            allowOutsideClick: false,\r\n            willClose: ()=> {\r\n              setPayload({name: '', description: ''})\r\n            }\r\n          })\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed!',\r\n            text: message ? message : 'failed'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('DEPARTMENT/EDIT')\r\n    initDepartment()\r\n    return () => {\r\n    }\r\n  }, [departmentId])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}}>\r\n        <IconButton color=\"primary\" onClick={handleNavigateBack}>\r\n          <BackIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop: '10px', display:'flex', flexDirection: 'column'}}>\r\n        <Typography variant=\"h5\" color=\"textPrimary\">\r\n          Edit Department\r\n        </Typography>\r\n        <Divider />\r\n        {loading ? <LinearProgress color=\"secondary\" style={{width: '100%'}}/> : null}\r\n        <div style={{width:'100%', display:'flex', justifyContent: 'center'}}>\r\n          <form className={classes.form} autoComplete=\"off\" onSubmit={handleSubmitEvent}>\r\n            <TextField id=\"department-name\" label=\"name\" name=\"name\" value={payload.name}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"department-description\" label=\"description\" name=\"description\" value={payload.description}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <Button variant=\"contained\" color=\"secondary\" style={{float: 'right'}} type=\"submit\">\r\n              <Typography variant=\"button\">\r\n                Edit Department\r\n              </Typography>\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n\r\nexport default EditDepartmentPage;","import { AxiosResponse } from \"axios\";\r\nimport { SupplierPayload } from \"../types/payloads\";\r\nimport service from './helpers/web-api'\r\n\r\nconst servicePath = 'suppliers'\r\n\r\nexport function saveSupplier(payload: SupplierPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}`,\r\n      method: 'POST',\r\n      data: payload\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getAllSuppliers(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `${servicePath}`,\r\n      method: 'GET'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getSupplier(id: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}/${id}`,\r\n      method: 'GET'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function updateSupplier(id: number, payload: SupplierPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}/${id}`,\r\n      method: 'PUT',\r\n      data: payload\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function deleteSupplier(id: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}/${id}`,\r\n      method: 'DELETE'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}","import { Box, Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, IconButton, LinearProgress } from '@material-ui/core';\r\nimport React, { Fragment, FunctionComponent, useState, useEffect, ChangeEvent, MouseEvent, useContext} from 'react'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport {IDepartment, ISupplier, ITableColumn  } from '../../types/types'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport * as supplierService from '../../services/supplier-service'\r\nimport { ServerResponse } from 'http';\r\nimport { Alert } from '@material-ui/lab';\r\nimport {ResponseData} from '../../types/types'\r\nimport { faColumns } from '@fortawesome/free-solid-svg-icons';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\nimport { APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { AuthUser } from '../../types/User';\r\n\r\n\r\nconst tableColumns: ITableColumn[] = [\r\n  {id: 'name', label: 'Name', minWidth: 170, align: 'left'},\r\n  {id: 'phone_no', label: 'Phone', minWidth: 170, align: 'left'},\r\n  {id: 'email', label: 'Email', minWidth: 170, align: 'left'},\r\n  {id: 'location', label: 'location', minWidth: 170, align: 'left'},\r\n  {id: 'description', label: 'Description', minWidth: 100, align: 'left'},\r\n]\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  headerBar: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center'\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    padding: 10\r\n  }\r\n}))\r\n\r\nconst initDepartments: IDepartment[] = []\r\n\r\ninterface Props {\r\n  authUser: AuthUser\r\n}\r\nconst SupplierListPage: FunctionComponent<Props> = ({authUser})=> {\r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.listSupplierRoles})\r\n  \r\n  const [suppliers, setSuppliers] = useState<ISupplier[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  //router helpers\r\n  const history = useHistory()\r\n  const { path } = useRouteMatch()\r\n  const classes = useStyles()\r\n\r\n  const appContext = useContext(AppContext)\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateToCreatePageClick = ()=> {\r\n    history.push(`${path}/create`)\r\n  }\r\n\r\n  const handleChangePage = (event: MouseEvent | null, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    //const value = event.\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleEdit = (id: number, event: any): void => {\r\n    history.push(`${path}/${id}/edit`)\r\n  }\r\n\r\n  const handleDelete = (id: number, event: any): void => {\r\n    MySwal.fire({\r\n      title: `Are you sure you want to delete supplier?`,\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Yes',\r\n      preConfirm: ()=> {\r\n        console.log('left confirm')\r\n        deleteSupplier(id)\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  const deleteSupplier = (id: number): void => {\r\n    setLoading(true)\r\n    supplierService.deleteSupplier(id)\r\n      .then(response => {\r\n        const {message, status} = response\r\n        if(status === 'OK') {\r\n          setSuppliers(suppliers.filter(item=> item.id != id))\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: message ? message : 'Deleted Successfully!'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const fetchAllSuppliers = ()=> {\r\n    setLoading(true)\r\n    supplierService.getAllSuppliers()\r\n      .then((response)=> {\r\n        //if(response.status == 'OK') {}\r\n        const { status, data } = response\r\n        if(status === 'SUCCESS') {\r\n          setSuppliers(data)\r\n        }\r\n        console.log('suppliers', suppliers)\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('SUPPLIERS')\r\n    fetchAllSuppliers();\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}} aria-label=\"department bar\">\r\n        <div className={classes.headerBar}>\r\n          <Button variant=\"contained\" color=\"primary\" \r\n          disableElevation aria-label=\"Create Department Button\" onClick={handleNavigateToCreatePageClick}>\r\n            <Typography variant=\"button\">\r\n              New Supplier\r\n            </Typography>\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n      \r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop:'10px'}}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          {loading ? <LinearProgress color=\"secondary\" style={{width: '100%'}}/> : null}\r\n          <Table stickyHeader aria-label=\"list of departments table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {tableColumns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{minWidth: column.minWidth}}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell\r\n                align=\"right\"\r\n                >\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {suppliers && suppliers.slice(page*rowsPerPage, page*rowsPerPage+rowsPerPage).map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"chckbox\" tabIndex={-1} key={row.id}>\r\n                    {tableColumns.map((column) => {\r\n                      const id: any = column.id\r\n                      const value: any = row[column.id as keyof IDepartment]\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      )\r\n                    })}\r\n                    <TableCell align=\"right\">\r\n                      <IconButton onClick={(e)=> handleEdit(row.id, e)} size=\"small\" disabled={loading}>\r\n                        <EditIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <IconButton onClick={(e)=> handleDelete(row.id, e)} size=\"small\" disabled={loading}>\r\n                        <DeleteIcon fontSize=\"small\"/>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={suppliers.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default SupplierListPage;","import { Button, CircularProgress, Divider, Grid, IconButton, makeStyles, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React, { FormEvent, Fragment, FunctionComponent, SyntheticEvent, useContext, useEffect, useState } from 'react'\r\nimport BackIcon from '@material-ui/icons/ChevronLeft'\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as supplierService from '../../services/supplier-service'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\nimport { APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { AuthUser } from '../../types/User';\r\nimport { AppContext } from '../../context/AppProvider';\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n\r\n  },\r\n  form: {\r\n    width: '70%',\r\n    padding: '20px',\r\n    marginTop: '40px',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  }\r\n\r\n}));\r\n\r\ninterface Props {\r\n  authUser: AuthUser\r\n}\r\n\r\nconst CreateSupplierPage: FunctionComponent<Props> = ({authUser})=> {\r\n  const [payload, setPayload] = useState({name: '', description: '', email: '', phone_no: '', location: ''})\r\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\r\n\r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.createSupplierRoles})\r\n  const appContext = useContext(AppContext)\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateBack = ()=> {\r\n    history.goBack()\r\n  }\r\n\r\n  const payloadIsValid = ()=> {\r\n    return payload.name && payload.description && payload.email && payload.phone_no && payload.location;\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setPayload({...payload, [eventName]: value})\r\n  }\r\n\r\n  const handleSubmitEvent = (event: SyntheticEvent)=> {\r\n    event.preventDefault()\r\n    setSubmitLoading(true)\r\n    supplierService.saveSupplier(payload)\r\n      .then(response=> {\r\n        const {status, data, message} = response\r\n        if(status == 'CREATED') {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: message ? message : 'Department Created Successfully',\r\n            allowOutsideClick: false,\r\n            willClose: ()=> {\r\n              setPayload({name: '', description: '', email: '', phone_no: '', location: ''})\r\n            }\r\n          })\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed!',\r\n            text: message ? message : 'failed'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> {\r\n        setSubmitLoading(false)\r\n      })\r\n  }\r\n\r\n  useEffect(()=> {\r\n    appContext.updateCurrentPage('SUPPLIERS / CREATE NEW')\r\n  }, [])  \r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}}>\r\n        <IconButton color=\"primary\" onClick={handleNavigateBack}>\r\n          <BackIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop: '10px', display:'flex', flexDirection: 'column'}}>\r\n        <Typography variant=\"h5\" color=\"textPrimary\">\r\n          Create Supplier\r\n        </Typography>\r\n        <Divider />\r\n        <div style={{width:'100%', display:'flex', justifyContent: 'center'}}>\r\n          <form className={classes.form} autoComplete=\"off\" onSubmit={handleSubmitEvent}>\r\n            <TextField id=\"department-name\" label=\"Name\" name=\"name\" value={payload.name}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"phone_no\" label=\"Phone\" name=\"phone_no\" value={payload.phone_no}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"email\" label=\"Email\" name=\"email\" value={payload.email}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"location\" label=\"Location\" name=\"location\" value={payload.location}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"department-description\" label=\"Description\" name=\"description\" value={payload.description}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <Button variant=\"contained\" color=\"secondary\" style={{float: 'right'}} type=\"submit\" disabled={submitLoading || !payloadIsValid()}>\r\n              {submitLoading ? <CircularProgress size={20} /> : null}\r\n              <Typography variant=\"button\">\r\n                Create Department\r\n              </Typography>\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n\r\nexport default CreateSupplierPage;","import { Button, CircularProgress, Divider, Grid, IconButton, LinearProgress, makeStyles, Paper, TextField, Typography } from '@material-ui/core';\r\nimport React, { FormEvent, Fragment, FunctionComponent, SyntheticEvent, useState, useEffect, useContext } from 'react'\r\nimport BackIcon from '@material-ui/icons/ChevronLeft'\r\nimport { useHistory, useParams, useRouteMatch } from 'react-router-dom';\r\nimport * as supplierService from '../../services/supplier-service'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { DepartmentPayload } from '../../types/payloads';\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\nimport { APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { AuthUser } from '../../types/User';\r\nimport { AppContext } from '../../context/AppProvider';\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n\r\n  },\r\n  form: {\r\n    width: '70%',\r\n    padding: '20px',\r\n    marginTop: '40px',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  }\r\n\r\n}));\r\n\r\ninterface ParamTypes {\r\n  supplierId: string\r\n}\r\n\r\ninterface StateTypes {\r\n  name: string\r\n  description: string\r\n  phone_no: string\r\n  email: string\r\n  location: string\r\n}\r\n\r\ninterface Props {\r\n  authUser: AuthUser\r\n}\r\n\r\nconst EditSupplierPage: FunctionComponent<Props> = ({authUser})=> {\r\n  //local states\r\n  const [payload, setPayload] = useState<StateTypes>({name: '', description: '', phone_no: '', email: '', location: ''})\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\r\n\r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.editSupplierRoles})\r\n  const appContext = useContext(AppContext)\r\n\r\n  const { supplierId } = useParams<ParamTypes>() //department id from url params\r\n\r\n  const history = useHistory()\r\n  const { path } = useRouteMatch()\r\n  const classes = useStyles()\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateBack = ()=> {\r\n    history.goBack()\r\n  }\r\n\r\n  const payloadIsValid = ()=> {\r\n    return payload.name && payload.description && payload.email && payload.phone_no && payload.location;\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setPayload({...payload, [eventName]: value})\r\n  }\r\n\r\n  const initDepartment = () => {\r\n    setLoading(true)\r\n    supplierService.getSupplier(parseInt(supplierId))\r\n      .then(response=> {\r\n        const {status, data, message} = response;\r\n        console.log('data', data)\r\n        if(status === 'OK') {\r\n          if(data) {\r\n            setPayload({name: data.name, description: data.description, phone_no: data.phone_no, email: data.email, location: data.location})\r\n          } else {\r\n            MySwal.fire({\r\n              icon: 'error',\r\n              title: 'Failed',\r\n              text: 'Department Not Found'\r\n            })\r\n          }\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed',\r\n            text: message ? message : 'Department Not Found'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const handleSubmitEvent = (event: SyntheticEvent)=> {\r\n    event.preventDefault()\r\n    console.log('payload', payload)\r\n\r\n    const payloadModel: DepartmentPayload = {\r\n      id: parseInt(supplierId),\r\n      name: payload.name,\r\n      description: payload.description\r\n    }\r\n    setSubmitLoading(true)\r\n    supplierService.updateSupplier(parseInt(supplierId), payload)\r\n      .then(response=> {\r\n        const {status, data, message} = response\r\n        if(status == 'SUCCESS') {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: message ? message : 'Supplier Created Successfully',\r\n            allowOutsideClick: false,\r\n            willClose: ()=> {\r\n              setPayload({name: '', description: '', phone_no: '', email: '', location: ''})\r\n            }\r\n          })\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed!',\r\n            text: message ? message : 'failed'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> {\r\n        setSubmitLoading(false)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('SUPPLIERS / EDIT')\r\n    initDepartment()\r\n    return () => {\r\n    }\r\n  }, [supplierId])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}}>\r\n        <IconButton color=\"primary\" onClick={handleNavigateBack}>\r\n          <BackIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop: '10px', display:'flex', flexDirection: 'column'}}>\r\n        <Typography variant=\"h5\" color=\"textPrimary\">\r\n          Edit Supplier Form\r\n        </Typography>\r\n        <Divider />\r\n        {loading ? <LinearProgress color=\"secondary\" style={{width: '100%'}}/> : null}\r\n        <div style={{width:'100%', display:'flex', justifyContent: 'center'}}>\r\n          <form className={classes.form} autoComplete=\"off\" onSubmit={handleSubmitEvent}>\r\n            <TextField id=\"department-name\" label=\"name\" name=\"name\" value={payload.name}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"phone_no\" label=\"Phone\" name=\"phone_no\" value={payload.phone_no}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"email\" label=\"Email\" name=\"email\" value={payload.email}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"location\" label=\"Location\" name=\"location\" value={payload.location}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"department-description\" label=\"description\" name=\"description\" value={payload.description}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <Button variant=\"contained\" color=\"secondary\" style={{float: 'right'}} type=\"submit\" disabled={submitLoading || !payloadIsValid()}>\r\n              {submitLoading ? <CircularProgress size={15} /> : null}\r\n              <Typography variant=\"button\">\r\n                 Edit Supplier\r\n              </Typography>\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n\r\nexport default EditSupplierPage;","import { AxiosResponse } from \"axios\";\r\nimport { UserPayload } from \"../types/payloads\";\r\nimport service from './helpers/web-api'\r\n\r\nconst servicePath = 'employees'\r\n\r\n\r\n\r\nexport function saveUser(payload: UserPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}`,\r\n      method: 'POST',\r\n      data: payload\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function registerEmployee(payload: UserPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/auth/admin/signup`,\r\n      method: 'POST',\r\n      data: payload\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\n\r\nexport function getAllUsers(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `${servicePath}`,\r\n      method: 'GET'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getUser(id: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}/${id}`,\r\n      method: 'GET'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function updateUser(id: number, payload: UserPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}/${id}`,\r\n      method: 'PUT',\r\n      data: payload\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function deleteUser(id: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}/${id}`,\r\n      method: 'DELETE'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}","import { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, \r\n  TableRow, Typography, IconButton, LinearProgress } from '@material-ui/core';\r\nimport React, { Fragment, FunctionComponent, useState, useEffect, ChangeEvent, MouseEvent, useContext} from 'react'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport {ITableColumn, IUser  } from '../../types/types'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport * as userService from '../../services/user-service'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\nimport { APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { userHasAnyOfRoles } from '../../services/auth-service';\r\nimport { UserContext } from '../../context/UserProvider';\r\n\r\n\r\nconst tableColumns: ITableColumn[] = [\r\n  {id: 'fullName', label: 'Name', minWidth: 170, align: 'left', format: (name: string)=> name.toUpperCase()},\r\n  {id: 'phoneNo', label: 'Phone', minWidth: 170, align: 'left'},\r\n  {id: 'email', label: 'Email', minWidth: 170, align: 'left'},\r\n  {id: 'department', label: 'Department', minWidth: 100, align: 'left', format: (value: any) => (value || {}).name},\r\n  {id: 'roles', label: 'Role', minWidth: 100, align: 'left'},\r\n  {id: 'enabled', label: 'Status', align: 'left', format: (value: string)=> value ? 'Active' : 'Disabled'},\r\n]\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  headerBar: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center'\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    padding: 10\r\n  }\r\n}))\r\n\r\nconst ListUserPage: FunctionComponent = ()=> {\r\n  const [users, setUsers] = useState<IUser[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  const appContext = useContext(AppContext)\r\n  const userContext = useContext(UserContext)\r\n  //let authorize use\r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.listUserRoles})\r\n\r\n  //router helpers\r\n  const history = useHistory()\r\n  const { path } = useRouteMatch()\r\n  const classes = useStyles()\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateToCreatePageClick = ()=> {\r\n    history.push(`${path}/create`)\r\n  }\r\n\r\n  const handleChangePage = (event: MouseEvent | null, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleEdit = (id: number, event: any): void => {\r\n    history.push(`${path}/${id}/edit`)\r\n  }\r\n\r\n  const handleDelete = (id: number, event: any): void => {\r\n    MySwal.fire({\r\n      title: `Are you sure you want to delete supplier?`,\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Yes',\r\n      preConfirm: ()=> {\r\n        console.log('left confirm')\r\n        deleteUser(id)\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  const deleteUser = (id: number): void => {\r\n    setLoading(true)\r\n    userService.deleteUser(id)\r\n      .then(response => {\r\n        const {message, status} = response\r\n        if(status == 'OK') {\r\n          setUsers(users.filter(user => user.id === id))\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: message ? message : 'Deleted Successfully!'\r\n          })\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed',\r\n            text: message ? message : 'Delete Failed!'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const fetchAllUsers = ()=> {\r\n    setLoading(true)\r\n    userService.getAllUsers()\r\n      .then((response)=> {\r\n        //if(response.status == 'OK') {}\r\n        const { status, data } = response\r\n        if(status === 'SUCCESS') {\r\n          setUsers(data)\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('USERS')\r\n    fetchAllUsers();\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}} aria-label=\"department bar\">\r\n        <div className={classes.headerBar}>\r\n          {userHasAnyOfRoles(userContext.user.roles, APP_PAGES_AND_ROLES.createUserRoles) ? <Button variant=\"contained\" color=\"primary\" \r\n          disableElevation aria-label=\"Create Department Button\" onClick={handleNavigateToCreatePageClick}>\r\n            <Typography variant=\"button\">\r\n              New User\r\n            </Typography>\r\n          </Button> : null}\r\n        </div>\r\n      </Paper>\r\n      \r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop:'10px'}}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          {loading ? <LinearProgress color=\"secondary\" style={{width: '100%'}}/> : null}\r\n          <Table stickyHeader aria-label=\"list of departments table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {tableColumns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{minWidth: column.minWidth}}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell\r\n                align=\"right\"\r\n                >\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users && users.slice(page*rowsPerPage, page*rowsPerPage+rowsPerPage).map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"chckbox\" tabIndex={-1} key={row.id}>\r\n                    {tableColumns.map((column) => {\r\n                      const value: any = row[column.id as keyof IUser]\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format ? column.format(value) || '--' : value || '--'}\r\n                        </TableCell>\r\n                      )\r\n                    })}\r\n                    <TableCell align=\"right\">\r\n                      <IconButton onClick={(e)=> handleEdit(row.id, e)} size=\"small\" disabled={loading}>\r\n                        <EditIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <IconButton onClick={(e)=> handleDelete(row.id, e)} size=\"small\" disabled={loading}>\r\n                        <DeleteIcon fontSize=\"small\"/>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={users.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default ListUserPage;","import { Button, Divider, FormControl, Grid, IconButton, InputLabel, makeStyles, Paper, Select, TextField, Typography } from '@material-ui/core';\r\nimport React, { FormEvent, Fragment, FunctionComponent, SyntheticEvent, useContext, useEffect, useState } from 'react'\r\nimport BackIcon from '@material-ui/icons/ChevronLeft'\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as userService from '../../services/user-service'\r\nimport * as departmentService from '../../services/department-service'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { EmployeeLevel, employeeLevels } from '../../types/EmployeeLevel';\r\nimport { UserPayload } from '../../types/payloads';\r\nimport { IDepartment } from '../../types/types';\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\nimport { APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { AppContext } from '../../context/AppProvider';\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n\r\n  },\r\n  form: {\r\n    width: '70%',\r\n    padding: '20px',\r\n    marginTop: '40px',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  }\r\n\r\n}));\r\n\r\ninterface StateType {\r\n  firstName: string\r\n  lastName: string\r\n  email: string\r\n  phoneNo: string\r\n  roles: EmployeeLevel\r\n  employeeId: string\r\n  departmentId: number | string\r\n}\r\n\r\nconst CreateUserPage: FunctionComponent = ()=> {\r\n  const [payload, setPayload] = useState<StateType>(\r\n    {firstName: '', lastName: '', phoneNo: '', email: '', \r\n    roles: EmployeeLevel.REGULAR, employeeId: '', departmentId: ''\r\n  })\r\n\r\n  const [departments, setDepartments] = useState<IDepartment[]>([])\r\n\r\n  //lets authorize access\r\n  useAuthentication({ roles: APP_PAGES_AND_ROLES.createUserRoles })\r\n  const appContext = useContext(AppContext)\r\n  \r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateBack = ()=> {\r\n    history.goBack()\r\n  }\r\n\r\n  const fetchAllDepartments = () => {\r\n    departmentService.getAllDepartments()\r\n      .then(response=> {\r\n        const {data, status, message} = response\r\n        if(status == 'OK') {\r\n          setDepartments(data)\r\n          setPayload({...payload, departmentId: data[0].id})\r\n        }\r\n      })\r\n      .catch(error => {\r\n\r\n      })\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setPayload({...payload, [eventName]: value})\r\n  }\r\n\r\n  const handleSelectChange = (event: any) => {\r\n    const target = event.target\r\n    const eventName: string = target.name\r\n    console.log('event', event.target.value)\r\n    setPayload({...payload, [eventName]: target.value})\r\n  }\r\n\r\n  const handleSubmitEvent = (event: SyntheticEvent)=> {\r\n    event.preventDefault()\r\n   \r\n    const department: IDepartment | undefined = departments.find(item=> item.id == payload.departmentId)\r\n    console.log('department', department)\r\n\r\n    const myPayload: UserPayload = {\r\n      email: payload.email,\r\n      phoneNo: payload.phoneNo,\r\n      firstName: payload.firstName,\r\n      lastName: payload.lastName,\r\n      roles: payload.roles,\r\n      department: department,\r\n      employeeId: payload.employeeId,\r\n      password: 'password'\r\n    }\r\n\r\n    console.log('payload', myPayload)\r\n\r\n    userService.registerEmployee(myPayload)\r\n      .then(response=> {\r\n        const {status, data, message} = response\r\n        if(status == 'CREATED') {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: message ? message : 'User Created Successfully',\r\n            allowOutsideClick: false,\r\n            willClose: ()=> {\r\n              setPayload({email: '', phoneNo: '', firstName: '', lastName: '', departmentId: departments[0].id, employeeId: '', roles: EmployeeLevel.REGULAR})\r\n            }\r\n          })\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed!',\r\n            text: message ? message : 'failed'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('USERS / CREATE')\r\n    fetchAllDepartments()\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}}>\r\n        <IconButton color=\"primary\" onClick={handleNavigateBack}>\r\n          <BackIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop: '10px', display:'flex', flexDirection: 'column'}}>\r\n        <Typography variant=\"h5\" color=\"textPrimary\">\r\n          Create User Form\r\n        </Typography>\r\n        <Divider />\r\n        <div style={{width:'100%', display:'flex', justifyContent: 'center'}}>\r\n          <form className={classes.form} autoComplete=\"off\" onSubmit={handleSubmitEvent}>\r\n            <TextField id=\"firstName\" label=\"First Name\" name=\"firstName\" value={payload.firstName}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"lastName\" label=\"Last Name\" name=\"lastName\" value={payload.lastName}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"phoneNo\" label=\"Phone\" name=\"phoneNo\" value={payload.phoneNo}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"email\" label=\"Email\" name=\"email\" value={payload.email}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"email\" label=\"Employee ID\" name=\"employeeId\" value={payload.employeeId}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <FormControl variant=\"outlined\" className={classes.textField}>\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">Department</InputLabel>\r\n              <Select\r\n                native\r\n                value={payload.departmentId}\r\n                onChange={handleSelectChange}\r\n                label=\"Department\"\r\n                name=\"departmentId\"\r\n              >\r\n                {departments && departments.map((department)=> {\r\n                  return (\r\n                    <option value={department.id} key={department.id}>{department.name}</option>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl variant=\"outlined\" className={classes.textField}>\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">LEVEL</InputLabel>\r\n              <Select\r\n                native\r\n                value={payload.roles}\r\n                onChange={handleSelectChange}\r\n                label=\"Role\"\r\n                name=\"roles\"\r\n              >\r\n                {employeeLevels.map((level)=> {\r\n                  return (\r\n                    <option value={level.id} key={level.id}>{level.label}</option>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <Button variant=\"contained\" color=\"secondary\" style={{float: 'right'}} type=\"submit\">\r\n              <Typography variant=\"button\">\r\n                Create User\r\n              </Typography>\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n\r\nexport default CreateUserPage;","import { Button, Divider, FormControl, IconButton, InputLabel, LinearProgress, makeStyles, Paper, Select, TextField, Typography } from '@material-ui/core';\r\nimport React, { FormEvent, Fragment, FunctionComponent, SyntheticEvent, useState, useEffect, useContext } from 'react'\r\nimport BackIcon from '@material-ui/icons/ChevronLeft'\r\nimport { useHistory, useParams, useRouteMatch } from 'react-router-dom';\r\nimport * as userService from '../../services/user-service'\r\nimport * as departmentService from '../../services/department-service'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { UserPayload } from '../../types/payloads';\r\nimport { EmployeeLevel, employeeLevels } from '../../types/EmployeeLevel';\r\nimport { IDepartment } from '../../types/types';\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\nimport { APP_PAGES_AND_ROLES } from '../../utils/constants';\r\nimport { showErrorAlert } from '../../utils/common-helper';\r\nimport { AppContext } from '../../context/AppProvider';\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n\r\n  },\r\n  form: {\r\n    width: '70%',\r\n    padding: '20px',\r\n    marginTop: '40px',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  }\r\n\r\n}));\r\n\r\ninterface ParamTypes {\r\n  userId: string\r\n}\r\n\r\ninterface StateType {\r\n  firstName: string\r\n  lastName: string\r\n  email: string\r\n  phoneNo: string\r\n  roles: EmployeeLevel\r\n  employeeId: string\r\n  departmentId: number | string\r\n}\r\n\r\nconst EditUserPage: FunctionComponent = ()=> {\r\n  //local states\r\n  const [payload, setPayload] = useState<StateType>(\r\n    {firstName: '', lastName: '', phoneNo: '', email: '', \r\n    roles: EmployeeLevel.REGULAR, employeeId: '', departmentId: ''\r\n  })\r\n  const [departments, setDepartments] = useState<IDepartment[]>([])\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const { userId } = useParams<ParamTypes>() //department id from url params\r\n  const appContext = useContext(AppContext)\r\n\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateBack = ()=> {\r\n    history.goBack()\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setPayload({...payload, [eventName]: value})\r\n  }\r\n\r\n  const payloadIsValid = ()=> {\r\n    return payload.firstName && payload.lastName && payload.roles && payload.departmentId && payload.phoneNo && payload.email\r\n  }\r\n\r\n  const handleSelectChange = (event: any) => {\r\n    const target = event.target\r\n    const eventName: string = target.name\r\n    console.log('event', event.target.value)\r\n    setPayload({...payload, [eventName]: target.value})\r\n  }\r\n  \r\n  const fetchAllDepartments = () => {\r\n    departmentService.getAllDepartments()\r\n      .then(response=> {\r\n        const {data, status} = response\r\n        if(status == 'OK') {\r\n          setDepartments(data)\r\n        }\r\n      })\r\n      .catch(error => {\r\n\r\n      })\r\n  }\r\n\r\n  const initUser = () => {\r\n    setLoading(true)\r\n    userService.getUser(parseInt(userId))\r\n      .then(response=> {\r\n        const {status, data, message} = response;\r\n        console.log('data', data)\r\n        if(status === 'SUCCESS') {\r\n          if(data) {\r\n            setPayload({email: data.email, phoneNo: data.phoneNo, firstName: data.firstName, lastName: data.lastName, departmentId: data.department, employeeId: data.employeeId, roles: data.employeeLevel})\r\n          } else {\r\n            MySwal.fire({\r\n              icon: 'error',\r\n              title: 'Failed',\r\n              text: 'Department Not Found'\r\n            })\r\n          }\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed',\r\n            text: message ? message : 'Department Not Found'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const handleSubmitEvent = (event: SyntheticEvent)=> {\r\n    event.preventDefault()\r\n    console.log('payload', payload)\r\n\r\n    const payloadModel: UserPayload = {\r\n      id: parseInt(userId),\r\n      firstName: payload.firstName,\r\n      lastName: payload.lastName,\r\n      email: payload.email,\r\n      phoneNo: payload.phoneNo,\r\n      employeeId: payload.employeeId,\r\n      roles: payload.roles,\r\n      departmentId: payload.departmentId\r\n    }\r\n    userService.updateUser(parseInt(userId), payloadModel)\r\n      .then(response=> {\r\n        const {status, data, message} = response\r\n        if(status == 'CREATED') {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: message ? message : 'Supplier Created Successfully',\r\n            allowOutsideClick: false,\r\n          })\r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Failed!',\r\n            text: message ? message : 'failed'\r\n          })\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        showErrorAlert('Update User', error)\r\n      })\r\n  }\r\n\r\n  \r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.editUserRoles})\r\n  \r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('USERS / EDIT')\r\n    initUser()\r\n    fetchAllDepartments()\r\n    return () => {\r\n    }\r\n  }, [userId])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}}>\r\n        <IconButton color=\"primary\" onClick={handleNavigateBack}>\r\n          <BackIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop: '10px', display:'flex', flexDirection: 'column'}}>\r\n        <Typography variant=\"h5\" color=\"textPrimary\">\r\n          Edit User\r\n        </Typography>\r\n        <Divider />\r\n        {loading ? <LinearProgress color=\"secondary\" style={{width: '100%'}}/> : null}\r\n        <div style={{width:'100%', display:'flex', justifyContent: 'center'}}>\r\n          <form className={classes.form} autoComplete=\"off\" onSubmit={handleSubmitEvent}>\r\n          <TextField id=\"firstName\" label=\"First Name\" name=\"firstName\" value={payload.firstName}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"lastName\" label=\"Last Name\" name=\"lastName\" value={payload.lastName}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"phoneNo\" label=\"Phone\" name=\"phoneNo\" value={payload.phoneNo}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"email\" label=\"Email\" name=\"email\" value={payload.email}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"employeeId\" label=\"Employee ID\" name=\"employeeId\" value={payload.employeeId}\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <FormControl variant=\"outlined\" className={classes.textField}>\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">Department</InputLabel>\r\n              <Select\r\n                native\r\n                value={payload.departmentId}\r\n                onChange={handleSelectChange}\r\n                label=\"Department\"\r\n                name=\"departmentId\"\r\n              >\r\n                {departments && departments.map((department)=> {\r\n                  return (\r\n                    <option value={department.id} key={department.id}>{department.name}</option>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl variant=\"outlined\" className={classes.textField}>\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">LEVEL</InputLabel>\r\n              <Select\r\n                native\r\n                value={payload.roles}\r\n                onChange={handleSelectChange}\r\n                label=\"Employee Level\"\r\n                name=\"roles\"\r\n              >\r\n                {employeeLevels.map((level)=> {\r\n                  return (\r\n                    <option value={level.id} key={level.id}>{level.label}</option>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <Button variant=\"contained\" color=\"secondary\" style={{float: 'right'}} type=\"submit\" disabled={loading || !payloadIsValid()}>\r\n              <Typography variant=\"button\">\r\n                Edit Supplier\r\n              </Typography>\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n\r\nexport default EditUserPage","export enum RequestReason {\r\n  Replace = 'Replace',\r\n  Restock = \"Restock\",\r\n  FreshNeed = 'FreshNeed'\r\n}\r\n\r\nexport const RequestReasonList = [\r\n  {id: 'Replace', label: 'REPLACE'},\r\n  {id: 'Restock', label: 'RESTOCK'},\r\n  {id: 'FreshNeed', label: 'FRESH NEED'}\r\n]","import { Button, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, Grid, IconButton, InputLabel, makeStyles, Paper, Select, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography } from '@material-ui/core';\r\nimport React, { FormEvent, Fragment, FunctionComponent, SyntheticEvent, useState } from 'react'\r\nimport BackIcon from '@material-ui/icons/ChevronLeft'\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as requestService from '../../services/item-request-service'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { CreateRequestItemPayload, MultiRequestItemPayload } from '../../types/payloads';\r\nimport { IItemRequest, ITableColumn } from '../../types/types';\r\nimport { Add, Delete, Send } from '@material-ui/icons';\r\nimport { RequestReason, RequestReasonList } from '../../types/RequestReason';\r\nimport { getUserDetailsFromStorage } from '../../services/auth-service'\r\nimport { AuthUser } from '../../types/User';\r\nimport { showErrorAlert, showSuccessAlert } from '../../utils/common-helper';\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n\r\n  },\r\n  form: {\r\n    width: '100% !important',\r\n    backgroundColor: 'yellow'\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    padding: 10\r\n  }\r\n\r\n}));\r\n\r\ninterface EntryState {\r\n  name: string\r\n  reason: string\r\n  purpose: string\r\n  quantity: number\r\n}\r\n\r\nconst headerColumns: ITableColumn[] = [\r\n  {id: 'name', label: 'Name', align: 'left'},\r\n  {id: 'reason', label: 'Reason', align: 'left'},\r\n  {id: 'purpose', label: 'Purpose', align: 'left'},\r\n  {id: 'quantity', label: 'Quantity', align: 'left'}\r\n]\r\n\r\n\r\nconst CreateItemRequestPage: FunctionComponent = ()=> {\r\n\r\n  const [entries, setEntries] = useState<IItemRequest[]>([])\r\n  const [entry, setEntry] = useState<EntryState>({name: '', reason: RequestReason.FreshNeed, purpose: '', quantity: 0})\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [modalOpen, setModalOpen] = useState<boolean>(false)\r\n\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const handleNavigateBack = ()=> {\r\n    history.goBack()\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setEntry({...entry, [eventName]: value})\r\n  }\r\n\r\n  const handleSelectChange = (event: any) => {\r\n    const target = event.target\r\n    const eventName: string = target.name\r\n    console.log('event', event.target.value)\r\n    setEntry({...entry, [eventName]: target.value})\r\n  }\r\n\r\n  const handleSubmitEvent = (event: SyntheticEvent)=> {\r\n    event.preventDefault()\r\n    MySwal.fire({\r\n      title: `Are you sure you send request?`,\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Yes',\r\n      preConfirm: ()=> {\r\n        createItemRequest()\r\n      }\r\n    })\r\n  }\r\n\r\n  const createItemRequest = ()=> {\r\n    let multipleEntries: CreateRequestItemPayload[] = entries.map(entry => {\r\n      const entryPayload: CreateRequestItemPayload = {\r\n        name: entry.name,\r\n        reason: entry.reason,\r\n        purpose: entry.purpose,\r\n        quantity: entry.quantity\r\n      }\r\n      return entryPayload\r\n    })\r\n    const authUser = getUserDetailsFromStorage() as AuthUser;\r\n    const authUserId = authUser.id as number\r\n\r\n    const multiRequestPayload: MultiRequestItemPayload = {\r\n      multipleRequestItem: multipleEntries,\r\n      employee_id: authUserId\r\n    }\r\n    setLoading(true)\r\n    requestService.saveItemRequest(multiRequestPayload)\r\n      .then(response => {\r\n        const {data, status, message} = response\r\n        if(status === 'OK') {\r\n          setEntries([])\r\n          showSuccessAlert('Send Request', message ? message : 'Request Sent!')\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        showErrorAlert('Failed', error)\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const handleAddEntry = ()=> {\r\n    const myEntry: EntryState = {\r\n      name: entry.name,\r\n      reason: entry.reason,\r\n      purpose: entry.purpose,\r\n      quantity: entry.quantity\r\n    }\r\n    \r\n    setEntries([...entries, myEntry])\r\n    setEntry({name: '', reason: RequestReason.FreshNeed, purpose: '', quantity: 0})\r\n  }\r\n\r\n  const handleRemoveEntry = (index: number)=> {\r\n    //set entries\r\n    setEntries(entries.filter((entry, idx) => index != idx))\r\n  }\r\n\r\n\r\n  const handleCloseDialog = () => {\r\n    setModalOpen(false)\r\n  }\r\n\r\n  const handleOpenDialog = () => {\r\n    setModalOpen(true)\r\n  }\r\n\r\n  const requestValid = () => {\r\n    return entries.length > 0\r\n  }\r\n\r\n  const entryValid = () => {\r\n    if(!entry.name || !entry.reason || !entry.purpose || entry.quantity <= 0) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}}>\r\n        <IconButton color=\"primary\" onClick={handleNavigateBack}>\r\n          <BackIcon />\r\n        </IconButton>\r\n      </Paper>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop: '10px', display:'flex', flexDirection: 'column'}}>\r\n        <Grid container style={{padding: 5}}>\r\n          <Grid item md={6} lg={6} sm={6}>\r\n            <Typography variant=\"h5\" color=\"textPrimary\">\r\n              Request Form\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={6} lg={6} sm={6} style={{textAlign:'right'}}>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleOpenDialog}>\r\n              <Add fontSize=\"small\" /> Add Entry\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        <Divider />\r\n        <div style={{width:'100%', display:'flex', justifyContent: 'center', flexDirection: 'column'}}>\r\n          <TableContainer className={classes.tableContainer}>\r\n            <Table stickyHeader aria-label=\"new request entries table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headerColumns.map(column => {\r\n                    return (\r\n                      <TableCell key={column.id}>\r\n                        {column.label}\r\n                      </TableCell>\r\n                    )\r\n                  })}\r\n                  <TableCell>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {entries && entries.map((entry, index)=> {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      {headerColumns.map((column) => {\r\n                        const value: any =  entry[column.id as keyof EntryState]\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {value}\r\n                          </TableCell>\r\n                        )\r\n                      })}\r\n                      <TableCell>\r\n                        <IconButton color=\"secondary\" onClick={()=> handleRemoveEntry(index)}>\r\n                          <Delete />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Grid container style={{marginTop: '10px'}}>\r\n            <Grid item md={12} style={{textAlign: 'right'}}>\r\n              <Button variant=\"contained\" color=\"secondary\" disabled={!requestValid() || loading} onClick={handleSubmitEvent}>\r\n                {loading ?<CircularProgress size={20} /> : null}\r\n                <Send /> <span style={{marginLeft: '5px'}}>Send Request</span>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Paper>\r\n      <Dialog onClose={handleCloseDialog} aria-labelledby=\"dialog-title\" open={modalOpen} style={{width: '100%'}}>\r\n        <DialogTitle>\r\n          Request Entry\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <div style={{width: '400px'}}>\r\n            <FormControl variant=\"outlined\" className={classes.textField}>\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">Department</InputLabel>\r\n              <Select\r\n                native\r\n                value={entry.reason}\r\n                onChange={handleSelectChange}\r\n                label=\"Reason\"\r\n                name=\"reason\"\r\n              >\r\n                {RequestReasonList.map(reason => {\r\n                  return (\r\n                    <option key={reason.id} value={reason.id}>\r\n                      {reason.label}\r\n                    </option>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField id=\"item-name\" label=\"Item Name\" name=\"name\" value={entry.name} autoComplete=\"off\"\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"purpose\" label=\"Purpose\" name=\"purpose\" value={entry.purpose} autoComplete=\"off\"\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <TextField id=\"quantity\" label=\"Quantity\" name=\"quantity\" value={entry.quantity} autoComplete=\"off\" type=\"number\"\r\n              variant=\"outlined\" className={classes.textField} onChange={handleInputChange}/>\r\n            <Grid container>\r\n              <Grid item md={6}>\r\n                <Button variant=\"contained\" color=\"secondary\" style={{float: 'left'}} onClick={handleCloseDialog}>\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <Button variant=\"contained\" color=\"primary\" style={{float: 'right'}} onClick={handleAddEntry} disabled={!entryValid()}>\r\n                  Add Entry\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n\r\nexport default CreateItemRequestPage;","import { AxiosResponse } from \"axios\";\r\nimport { MultiRequestItemPayload, ProcurementActOnRequestPayload, UserPayload } from \"../types/payloads\";\r\nimport service from './helpers/web-api'\r\n\r\nconst servicePath = 'requests'\r\n\r\n\r\n\r\nexport function saveItemRequest(payload: MultiRequestItemPayload): Promise<any> {\r\n  console.log('payload', payload)\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/multipleRequestItems`,\r\n      method: 'POST',\r\n      data: payload\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getAllUsers(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `${servicePath}`,\r\n      method: 'GET'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getUser(id: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}/${id}`,\r\n      method: 'GET'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function updateUser(id: number, payload: UserPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}/${id}`,\r\n      method: 'PUT',\r\n      data: payload\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function deleteUser(id: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/${servicePath}/${id}`,\r\n      method: 'DELETE'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n} \r\n\r\nexport function getUserItemRequests(userId: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/requestItems/employees/${userId}`,\r\n      method: 'get'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getAllItemRequests(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/requestItems`,\r\n      method: 'get'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getAllDepartmentItemRequests(departmentId: number, employeeId: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/requestItems/departments/${departmentId}/employees/${employeeId}`,\r\n      method: 'get'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function endorseItemRequest(requestId: number, employeeId: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/endorse`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function hodCancelItemRequest(requestId: number, employeeId: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/cancel`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getEndorsedRequestItems(employeeId: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/requestItems/endorsedItems`,\r\n      method: 'get',\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function procurementActOnRequest(requestId: number, payload: ProcurementActOnRequestPayload): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/procurement/${requestId}`,\r\n      method: 'put',\r\n      data: payload\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function getGeneralManagerRequests(employeeId: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/requestItems/employees/${employeeId}/generalManager`,\r\n      method: 'get'\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function approveRequest(requestId: number, employeeId: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/approve`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\nexport function cancelRequest(requestId: number, employeeId: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    service({\r\n      url: `/requestItems/${requestId}/employees/${employeeId}/cancel`,\r\n      method: 'put',\r\n      data: {}\r\n    })\r\n    .then((response: AxiosResponse) => resolve(response))\r\n    .catch(error=> reject(error))\r\n  })\r\n}\r\n\r\n","import { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, IconButton } from '@material-ui/core';\r\nimport React, { Fragment, FunctionComponent, useState, useEffect, ChangeEvent, MouseEvent, useContext} from 'react'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport {IRequestItem, ITableColumn  } from '../../types/types'\r\nimport * as requestService from '../../services/item-request-service'\r\nimport * as authService from '../../services/auth-service'\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { formatRequestStatusColor, prettifyDateTime, showErrorAlert } from '../../utils/common-helper';\r\nimport { AuthUser } from '../../types/User';\r\n\r\n\r\nconst tableColumns: ITableColumn[] = [\r\n  {id: 'name', label: 'Name', minWidth: 170, align: 'left'},\r\n  {id: 'reason', label: 'Reason', minWidth: 100, align: 'left'},\r\n  {id: 'quantity', label: 'Quantity', minWidth: 100, align: 'left'},\r\n  {id: 'endorsement', label: 'Endorsed', minWidth: 100, align: 'left'},\r\n  {id: 'requestDate', label: 'Date Requested', minWidth: 100, align: 'left', format: (value: string)=> prettifyDateTime(value)},\r\n  {id: 'status', label: 'Status', minWidth: 100, align: 'left'},\r\n]\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  headerBar: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    padding: 10\r\n  }\r\n}))\r\n\r\nconst initDepartments: IRequestItem[] = []\r\n\r\nconst MyRequestListPage: FunctionComponent = ()=> {\r\n  const [requests, setRequests] = useState<IRequestItem[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  //router helpers\r\n  const history = useHistory()\r\n  const { path } = useRouteMatch()\r\n  const classes = useStyles()\r\n\r\n  const authUser = authService.getUserDetailsFromStorage() as AuthUser;\r\n\r\n  const appContext = useContext(AppContext)\r\n\r\n  const handleNavigateToCreatePageClick = ()=> {\r\n    history.push(`${path}/create`)\r\n  }\r\n\r\n  const handleChangePage = (event: MouseEvent | null, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    //const value = event.\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  \r\n\r\n\r\n  const fetchMyRequests = ()=> {\r\n    setLoading(true)\r\n    requestService.getUserItemRequests(authUser.id as number)\r\n      .then((response)=> {\r\n        const { status, data } = response\r\n        console.log('res', data)\r\n        if(status === 'FOUND') {\r\n          setRequests(data)\r\n        }\r\n        //return (<Alert severity=\"error\">Hey</Alert>)\r\n        console.log('requests', requests)\r\n      })\r\n      .catch(error=> {\r\n        showErrorAlert('My requests', 'Failed to Fetch Requests!')\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('My Requests')\r\n    fetchMyRequests();\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}} aria-label=\"department bar\">\r\n        <div className={classes.headerBar}>\r\n          <Typography variant=\"h6\">\r\n            My Requests\r\n          </Typography>\r\n          <Button variant=\"contained\" color=\"primary\" \r\n            disableElevation aria-label=\"Create Department Button\" onClick={handleNavigateToCreatePageClick}>\r\n            <Typography variant=\"button\">\r\n              New Request\r\n            </Typography>\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n      \r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop:'10px'}}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          <Table stickyHeader aria-label=\"list of departments table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {tableColumns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{minWidth: column.minWidth}}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {requests && requests.slice(page*rowsPerPage, page*rowsPerPage+rowsPerPage).map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {tableColumns.map((column) => {\r\n                      const id: any = column.id\r\n                      const value: any = row[column.id as keyof IRequestItem]\r\n                      const formatedValue = column.format ? column.format(value) : value\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.id === 'status' ? <span style={{backgroundColor: formatRequestStatusColor(value), padding: '5px', borderRadius: '10px', color: '#ffffff'}}>{formatedValue}</span> : formatedValue}\r\n                        </TableCell>\r\n                      )\r\n                    })}\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={requests.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default MyRequestListPage;","import { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, IconButton, LinearProgress } from '@material-ui/core';\r\nimport React, { Fragment, FunctionComponent, useState, useEffect, ChangeEvent, MouseEvent, useContext} from 'react'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport {IRequestItem, ITableColumn  } from '../../types/types'\r\nimport * as requestService from '../../services/item-request-service'\r\nimport * as authService from '../../services/auth-service'\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { formatRequestStatusColor, prettifyDateTime, showErrorAlert, showSuccessAlert } from '../../utils/common-helper';\r\nimport { AuthUser } from '../../types/User';\r\nimport { EndorsementStatus } from '../../types/enums';\r\nimport { CancelOutlined, Check, CheckCircleTwoTone } from '@material-ui/icons';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { dangerBtnColor, successBtnColor } from '../../utils/constants';\r\n\r\n\r\nconst tableColumns: ITableColumn[] = [\r\n  {id: 'name', label: 'Name', minWidth: 170, align: 'left'},\r\n  {id: 'quantity', label: 'Quantity', align: 'left'},\r\n  {id: 'reason', label: 'Reason', minWidth: 100, align: 'left'},\r\n  {id: 'purpose', label: 'Purpose', minWidth: 100, align: 'left'},\r\n  {id: 'requestDate', label: 'Date Requested', minWidth: 100, align: 'left', format: (value: string)=> prettifyDateTime(value)},\r\n  {id: 'endorsement', label: 'Endorsed', minWidth: 100, align: 'left'}\r\n]\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  headerBar: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    padding: 10\r\n  }\r\n}))\r\n\r\nconst initDepartments: IRequestItem[] = []\r\n\r\nconst HODItemRequestListPage: FunctionComponent = ()=> {\r\n  const [requests, setRequests] = useState<IRequestItem[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  //router helpers\r\n  const history = useHistory()\r\n  const { path } = useRouteMatch()\r\n  const classes = useStyles()\r\n  \r\n\r\n  const authUser = authService.getUserDetailsFromStorage() as AuthUser;\r\n\r\n  const appContext = useContext(AppContext)\r\n\r\n  const handleNavigateToCreatePageClick = ()=> {\r\n    history.push(`${path}/create`)\r\n  }\r\n\r\n  const handleChangePage = (event: MouseEvent | null, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    //const value = event.\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleEndorseClick = (id: number)=> {\r\n    MySwal.fire({\r\n      title: `Are you sure you want to endorse request?`,\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Yes',\r\n      preConfirm: ()=> {\r\n        console.log('left confirm')\r\n        endorseRequest(id);\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleCancelRequestClick = (id: number)=> {\r\n    MySwal.fire({\r\n      title: `Are you sure you want to Cancel request?`,\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Yes',\r\n      preConfirm: ()=> {\r\n        console.log('left confirm')\r\n        cancelRequest(id);\r\n      }\r\n    })\r\n  }\r\n\r\n  const endorseRequest = (requestId: number) => {\r\n    setLoading(true)\r\n    requestService.endorseItemRequest(requestId, authUser.id as number)\r\n      .then(response=> {\r\n        const {status, message} = response\r\n        if(status === 'OK') {\r\n          setRequests(requests.filter(item => item.id != requestId))\r\n          showSuccessAlert('Endorse Request', message)\r\n        } else {\r\n          showErrorAlert('Endorse Request', message)\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> setLoading(false))\r\n  }\r\n\r\n  const cancelRequest = (requestId: number) => {\r\n    setLoading(true)\r\n    requestService.hodCancelItemRequest(requestId, authUser.id as number)\r\n      .then(response=> {\r\n        const {status, message} = response\r\n        if(status === 'OK') {\r\n          setRequests(requests.filter(item => item.id != requestId))\r\n          showSuccessAlert('Cancel Request', message)\r\n        } else {\r\n          showErrorAlert('Cancel Request', message)\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> setLoading(false))\r\n  }\r\n\r\n  const fetchMyRequests = ()=> {\r\n    \r\n    setLoading(true)\r\n    requestService.getAllDepartmentItemRequests(authUser.department.id as number, authUser.id as number)\r\n      .then((response)=> {\r\n        const { status, data } = response\r\n        console.log('res', data)\r\n        if(status === 'SUCCESS') {\r\n          setRequests(data)\r\n        }\r\n        console.log('requests', requests)\r\n      })\r\n      .catch(error=> {\r\n        showErrorAlert('My requests', 'Failed to Fetch Requests!')\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('HOD ITEM REQUESTS')\r\n    fetchMyRequests();\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}} aria-label=\"department bar\">\r\n        <div className={classes.headerBar}>\r\n          <Typography variant=\"h6\">\r\n            My Requests\r\n          </Typography>\r\n          <Button variant=\"contained\" color=\"primary\" \r\n            disableElevation aria-label=\"Create Department Button\" onClick={handleNavigateToCreatePageClick}>\r\n            <Typography variant=\"button\">\r\n              New Request\r\n            </Typography>\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n      \r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop:'10px'}}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          {loading ? <LinearProgress color=\"secondary\" style={{width: '100%'}}/> : null}\r\n          <Table stickyHeader aria-label=\"list of departments table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {tableColumns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{minWidth: column.minWidth, maxWidth: column.maxWidth}}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell align=\"right\">\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {requests && requests.slice(page*rowsPerPage, page*rowsPerPage+rowsPerPage).map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {tableColumns.map((column) => {\r\n                      const id: any = column.id\r\n                      const value: any = row[column.id as keyof IRequestItem]\r\n                      const formatedValue = column.format ? column.format(value) : value\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.id === 'status' ? <span style={{backgroundColor: formatRequestStatusColor(value), padding: '5px', borderRadius: '10px', color: '#ffffff'}}>{formatedValue}</span> : formatedValue}\r\n                        </TableCell>\r\n                      )\r\n                    })}\r\n                    <TableCell align=\"right\">\r\n                      <div style={{minWidth: '150px'}}>\r\n                        <IconButton disabled={row.endorsement !== EndorsementStatus.PENDING} size=\"small\"\r\n                        onClick={()=> handleEndorseClick(row.id as number)} style={{backgroundColor: successBtnColor, marginRight: '5px', color: '#ffffff'}}>\r\n                          <CheckCircleTwoTone />\r\n                        </IconButton>\r\n                        <IconButton disabled={row.endorsement !== EndorsementStatus.PENDING} size=\"small\"\r\n                        onClick={()=> handleCancelRequestClick(row.id as number)} style={{backgroundColor: '#fc0b03', color: '#ffffff'}}>\r\n                          <CancelOutlined />\r\n                        </IconButton>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={requests.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default HODItemRequestListPage;","import { makeStyles, Typography } from \"@material-ui/core\";\r\nimport { FunctionComponent } from \"react\";\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n    minHeight: '500px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n}))\r\nconst NotAuthorizedPage: FunctionComponent = () => {\r\n  const classes = useStyles()\r\n  return (<div className={classes.root}>\r\n    <div style={{padding: '10px', borderRadius: '20px', backgroundColor: '#ccc8c8'}}>\r\n      <Typography variant=\"h5\">\r\n        USER NOT AUTHORIZED\r\n      </Typography>\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default NotAuthorizedPage","import { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, IconButton, LinearProgress } from '@material-ui/core';\r\nimport React, { Fragment, FunctionComponent, useState, useEffect, ChangeEvent, MouseEvent, useContext} from 'react'\r\nimport {IRequestItem, ISupplier, ITableColumn  } from '../../types/types'\r\nimport * as requestService from '../../services/item-request-service'\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { formatRequestStatusColor, prettifyDateTime, showErrorAlert, showSuccessAlert } from '../../utils/common-helper';\r\nimport { EndorsementStatus } from '../../types/enums';\r\nimport { CancelOutlined, CheckCircleTwoTone } from '@material-ui/icons';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { APP_PAGES_AND_ROLES, CURRENCY_CODE } from '../../utils/constants';\r\nimport { UserContext } from '../../context/UserProvider';\r\nimport useAuthentication from '../../components/hooks/use-authentication';\r\n\r\n\r\nconst tableColumns: ITableColumn[] = [\r\n  {id: 'name', label: 'Name', minWidth: 170, align: 'left'},\r\n  {id: 'quantity', label: 'Quantity', minWidth: 100, align: 'left'},\r\n  {id: 'unitPrice', label: 'Unit Price', minWidth: 100, align: 'left'},\r\n  {id: 'amount', label: 'Amount', minWidth: 100, align: 'left', format: (value)=> `${CURRENCY_CODE} ${value}`},\r\n  {id: 'reason', label: 'Reason', minWidth: 100, align: 'left'},\r\n  {id: 'purpose', label: 'Purpose', minWidth: 100, align: 'left'},\r\n  {id: 'supplier', label: 'Supplier', format: (value: ISupplier)=> {\r\n    return value.name\r\n  }},\r\n  {id: 'requestDate', label: 'Date Requested', minWidth: 100, align: 'left', format: (value: string)=> prettifyDateTime(value)},\r\n]\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  headerBar: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    padding: 10\r\n  }\r\n}))\r\n\r\nconst GeneralManagerItemRequestListPage: FunctionComponent = ()=> {\r\n  const [requests, setRequests] = useState<IRequestItem[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const MySwal = withReactContent(Swal)\r\n  const classes = useStyles()\r\n\r\n  const appContext = useContext(AppContext)\r\n  const userContext = useContext(UserContext)\r\n\r\n  const handleChangePage = (event: MouseEvent | null, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    //const value = event.\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleApproveClick = (requestId: number, )=> {\r\n    MySwal.fire({\r\n      title: `Are you sure you want to endorse request?`,\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Yes',\r\n      preConfirm: ()=> {\r\n        console.log('left confirm')\r\n        approveRequest(requestId, userContext.user.id as number);\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleCancelRequestClick = (id: number)=> {\r\n    MySwal.fire({\r\n      title: `Are you sure you want to Cancel request?`,\r\n      showDenyButton: true,\r\n      confirmButtonText: 'Yes',\r\n      preConfirm: ()=> {\r\n        console.log('left confirm')\r\n        cancelRequest(id, userContext.user.id as number);\r\n      }\r\n    })\r\n  }\r\n\r\n  const approveRequest = (requestId: number, employeeId: number) => {\r\n    setLoading(true)\r\n    requestService.approveRequest(requestId, employeeId)\r\n      .then(response=> {\r\n        const {status, message} = response\r\n        if(status === 'OK') {\r\n          setRequests(requests.filter(item => item.id != requestId))\r\n          showSuccessAlert('Endorse Request', message)\r\n        } else {\r\n          showErrorAlert('Endorse Request', message)\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> setLoading(false))\r\n  }\r\n\r\n  const cancelRequest = (requestId: number, employeeId: number) => {\r\n    setLoading(true)\r\n    requestService.cancelRequest(requestId, employeeId)\r\n      .then(response=> {\r\n        const {status, message} = response\r\n        if(status === 'OK') {\r\n          setRequests(requests.filter(item => item.id != requestId))\r\n          showSuccessAlert('Endorse Request', message)\r\n        } else {\r\n          showErrorAlert('Endorse Request', message)\r\n        }\r\n      })\r\n      .catch(error=> {\r\n        \r\n      })\r\n      .finally(()=> setLoading(false))\r\n  }\r\n\r\n  const fetchMyRequests = ()=> {\r\n    console.log('Lets fetch request', userContext.user)\r\n    setLoading(true)\r\n    requestService.getGeneralManagerRequests(userContext.user.id as number)\r\n      .then((response)=> {\r\n        const { status, data } = response\r\n        console.log('res', data)\r\n        if(status === 'OK') {\r\n          setRequests(data)\r\n        }\r\n        console.log('requests', requests)\r\n      })\r\n      .catch(error=> {\r\n        showErrorAlert('My requests', 'Failed to Fetch Requests!')\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  useAuthentication({roles: APP_PAGES_AND_ROLES.generalManagerApproveRoles})\r\n  \r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('GENERAL MANAGER ITEM REQUESTS')\r\n    fetchMyRequests();\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}} aria-label=\"department bar\">\r\n        <div className={classes.headerBar}>\r\n          <Typography variant=\"h6\">\r\n            Item Requests\r\n          </Typography>\r\n        </div>\r\n      </Paper>\r\n      \r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop:'10px'}}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          {loading ? <LinearProgress color=\"secondary\" style={{width: '100%'}}/> : null}\r\n          <Table stickyHeader aria-label=\"list of departments table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {tableColumns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{minWidth: column.minWidth}}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell align=\"right\">\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {requests && requests.slice(page*rowsPerPage, page*rowsPerPage+rowsPerPage).map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {tableColumns.map((column) => {\r\n                      const id: any = column.id\r\n                      const value: any = row[column.id as keyof IRequestItem]\r\n                      const formatedValue = column.format ? column.format(value) : value\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.id === 'status' ? <span style={{backgroundColor: formatRequestStatusColor(value), padding: '5px', borderRadius: '10px', color: '#ffffff'}}>{formatedValue}</span> : formatedValue}\r\n                        </TableCell>\r\n                      )\r\n                    })}\r\n                    <TableCell align=\"right\">\r\n                      <div style={{minWidth: '10px', display: 'flex', flexDirection: 'row', justifyContent: 'flex-start'}}>\r\n                        <Button disabled={row.unitPrice <= 0} size=\"small\" disableElevation\r\n                        variant=\"contained\" onClick={()=> handleApproveClick(row.id as number)} style={{backgroundColor: '#30fc19', marginRight: '5px', color: '#ffffff'}}>\r\n                          <CheckCircleTwoTone />\r\n                        </Button>\r\n                        <Button disabled={row.unitPrice <= 0} size=\"small\" disableElevation\r\n                        variant=\"contained\" onClick={()=> handleCancelRequestClick(row.id as number)} style={{backgroundColor: '#fc0b03', color: '#ffffff'}}>\r\n                          <CancelOutlined />\r\n                        </Button>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={requests.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default GeneralManagerItemRequestListPage;","import { Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, IconButton, LinearProgress, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, ListItem, List, ListItemText, FormControl, InputLabel, Select, CircularProgress } from '@material-ui/core';\r\nimport React, { Fragment, FunctionComponent, useState, useEffect, ChangeEvent, MouseEvent, useContext, SyntheticEvent, FormEvent} from 'react'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport {IRequestItem, ISupplier, ITableColumn  } from '../../types/types'\r\nimport * as requestService from '../../services/item-request-service'\r\nimport * as authService from '../../services/auth-service'\r\nimport * as supplierService from '../../services/supplier-service'\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { formatRequestStatusColor, prettifyDateTime, showErrorAlert, showSuccessAlert } from '../../utils/common-helper';\r\nimport { AuthUser } from '../../types/User';\r\nimport { EndorsementStatus } from '../../types/enums';\r\nimport { CheckCircleTwoTone } from '@material-ui/icons';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { ProcurementActOnRequestPayload } from '../../types/payloads';\r\n\r\n\r\nconst tableColumns: ITableColumn[] = [\r\n  {id: 'name', label: 'Name', minWidth: 170, align: 'left'},\r\n  {id: 'quantity', label: 'Quantity', minWidth: 100, align: 'left'},\r\n  {id: 'reason', label: 'Reason', minWidth: 100, align: 'left'},\r\n  {id: 'requestDate', label: 'Date Requested', minWidth: 100, align: 'left', format: (value: string)=> prettifyDateTime(value)},\r\n  {id: 'endorsement', label: 'Endorsed', minWidth: 100, align: 'left'}\r\n]\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  headerBar: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  tableContainer: {\r\n    maxHeight: 440,\r\n    padding: 10\r\n  },\r\n  textField: {\r\n    marginBottom: '20px'\r\n  }\r\n}))\r\n\r\ninterface EntryState {\r\n  id: any\r\n  name: string\r\n  reason: string\r\n  purpose: string\r\n  quantity: number\r\n  supplierId: any\r\n  unitPrice: number\r\n}\r\n\r\nconst initRequest = {id: null, name: '', reason: '', quantity: 0, unitPrice: 0, supplierId: '', purpose: ''}\r\n\r\nconst ProcurmentOfficerRequestListPage: FunctionComponent = ()=> {\r\n  const [requests, setRequests] = useState<IRequestItem[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\r\n  const [entry, setEntry] = useState<EntryState>(initRequest)\r\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false)\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [suppliers, setSuppliers] = useState<ISupplier[]>([])\r\n\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  //router helpers\r\n  const history = useHistory()\r\n  const { path } = useRouteMatch()\r\n  const classes = useStyles()\r\n  \r\n\r\n  const authUser = authService.getUserDetailsFromStorage() as AuthUser;\r\n\r\n  const appContext = useContext(AppContext)\r\n\r\n  const handleNavigateToCreatePageClick = ()=> {\r\n    history.push(`${path}/create`)\r\n  }\r\n\r\n  const handleChangePage = (event: MouseEvent | null, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    //const value = event.\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleAssignClick = (request: IRequestItem)=> {\r\n    const reason: EntryState = {id: request.id, name: request.name, reason: request.reason, purpose: request.purpose, quantity: request.quantity, unitPrice: 0, supplierId: suppliers[0].id}\r\n    setEntry(reason)\r\n    handleOpenDialog()\r\n  }\r\n\r\n  const handleOpenDialog = ()=> {\r\n    setDialogOpen(true)\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setEntry({...initRequest, supplierId: suppliers[0].id})\r\n    setDialogOpen(false)\r\n  }\r\n\r\n  const handleAddEntry = ()=> {\r\n    const supplier = suppliers.find(supplier=> supplier.id == entry.supplierId) as ISupplier\r\n    console.log('supplier', supplier)\r\n    const payload: ProcurementActOnRequestPayload = {\r\n      supplier: supplier,\r\n      unitPrice: Number(entry.unitPrice)\r\n    }\r\n    setSubmitLoading(true)\r\n    requestService.procurementActOnRequest(entry.id, payload)\r\n      .then(response => {\r\n        const {status, message} = response\r\n        if(status === 'OK') {\r\n          setRequests(requests.filter(rq=> rq.id != entry.id))\r\n          handleCloseDialog()\r\n          showSuccessAlert('Success', message)\r\n        } else {\r\n          handleCloseDialog()\r\n          showErrorAlert('Procurement', message)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        handleCloseDialog()\r\n      })\r\n      .finally(()=> {\r\n        setSubmitLoading(false)\r\n      })\r\n  }\r\n  const handleCancelEntry = ()=> {\r\n    handleCloseDialog()\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setEntry({...entry, [eventName]: value})\r\n  }\r\n\r\n  const handleSelectChange = (event: any) => {\r\n    const target = event.target\r\n    const eventName: string = target.name\r\n    console.log('event', event.target.value)\r\n    setEntry({...entry, [eventName]: target.value})\r\n  }\r\n\r\n  const fetchMyRequests = ()=> {\r\n    setLoading(true)\r\n    requestService.getEndorsedRequestItems(authUser.id as number)\r\n      .then((response)=> {\r\n        const { status, data } = response\r\n        console.log('res', data)\r\n        if(status === 'FOUND') {\r\n          setRequests(data)\r\n        }\r\n        console.log('requests', requests)\r\n      })\r\n      .catch(error=> {\r\n        showErrorAlert('My requests', 'Failed to Fetch Requests!')\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  const fetchSuppliers = ()=> {\r\n    supplierService.getAllSuppliers()\r\n      .then(response => {\r\n        const {status, data} = response\r\n        if(status==='SUCCESS') {\r\n          setSuppliers(data)\r\n          setEntry({...entry, supplierId: data[0].id})\r\n        }\r\n      })\r\n      .catch(error=> {})\r\n      .finally(()=> {\r\n\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    appContext.updateCurrentPage('ENDORSED ITEM REQUEST')\r\n    fetchMyRequests();\r\n    fetchSuppliers()\r\n  }, [])\r\n\r\n  const disableButton = (row: IRequestItem): boolean => {\r\n    return (row.endorsement != EndorsementStatus.ENDORSED) || row.unitPrice > 0\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '50px'}} aria-label=\"department bar\">\r\n        <div className={classes.headerBar}>\r\n          <Typography variant=\"h6\">\r\n            Endorsed Requests\r\n          </Typography>\r\n        </div>\r\n      </Paper>\r\n      \r\n      <Paper elevation={0} style={{padding: '5px', minHeight: '300px', marginTop:'10px'}}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          {loading ? <LinearProgress color=\"secondary\" style={{width: '100%'}}/> : null}\r\n          <Table stickyHeader aria-label=\"list of departments table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {tableColumns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{minWidth: column.minWidth}}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell align=\"right\">\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {requests && requests.slice(page*rowsPerPage, page*rowsPerPage+rowsPerPage).map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {tableColumns.map((column) => {\r\n                      const id: any = column.id\r\n                      const value: any = row[column.id as keyof IRequestItem]\r\n                      const formatedValue = column.format ? column.format(value) : value\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.id === 'status' ? <span style={{backgroundColor: formatRequestStatusColor(value), padding: '5px', borderRadius: '10px', color: '#ffffff'}}>{formatedValue}</span> : formatedValue}\r\n                        </TableCell>\r\n                      )\r\n                    })}\r\n                    <TableCell align=\"right\">\r\n                      <Button disabled={disableButton(row)} size=\"small\" disableElevation\r\n                      variant=\"contained\" onClick={()=> handleAssignClick(row)} style={{backgroundColor: disableButton(row) ? '#e3e1e1' :'#30fc19', marginRight: '5px', color: '#ffffff'}}>\r\n                        <CheckCircleTwoTone />\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={requests.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Dialog open={dialogOpen} onClose={handleCloseDialog} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}>\r\n        <DialogTitle id=\"form-dialog-title\">Procurement Form</DialogTitle>\r\n        <DialogContent>\r\n          <div style={{width: '400px'}}>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemText primary=\"Item\" secondary={entry.name}/>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText primary=\"Reason\" secondary={entry.reason}/>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText primary=\"Purpose\" secondary={entry.purpose}/>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText primary=\"Quantity\" secondary={entry.quantity}/>\r\n                </ListItem>\r\n              </List>\r\n              <div style={{width: '100%', display: 'flex', flexDirection: 'column'}}>\r\n                <FormControl variant=\"outlined\" className={classes.textField}>\r\n                  <InputLabel htmlFor=\"outlined-age-native-simple\">Supplier</InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={entry.supplierId}\r\n                    onChange={handleSelectChange}\r\n                    label=\"Supplier\"\r\n                    name=\"supplierId\"\r\n                  >\r\n                    {suppliers && suppliers.map((supplier)=> {\r\n                      return (\r\n                        <option value={supplier.id} key={supplier.id}>{supplier.name}</option>\r\n                      )\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                type=\"number\"\r\n                label=\"Unit Price\"\r\n                variant=\"outlined\"\r\n                name=\"unitPrice\"\r\n                value={entry.unitPrice}\r\n                onChange={handleInputChange}\r\n                className={classes.textField}\r\n                />\r\n              </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancelEntry} color=\"primary\" disabled={submitLoading}>\r\n            <Typography variant=\"button\">\r\n              Cancel\r\n            </Typography>\r\n          </Button>\r\n          <Button onClick={handleAddEntry} color=\"primary\" disabled={submitLoading}>\r\n            {submitLoading ? <CircularProgress /> : null}\r\n            <Typography variant=\"button\">\r\n              Submit\r\n            </Typography>\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\nexport default ProcurmentOfficerRequestListPage;","import { AppBar, Button, Container, CssBaseline, Divider, Drawer, IconButton, List, makeStyles, Menu, MenuItem, Toolbar, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport clsx from 'clsx';\r\nimport React, { FunctionComponent, useState, useContext, useEffect, useRef, Ref, SyntheticEvent } from 'react'\r\nimport MenuListItems from '../core/MenuListItems';\r\nimport CopyRight from '../core/CopyRight';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { UserContext } from '../../context/UserProvider';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { Route, Switch, useHistory, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport HomePage from '../../pages/HomePage';\r\nimport SettingsPage from '../../pages/SettingsPage';\r\nimport DepartmentListPage from '../../pages/department/DepartmentListPage';\r\nimport DepartmentCreatePage from '../../pages/department/DepartmentCreatePage';\r\nimport EditDepartmentPage from '../../pages/department/EditDepartment';\r\nimport SupplierListPage from '../../pages/supplier/SupplierListPage';\r\nimport CreateSupplierPage from '../../pages/supplier/CreateSupplierPage';\r\nimport EditSupplierPage from '../../pages/supplier/EditSupplierPage';\r\nimport ListUserPage from '../../pages/user/ListUserPage';\r\nimport CreateUserPage from '../../pages/user/CreateUserPage';\r\nimport EditUserPage from '../../pages/user/EditUserPage';\r\nimport { APP_MODULES } from '../../utils/constants';\r\nimport CreateItemRequestPage from '../../pages/item-request/CreateItemRequestPage';\r\nimport { Person } from '@material-ui/icons';\r\nimport * as authService from '../../services/auth-service'\r\nimport { AuthUser } from '../../types/User';\r\nimport MyRequestListPage from '../../pages/item-request/MyRequestListPage';\r\nimport HODItemRequestListPage from '../../pages/item-request/HODItemRequestListPage';\r\nimport useAuthentication from '../hooks/use-authentication';\r\nimport NotAuthorizedPage from '../../pages/NotAuthorizedPage';\r\nimport GeneralManagerItemRequestListPage from '../../pages/item-request/GeneralManagerItemRequestListPage';\r\nimport ProcurmentOfficerRequestListPage from '../../pages/item-request/ProcurementOfficerRequestListPage';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme=> ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24,\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'left'\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n  },\r\n  mainContainer: {\r\n    width: '100%',\r\n    flexGrow: 1,\r\n    padding: '10px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\n\r\n\r\n// const user:User = {\r\n//   id: 562,\r\n//   firstName: 'etornam',\r\n//   lastName: 'anyidoho',\r\n//   username: 'etoretornam',\r\n//   email: 'etornamanyidoho@gmail.com',\r\n//   phoneNumber: '0548556086',\r\n//   employeeLevel: 'junior'\r\n// }\r\n\r\nconst AppLayout:FunctionComponent = ()=> {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState<boolean>(true);\r\n  const [openProfileMenu, setOpenProfileMenu] = useState<boolean>(false)\r\n  const [anchorEl, setAnchorEl] = useState<any>(null)\r\n  const userContext = useContext(UserContext)\r\n  const appContext = useContext(AppContext)\r\n\r\n  const menuAchorRef = useRef(null)\r\n\r\n  //get location\r\n  const location = useLocation();\r\n  const { path } = useRouteMatch()\r\n  const history = useHistory()\r\n\r\n  const handleProfileMenuButtonClick = (event: SyntheticEvent) => {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const handleProfileMenuClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const handleDrawerOpen = ()=> {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleDrawerClose = ()=> {\r\n    setOpen(false);\r\n  }\r\n\r\n  // const initUserState = ()=> {\r\n  //   if(authService.getUserDetailsFromStorage()) {\r\n  //     userContext.saveUser(authService.getUserDetailsFromStorage() as AuthUser)\r\n  //   }\r\n  // }\r\n\r\n  const handleLogout = ()=> {\r\n    handleProfileMenuClose()\r\n    authService.logout()\r\n    history.push('/login')\r\n  }\r\n\r\n  const handleProfileClick = ()=> {\r\n    console.log('profile')\r\n  }\r\n\r\n  //useAuthentication({})\r\n  useEffect(() => {\r\n    const authUser = authService.getUserDetailsFromStorage() as AuthUser\r\n    if(!authUser) {\r\n      console.log('path', path)\r\n      return history.push(`/login`)\r\n    }\r\n  })\r\n \r\n\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div style={{marginRight: '20px'}}>\r\n            <img width=\"40\" height=\"50\" src=\"https://www.blueskies.com/wp-content/uploads/2017/10/logo-01.png\" alt=\"\" loading=\"eager\" />\r\n          </div>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            {appContext.currentPage}\r\n          </Typography>\r\n          <div style={{marginLeft: '10px'}}>\r\n            <Button style={{color: '#ffffff'}} aria-haspopup=\"true\" onClick={handleProfileMenuButtonClick}>\r\n              {userContext.user.fullName}\r\n              <Person />\r\n            </Button>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleProfileMenuClose}\r\n            >\r\n              <MenuItem onClick={handleProfileClick}>Profile</MenuItem>\r\n              <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MenuListItems authUser={authService.getUserDetailsFromStorage()} />\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer}/>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <div className={classes.mainContainer}>\r\n            <TransitionGroup>\r\n              <CSSTransition\r\n                key={location.key}\r\n                classNames=\"fade\"\r\n                timeout={300}\r\n              >\r\n                <Switch location={location}>\r\n                  <Route path={`${path}${APP_MODULES.SETTINGS_MODULE.path}`} component={SettingsPage}/>\r\n                  <Route path={`${path}departments/create`}>\r\n                    <DepartmentCreatePage authUser={userContext.user} />\r\n                  </Route>\r\n                  <Route path={`${path}departments/:departmentId/edit`}>\r\n                    <EditDepartmentPage authUser={userContext.user} />\r\n                  </Route>\r\n                  <Route path={`${path}departments`}>\r\n                    <DepartmentListPage authUser={userContext.user} />\r\n                  </Route>\r\n\r\n                  <Route path={`${path}supplier-management/suppliers/:supplierId/edit`}>\r\n                    <EditSupplierPage authUser={userContext.user}/>\r\n                  </Route>\r\n                  <Route path={`${path}supplier-management/suppliers/create`}>\r\n                    <CreateSupplierPage authUser={userContext.user} />\r\n                  </Route>\r\n                  <Route path={`${path}supplier-management/suppliers`}>\r\n                    <SupplierListPage authUser={userContext.user} />\r\n                  </Route>\r\n\r\n                  <Route path={`${path}user-management/users/create`} component={CreateUserPage}/>\r\n                  <Route path={`${path}user-management/users/:userId/edit`} component={EditUserPage}/>\r\n                  <Route path={`${path}user-management/users`} component={ListUserPage}/>\r\n                  <Route path={`${path}${APP_MODULES.REQUEST_ITEM_MODULE.path}/my-requests/create`} component={CreateItemRequestPage}/>\r\n                  <Route path={`${path}${APP_MODULES.REQUEST_ITEM_MODULE.path}/my-requests`} component={MyRequestListPage}/>\r\n                  <Route path={`${path}${APP_MODULES.REQUEST_ITEM_MODULE.path}/hod-item-requests`} component={HODItemRequestListPage}/>\r\n                  <Route path={`${path}${APP_MODULES.REQUEST_ITEM_MODULE.path}/general-manager-item-requests`} component={GeneralManagerItemRequestListPage}/>\r\n                  <Route path={`${path}${APP_MODULES.REQUEST_ITEM_MODULE.path}/procurement-officer-item-requests`} component={ProcurmentOfficerRequestListPage}/>\r\n                  <Route path=\"/not-authorized\" component={NotAuthorizedPage} />\r\n                  <Route exact path={`${path}`} component={HomePage}/>\r\n                </Switch>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n          </div>\r\n          <div style={{width:'100%', marginTop: 'auto'}}>\r\n            <CopyRight />\r\n          </div>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppLayout; //","export default __webpack_public_path__ + \"static/media/shopping2.5af434da.jpg\";","import { Avatar, CircularProgress, CssBaseline, FormControlLabel, Grid, makeStyles, TextField, Typography, Button, Box, Paper, Checkbox, Link } from '@material-ui/core';\r\nimport { LockOutlined } from '@material-ui/icons';\r\nimport React, { ChangeEvent, FormEvent, FunctionComponent, SyntheticEvent, useContext, useState } from 'react'\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport backgroungImg from '../assets/images/shopping2.jpg'\r\nimport CopyRight from '../components/core/CopyRight';\r\nimport { UserContext } from '../context/UserProvider';\r\nimport * as authservice from '../services/auth-service'\r\nimport { AuthUser, User } from '../types/User';\r\nimport { APP_PAGES_AND_ROLES } from '../utils/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${backgroungImg})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center'\r\n  },\r\n  image1: {\r\n    backgroundColor: '#0075c9'\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface StateType {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n}\r\n\r\nconst LoginPage: FunctionComponent = ()=> {\r\n  const [payload, setPayload] = useState<StateType>({email: '', password: '', rememberMe: false})\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const { path } = useRouteMatch()\r\n  const MySwal = withReactContent(Swal)\r\n\r\n  const userContext = useContext(UserContext)\r\n\r\n  const payloadValid = ()=> {\r\n    return payload.email && payload.password\r\n  }\r\n\r\n  //handle onChange event on inputs\r\n  const handleInputChange = (event: FormEvent<EventTarget>)=> {\r\n    const target = event.target as HTMLInputElement\r\n    const eventName: string = target.name;\r\n    const value: string = target.value;\r\n    setPayload({...payload, [eventName]: value})\r\n  }\r\n\r\n  const handleLoginSubmit = (event: SyntheticEvent)=> {\r\n    event.preventDefault();\r\n    setLoading(true)\r\n    authservice.login(payload)\r\n      .then(response => {\r\n        console.log('res', response)\r\n        const {data, message, status} = response\r\n        if(status === 'SUCCESS') {\r\n          if(status === 'SUCCESS') {\r\n            const employee = data.employee as User\r\n            //construct authuser\r\n            const authUser: AuthUser = {\r\n              id: employee.id,\r\n              firstName: employee.firstName,\r\n              lastName: employee.lastName,\r\n              fullName: employee.fullName,\r\n              email: employee.email,\r\n              phoneNumber: employee.phoneNo,\r\n              roles: employee.roles,\r\n              employeeId: employee.employeeId,\r\n              employeeLevel: employee.employeeLevel,\r\n              department: employee.department,\r\n              createdAt: employee.createdAt,\r\n              token: data.token\r\n            }\r\n            \r\n            window.localStorage.setItem(\"user\", JSON.stringify(authUser));\r\n            userContext.saveUser(authUser)\r\n            if(!authservice.userHasAnyOfRoles(authUser.roles, APP_PAGES_AND_ROLES.dashboardRoles)) {\r\n              return history.push('/request-management/my-requests')\r\n            }\r\n            history.push(`/`)\r\n          } else {\r\n            MySwal.fire({\r\n              icon: 'error',\r\n              title: 'Login',\r\n              text: message ? message : 'Failed to login'\r\n            })\r\n          }\r\n          \r\n        } else {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Login',\r\n            text: message ? message : 'Error'\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Login',\r\n          text: 'Login Failed'\r\n        })\r\n      })\r\n      .finally(()=> {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlined />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleLoginSubmit}>\r\n            <TextField\r\n              onChange={handleInputChange}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              value={payload.email}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus \r\n            />\r\n            <TextField\r\n              onChange={handleInputChange}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              value={payload.password}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value={rememberMe} color=\"primary\" name=\"remember\" onChange={handleInputChange} />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              disabled={loading || !payloadValid()}\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              { \r\n                loading &&\r\n                <CircularProgress size={25} style={{marginRight: '35px'}} color=\"secondary\" />\r\n              }\r\n              \r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <CopyRight />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LoginPage;","import { ThemeOptions } from \"@material-ui/core\"\r\n\r\nexport const lightTheme: ThemeOptions = {\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: '#0075c9',\r\n      dark: '#f4f3ef',\r\n      light: '#f4f3ef'\r\n    },\r\n    secondary: {\r\n      main: '#ff9e00',\r\n      dark: '#ff9e00',\r\n      light: '#ff9e00'\r\n    },\r\n    background: {\r\n      default: '#dae0e6',\r\n    }\r\n  }\r\n}\r\n\r\nexport const darkTheme: ThemeOptions = {\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#0075c9',\r\n      dark: '#1a1a1b',\r\n      light: '#1a1a1b'\r\n    },\r\n    background: {\r\n      default: '#303030',\r\n      paper: '#424242'\r\n    },\r\n    secondary: {\r\n      main: '#ff9e00',\r\n      dark: '#ff9e00',\r\n      light: '#ff9e00'\r\n    },\r\n  }\r\n}","import React, { useContext } from 'react';\r\nimport 'fontsource-roboto';\r\nimport './App.css';\r\nimport AppLayout from './components/layouts/AppLayout';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport LoginPage from './pages/LoginPage';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport { darkTheme, lightTheme } from './utils/theme';\r\nimport AppProvider, { AppContext } from './context/AppProvider';\r\nimport UserProvider from './context/UserProvider';\r\nimport { LIGHT_THEME_MODE } from './utils/constants';\r\nimport NotAuthorizedPage from './pages/NotAuthorizedPage';\r\n\r\nfunction App() {\r\n\r\n  const appContext = useContext(AppContext)\r\n  \r\n  console.log('APP CONTEXT THEME', appContext.theme)\r\n  \r\n  const themeData = appContext.theme === 'light' ? createMuiTheme(lightTheme) : createMuiTheme(darkTheme);\r\n  return (\r\n    <ThemeProvider theme={themeData}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <AppLayout />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { debugContextDevtool } from 'react-context-devtool';\r\nimport AppProvider from './context/AppProvider';\r\nimport UserProvider from './context/UserProvider';\r\n\r\nconst container = document.getElementById(\"root\") as HTMLElement\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <AppProvider>\r\n      <UserProvider>\r\n        <App />\r\n      </UserProvider>\r\n    </AppProvider>\r\n  </div>,\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n  container\r\n);\r\n\r\ndebugContextDevtool(container, {debugReducer: true, debugContext: true, disable: false, disableAutoMode: false})\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}